{"version":3,"file":"map_detach.spec.js","names":["description","makeTestGroup","getGPU","assert","GPUConst","GPUTest","g","test","desc","paramsSubcasesOnly","u","combine","combineWithParams","usage","BufferUsage","COPY_SRC","MAP_WRITE","COPY_DST","MAP_READ","mapMode","MapMode","WRITE","READ","unmap","destroy","deviceDestroy","unless","p","mappedAtCreation","undefined","fn","t","params","device","adapter","globalThis","_TRAMPOLINE_","rec","requestAdapter","requestDeviceTracked","buffer","trackForCleanup","createBuffer","size","mapAsync","arrayBuffer","getMappedRange","view","Uint8Array","expect","byteLength","length"],"sources":["../../../../../src/webgpu/api/operation/buffers/map_detach.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\n  Tests that TypedArrays created when mapping a GPUBuffer are detached when the\n  buffer is unmapped or destroyed.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { getGPU } from '../../../../common/util/navigator_gpu.js';\nimport { assert } from '../../../../common/util/util.js';\nimport { GPUConst } from '../../../constants.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('while_mapped').\ndesc(\n  `\n    Test that a mapped buffers are able to properly detach.\n    - Tests {mappable, unmappable mapAtCreation, mappable mapAtCreation}\n    - Tests while {mapped, mapped at creation, mapped at creation then unmapped and mapped again}\n    - When {unmap, destroy, unmap && destroy, device.destroy} is called`\n).\nparamsSubcasesOnly((u) =>\nu.\ncombine('mappedAtCreation', [false, true]).\ncombineWithParams([\n{ usage: GPUConst.BufferUsage.COPY_SRC },\n{ usage: GPUConst.BufferUsage.MAP_WRITE | GPUConst.BufferUsage.COPY_SRC },\n{ usage: GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.MAP_READ },\n{\n  usage: GPUConst.BufferUsage.MAP_WRITE | GPUConst.BufferUsage.COPY_SRC,\n  mapMode: GPUConst.MapMode.WRITE\n},\n{\n  usage: GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.MAP_READ,\n  mapMode: GPUConst.MapMode.READ\n}]\n).\ncombineWithParams([\n{ unmap: true, destroy: false },\n{ unmap: false, destroy: true },\n{ unmap: true, destroy: true },\n{ unmap: false, destroy: false, deviceDestroy: true }]\n).\nunless((p) => p.mappedAtCreation === false && p.mapMode === undefined)\n).\nfn(async (t) => {\n  const { usage, mapMode, mappedAtCreation, unmap, destroy, deviceDestroy } = t.params;\n\n  let device = t.device;\n  if (deviceDestroy) {\n    const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", getGPU(t.rec), getGPU(t.rec).requestAdapter, [], () => getGPU(t.rec).requestAdapter());\n    assert(adapter !== null);\n    device = await t.requestDeviceTracked(adapter);\n  }\n  const buffer = t.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n  device, device.createBuffer, [{\n    size: 4,\n    usage,\n    mappedAtCreation\n  }], () => device.createBuffer({ size: 4, usage, mappedAtCreation }))\n  );\n\n  if (mapMode !== undefined) {\n    if (mappedAtCreation) {\n      buffer.unmap();\n    }\n    await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [mapMode], () => buffer.mapAsync(mapMode));\n  }\n\n  const arrayBuffer = buffer.getMappedRange();\n  const view = new Uint8Array(arrayBuffer);\n  t.expect(arrayBuffer.byteLength === 4);\n  t.expect(view.length === 4);\n\n  if (unmap) buffer.unmap();\n  if (destroy) globalThis._TRAMPOLINE_(\"destroy\", buffer, buffer.destroy, [], () => buffer.destroy());\n  if (deviceDestroy) globalThis._TRAMPOLINE_(\"destroy\", device, device.destroy, [], () => device.destroy());\n\n  t.expect(arrayBuffer.byteLength === 0, 'ArrayBuffer should be detached');\n  t.expect(view.byteLength === 0, 'ArrayBufferView should be detached');\n});"],"mappings":"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","ignoreList":[]}