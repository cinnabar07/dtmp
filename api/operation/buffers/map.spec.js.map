{"version":3,"file":"map.spec.js","names":["description","makeTestGroup","assert","memcpy","checkElementsEqual","MappingTest","g","kSubcases","size","range","undefined","reifyMapRange","bufferSize","offset","mapRegionBoundModes","getRegionForMap","mapAsyncRegionLeft","mapAsyncRegionRight","regionLeft","regionRight","test","desc","params","u","combine","beginSubcases","combineWithParams","fn","t","rangeOffset","rangeSize","buffer","createBufferTracked","usage","GPUBufferUsage","COPY_SRC","MAP_WRITE","mapRegion","globalThis","_TRAMPOLINE_","mapAsync","GPUMapMode","WRITE","arrayBuffer","getMappedRange","checkMapWrite","range1","range2","mappedAtCreation","rangeOffset1","rangeSize1","rangeOffset2","rangeSize2","init","byteLength","expectedBuffer","ArrayBuffer","expected","Uint32Array","BYTES_PER_ELEMENT","data","i","length","unmap","init2","expected2","data2","expectGPUBufferValuesEqual","COPY_DST","MAP_READ","READ","actual","Uint8Array","expectOK","expectedArrayBuffer","uint8Expected","int8Expected","Int8Array","uint16Expected","Uint16Array","int16Expected","Int16Array","uint32Expected","int32Expected","Int32Array","float32Expected","Float32Array","float64Expected","Float64Array","Number","MAX_VALUE","MIN_VALUE","src","dst","mappedArrayBuffer","mappable","usageType","afterUnmap","afterDestroy","validationError","expectValidationError","expect","mapState","destroy","mapModeType","beforeUnmap","beforeDestroy","bufferCreationValidationError","mapMode","mapAsyncValidationError","promise","fail"],"sources":["../../../../../src/webgpu/api/operation/buffers/map.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTest the operation of buffer mapping, specifically the data contents written via\nmap-write/mappedAtCreation, and the contents of buffers returned by getMappedRange on\nbuffers which are mapped-read/mapped-write/mappedAtCreation.\n\nrange: used for getMappedRange\nmapRegion: used for mapAsync\n\nmapRegionBoundModes is used to get mapRegion from range:\n - default-expand: expand mapRegion to buffer bound by setting offset/size to undefined\n - explicit-expand: expand mapRegion to buffer bound by explicitly calculating offset/size\n - minimal: make mapRegion to be the same as range which is the minimal range to make getMappedRange input valid\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { assert, memcpy } from '../../../../common/util/util.js';\nimport { checkElementsEqual } from '../../../util/check_contents.js';\n\nimport { MappingTest } from './mapping_test.js';\n\nexport const g = makeTestGroup(MappingTest);\n\nconst kSubcases = [\n{ size: 0, range: [] },\n{ size: 0, range: [undefined] },\n{ size: 0, range: [undefined, undefined] },\n{ size: 0, range: [0] },\n{ size: 0, range: [0, undefined] },\n{ size: 0, range: [0, 0] },\n{ size: 12, range: [] },\n{ size: 12, range: [undefined] },\n{ size: 12, range: [undefined, undefined] },\n{ size: 12, range: [0] },\n{ size: 12, range: [0, undefined] },\n{ size: 12, range: [0, 12] },\n{ size: 12, range: [0, 0] },\n{ size: 12, range: [8] },\n{ size: 12, range: [8, undefined] },\n{ size: 12, range: [8, 4] },\n{ size: 28, range: [8, 8] },\n{ size: 28, range: [8, 12] },\n{ size: 512 * 1024, range: [] }];\n\n\nfunction reifyMapRange(bufferSize, range) {\n  const offset = range[0] ?? 0;\n  return [offset, range[1] ?? bufferSize - offset];\n}\n\nconst mapRegionBoundModes = ['default-expand', 'explicit-expand', 'minimal'];\n\n\nfunction getRegionForMap(\nbufferSize,\nrange,\n{\n  mapAsyncRegionLeft,\n  mapAsyncRegionRight\n\n\n\n})\n{\n  const regionLeft = mapAsyncRegionLeft === 'minimal' ? range[0] : 0;\n  const regionRight = mapAsyncRegionRight === 'minimal' ? range[0] + range[1] : bufferSize;\n  return [\n  mapAsyncRegionLeft === 'default-expand' ? undefined : regionLeft,\n  mapAsyncRegionRight === 'default-expand' ? undefined : regionRight - regionLeft];\n\n}\n\ng.test('mapAsync,write').\ndesc(\n  `Use map-write to write to various ranges of variously-sized buffers, then expectContents\n(which does copyBufferToBuffer + map-read) to ensure the contents were written.`\n).\nparams((u) =>\nu.\ncombine('mapAsyncRegionLeft', mapRegionBoundModes).\ncombine('mapAsyncRegionRight', mapRegionBoundModes).\nbeginSubcases().\ncombineWithParams(kSubcases)\n).\nfn(async (t) => {\n  const { size, range } = t.params;\n  const [rangeOffset, rangeSize] = reifyMapRange(size, range);\n\n  const buffer = t.createBufferTracked({\n    size,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE\n  });\n\n  const mapRegion = getRegionForMap(size, [rangeOffset, rangeSize], t.params);\n  await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.WRITE, ...mapRegion], () => buffer.mapAsync(GPUMapMode.WRITE, ...mapRegion));\n  const arrayBuffer = buffer.getMappedRange(...range);\n  t.checkMapWrite(buffer, rangeOffset, arrayBuffer, rangeSize);\n});\n\ng.test('mapAsync,write,unchanged_ranges_preserved').\ndesc(\n  `Use mappedAtCreation or mapAsync to write to various ranges of variously-sized buffers, then\nuse mapAsync to map a different range and zero it out. Finally use expectGPUBufferValuesEqual\n(which does copyBufferToBuffer + map-read) to verify that contents originally written outside the\nsecond mapped range were not altered.`\n).\nparams((u) =>\nu.\nbeginSubcases().\ncombine('mappedAtCreation', [false, true]).\ncombineWithParams([\n{ size: 12, range1: [], range2: [8] },\n{ size: 12, range1: [], range2: [0, 8] },\n{ size: 12, range1: [0, 8], range2: [8] },\n{ size: 12, range1: [8], range2: [0, 8] },\n{ size: 28, range1: [], range2: [8, 8] },\n{ size: 28, range1: [8, 16], range2: [16, 8] },\n{ size: 32, range1: [16, 12], range2: [8, 16] },\n{ size: 32, range1: [8, 8], range2: [24, 4] }]\n)\n).\nfn(async (t) => {\n  const { size, range1, range2, mappedAtCreation } = t.params;\n  const [rangeOffset1, rangeSize1] = reifyMapRange(size, range1);\n  const [rangeOffset2, rangeSize2] = reifyMapRange(size, range2);\n\n  const buffer = t.createBufferTracked({\n    mappedAtCreation,\n    size,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE\n  });\n\n  // If the buffer is not mappedAtCreation map it now.\n  if (!mappedAtCreation) {\n    await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.WRITE], () => buffer.mapAsync(GPUMapMode.WRITE));\n  }\n\n  // Set the initial contents of the buffer.\n  const init = buffer.getMappedRange(...range1);\n\n  assert(init.byteLength === rangeSize1);\n  const expectedBuffer = new ArrayBuffer(size);\n  const expected = new Uint32Array(\n    expectedBuffer,\n    rangeOffset1,\n    rangeSize1 / Uint32Array.BYTES_PER_ELEMENT\n  );\n  const data = new Uint32Array(init);\n  for (let i = 0; i < data.length; ++i) {\n    data[i] = expected[i] = i + 1;\n  }\n  buffer.unmap();\n\n  // Write to a second range of the buffer\n  await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.WRITE, ...range2], () => buffer.mapAsync(GPUMapMode.WRITE, ...range2));\n  const init2 = buffer.getMappedRange(...range2);\n\n  assert(init2.byteLength === rangeSize2);\n  const expected2 = new Uint32Array(\n    expectedBuffer,\n    rangeOffset2,\n    rangeSize2 / Uint32Array.BYTES_PER_ELEMENT\n  );\n  const data2 = new Uint32Array(init2);\n  for (let i = 0; i < data2.length; ++i) {\n    data2[i] = expected2[i] = 0;\n  }\n  buffer.unmap();\n\n  // Verify that the range of the buffer which was not overwritten was preserved.\n  t.expectGPUBufferValuesEqual(buffer, expected, rangeOffset1);\n});\n\ng.test('mapAsync,read').\ndesc(\n  `Use mappedAtCreation to initialize various ranges of variously-sized buffers, then\nmap-read and check the read-back result.`\n).\nparams((u) =>\nu.\ncombine('mapAsyncRegionLeft', mapRegionBoundModes).\ncombine('mapAsyncRegionRight', mapRegionBoundModes).\nbeginSubcases().\ncombineWithParams(kSubcases)\n).\nfn(async (t) => {\n  const { size, range } = t.params;\n  const [rangeOffset, rangeSize] = reifyMapRange(size, range);\n\n  const buffer = t.createBufferTracked({\n    mappedAtCreation: true,\n    size,\n    usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ\n  });\n  const init = buffer.getMappedRange(...range);\n\n  assert(init.byteLength === rangeSize);\n  const expected = new Uint32Array(new ArrayBuffer(rangeSize));\n  const data = new Uint32Array(init);\n  for (let i = 0; i < data.length; ++i) {\n    data[i] = expected[i] = i + 1;\n  }\n  buffer.unmap();\n\n  const mapRegion = getRegionForMap(size, [rangeOffset, rangeSize], t.params);\n  await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.READ, ...mapRegion], () => buffer.mapAsync(GPUMapMode.READ, ...mapRegion));\n  const actual = new Uint8Array(buffer.getMappedRange(...range));\n  t.expectOK(checkElementsEqual(actual, new Uint8Array(expected.buffer)));\n});\n\ng.test('mapAsync,read,typedArrayAccess').\ndesc(`Use various TypedArray types to read back from a mapped buffer`).\nparams((u) =>\nu.\ncombine('mapAsyncRegionLeft', mapRegionBoundModes).\ncombine('mapAsyncRegionRight', mapRegionBoundModes).\nbeginSubcases().\ncombineWithParams([\n{ size: 80, range: [] },\n{ size: 160, range: [] },\n{ size: 160, range: [0, 80] },\n{ size: 160, range: [80] },\n{ size: 160, range: [40, 120] },\n{ size: 160, range: [40] }]\n)\n).\nfn(async (t) => {\n  const { size, range } = t.params;\n  const [rangeOffset, rangeSize] = reifyMapRange(size, range);\n\n  // Fill an array buffer with a variety of values of different types.\n  const expectedArrayBuffer = new ArrayBuffer(80);\n  const uint8Expected = new Uint8Array(expectedArrayBuffer, 0, 2);\n  uint8Expected[0] = 1;\n  uint8Expected[1] = 255;\n\n  const int8Expected = new Int8Array(expectedArrayBuffer, 2, 2);\n  int8Expected[0] = -1;\n  int8Expected[1] = 127;\n\n  const uint16Expected = new Uint16Array(expectedArrayBuffer, 4, 2);\n  uint16Expected[0] = 1;\n  uint16Expected[1] = 65535;\n\n  const int16Expected = new Int16Array(expectedArrayBuffer, 8, 2);\n  int16Expected[0] = -1;\n  int16Expected[1] = 32767;\n\n  const uint32Expected = new Uint32Array(expectedArrayBuffer, 12, 2);\n  uint32Expected[0] = 1;\n  uint32Expected[1] = 4294967295;\n\n  const int32Expected = new Int32Array(expectedArrayBuffer, 20, 2);\n  int32Expected[2] = -1;\n  int32Expected[3] = 2147483647;\n\n  const float32Expected = new Float32Array(expectedArrayBuffer, 28, 3);\n  float32Expected[0] = 1;\n  float32Expected[1] = -1;\n  float32Expected[2] = 12345.6789;\n\n  const float64Expected = new Float64Array(expectedArrayBuffer, 40, 5);\n  float64Expected[0] = 1;\n  float64Expected[1] = -1;\n  float64Expected[2] = 12345.6789;\n  float64Expected[3] = Number.MAX_VALUE;\n  float64Expected[4] = Number.MIN_VALUE;\n\n  const buffer = t.createBufferTracked({\n    mappedAtCreation: true,\n    size,\n    usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ\n  });\n  const init = buffer.getMappedRange(...range);\n\n  // Copy the expected values into the mapped range.\n  assert(init.byteLength === rangeSize);\n  memcpy({ src: expectedArrayBuffer }, { dst: init });\n  buffer.unmap();\n\n  const mapRegion = getRegionForMap(size, [rangeOffset, rangeSize], t.params);\n  await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.READ, ...mapRegion], () => buffer.mapAsync(GPUMapMode.READ, ...mapRegion));\n  const mappedArrayBuffer = buffer.getMappedRange(...range);\n  t.expectOK(checkElementsEqual(new Uint8Array(mappedArrayBuffer, 0, 2), uint8Expected));\n  t.expectOK(checkElementsEqual(new Int8Array(mappedArrayBuffer, 2, 2), int8Expected));\n  t.expectOK(checkElementsEqual(new Uint16Array(mappedArrayBuffer, 4, 2), uint16Expected));\n  t.expectOK(checkElementsEqual(new Int16Array(mappedArrayBuffer, 8, 2), int16Expected));\n  t.expectOK(checkElementsEqual(new Uint32Array(mappedArrayBuffer, 12, 2), uint32Expected));\n  t.expectOK(checkElementsEqual(new Int32Array(mappedArrayBuffer, 20, 2), int32Expected));\n  t.expectOK(checkElementsEqual(new Float32Array(mappedArrayBuffer, 28, 3), float32Expected));\n  t.expectOK(checkElementsEqual(new Float64Array(mappedArrayBuffer, 40, 5), float64Expected));\n});\n\ng.test('mappedAtCreation').\ndesc(\n  `Use mappedAtCreation to write to various ranges of variously-sized buffers created either\nwith or without the MAP_WRITE usage (since this could affect the mappedAtCreation upload path),\nthen expectContents (which does copyBufferToBuffer + map-read) to ensure the contents were written.`\n).\nparams((u) =>\nu //\n.combine('mappable', [false, true]).\nbeginSubcases().\ncombineWithParams(kSubcases)\n).\nfn((t) => {\n  const { size, range, mappable } = t.params;\n  const [, rangeSize] = reifyMapRange(size, range);\n\n  const buffer = t.createBufferTracked({\n    mappedAtCreation: true,\n    size,\n    usage: GPUBufferUsage.COPY_SRC | (mappable ? GPUBufferUsage.MAP_WRITE : 0)\n  });\n  const arrayBuffer = buffer.getMappedRange(...range);\n  t.checkMapWrite(buffer, range[0] ?? 0, arrayBuffer, rangeSize);\n});\n\ng.test('remapped_for_write').\ndesc(\n  `Use mappedAtCreation or mapAsync to write to various ranges of variously-sized buffers created\nwith the MAP_WRITE usage, then mapAsync again and ensure that the previously written values are\nstill present in the mapped buffer.`\n).\nparams((u) =>\nu //\n.combine('mapAsyncRegionLeft', mapRegionBoundModes).\ncombine('mapAsyncRegionRight', mapRegionBoundModes).\nbeginSubcases().\ncombine('mappedAtCreation', [false, true]).\ncombineWithParams(kSubcases)\n).\nfn(async (t) => {\n  const { size, range, mappedAtCreation } = t.params;\n  const [rangeOffset, rangeSize] = reifyMapRange(size, range);\n\n  const buffer = t.createBufferTracked({\n    mappedAtCreation,\n    size,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE\n  });\n\n  // If the buffer is not mappedAtCreation map it now.\n  if (!mappedAtCreation) {\n    await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.WRITE], () => buffer.mapAsync(GPUMapMode.WRITE));\n  }\n\n  // Set the initial contents of the buffer.\n  const init = buffer.getMappedRange(...range);\n\n  assert(init.byteLength === rangeSize);\n  const expected = new Uint32Array(new ArrayBuffer(rangeSize));\n  const data = new Uint32Array(init);\n  for (let i = 0; i < data.length; ++i) {\n    data[i] = expected[i] = i + 1;\n  }\n  buffer.unmap();\n\n  // Check that upon remapping the for WRITE the values in the buffer are\n  // still the same.\n  const mapRegion = getRegionForMap(size, [rangeOffset, rangeSize], t.params);\n  await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.WRITE, ...mapRegion], () => buffer.mapAsync(GPUMapMode.WRITE, ...mapRegion));\n  const actual = new Uint8Array(buffer.getMappedRange(...range));\n  t.expectOK(checkElementsEqual(actual, new Uint8Array(expected.buffer)));\n});\n\ng.test('mappedAtCreation,mapState').\ndesc('Test that exposed map state of buffer created with mappedAtCreation has expected values.').\nparams((u) =>\nu.\ncombine('usageType', ['invalid', 'read', 'write']).\ncombine('afterUnmap', [false, true]).\ncombine('afterDestroy', [false, true])\n).\nfn((t) => {\n  const { usageType, afterUnmap, afterDestroy } = t.params;\n  const usage =\n  usageType === 'read' ?\n  GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ :\n  usageType === 'write' ?\n  GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE :\n  0;\n  const validationError = usage === 0;\n  const size = 8;\n  const range = [0, 8];\n\n  let buffer;\n  t.expectValidationError(() => {\n    buffer = t.createBufferTracked({\n      mappedAtCreation: true,\n      size,\n      usage\n    });\n  }, validationError);\n\n  // mapState must be \"mapped\" regardless of validation error\n  t.expect(buffer.mapState === 'mapped');\n\n  // getMappedRange must not change the map state\n  buffer.getMappedRange(...range);\n  t.expect(buffer.mapState === 'mapped');\n\n  if (afterUnmap) {\n    buffer.unmap();\n    t.expect(buffer.mapState === 'unmapped');\n  }\n\n  if (afterDestroy) {\n    globalThis._TRAMPOLINE_(\"destroy\", buffer!, buffer!.destroy, [], () => buffer!.destroy());\n    t.expect(buffer.mapState === 'unmapped');\n  }\n});\n\ng.test('mapAsync,mapState').\ndesc('Test that exposed map state of buffer mapped with mapAsync has expected values.').\nparams((u) =>\nu.\ncombine('usageType', ['invalid', 'read', 'write']).\ncombine('mapModeType', ['READ', 'WRITE']).\ncombine('beforeUnmap', [false, true]).\ncombine('beforeDestroy', [false, true]).\ncombine('afterUnmap', [false, true]).\ncombine('afterDestroy', [false, true])\n).\nfn(async (t) => {\n  const { usageType, mapModeType, beforeUnmap, beforeDestroy, afterUnmap, afterDestroy } =\n  t.params;\n  const size = 8;\n  const range = [0, 8];\n  const usage =\n  usageType === 'read' ?\n  GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ :\n  usageType === 'write' ?\n  GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE :\n  0;\n  const bufferCreationValidationError = usage === 0;\n  const mapMode = GPUMapMode[mapModeType];\n\n  let buffer;\n  t.expectValidationError(() => {\n    buffer = t.createBufferTracked({\n      mappedAtCreation: false,\n      size,\n      usage\n    });\n  }, bufferCreationValidationError);\n\n  t.expect(buffer.mapState === 'unmapped');\n\n  {\n    const mapAsyncValidationError =\n    bufferCreationValidationError ||\n    mapMode === GPUMapMode.READ && !(usage & GPUBufferUsage.MAP_READ) ||\n    mapMode === GPUMapMode.WRITE && !(usage & GPUBufferUsage.MAP_WRITE);\n    let promise;\n    t.expectValidationError(() => {\n      promise = globalThis._TRAMPOLINE_(\"mapAsync\", buffer!, buffer!.mapAsync, [mapMode], () => buffer!.mapAsync(mapMode));\n    }, mapAsyncValidationError);\n    t.expect(buffer.mapState === 'pending');\n\n    try {\n      if (beforeUnmap) {\n        buffer.unmap();\n        t.expect(buffer.mapState === 'unmapped');\n      }\n      if (beforeDestroy) {\n        globalThis._TRAMPOLINE_(\"destroy\", buffer!, buffer!.destroy, [], () => buffer!.destroy());\n        t.expect(buffer.mapState === 'unmapped');\n      }\n\n      await promise;\n      t.expect(buffer.mapState === 'mapped');\n\n      // getMappedRange must not change the map state\n      buffer.getMappedRange(...range);\n      t.expect(buffer.mapState === 'mapped');\n    } catch {\n      // unmapped before resolve, destroyed before resolve, or mapAsync validation error\n      // will end up with rejection and 'unmapped'\n      t.expect(buffer.mapState === 'unmapped');\n    }\n  }\n\n  // If buffer is already mapped test mapAsync on already mapped buffer\n  if (buffer.mapState === 'mapped') {\n    // mapAsync on already mapped buffer must be rejected with a validation error\n    // and the map state must keep 'mapped'\n    let promise;\n    t.expectValidationError(() => {\n      promise = globalThis._TRAMPOLINE_(\"mapAsync\", buffer!, buffer!.mapAsync, [GPUMapMode.WRITE], () => buffer!.mapAsync(GPUMapMode.WRITE));\n    }, true);\n    t.expect(buffer.mapState === 'mapped');\n\n    try {\n      await promise;\n      t.fail('mapAsync on already mapped buffer must not succeed.');\n    } catch {\n      t.expect(buffer.mapState === 'mapped');\n    }\n  }\n\n  if (afterUnmap) {\n    buffer.unmap();\n    t.expect(buffer.mapState === 'unmapped');\n  }\n\n  if (afterDestroy) {\n    globalThis._TRAMPOLINE_(\"destroy\", buffer!, buffer!.destroy, [], () => buffer!.destroy());\n    t.expect(buffer.mapState === 'unmapped');\n  }\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,4CAA4C,CAC5E,SAASC,MAAM,EAAEC,MAAM,QAAQ,iCAAiC,CAChE,SAASC,kBAAkB,QAAQ,iCAAiC;;AAEpE,SAASC,WAAW,QAAQ,mBAAmB;;AAE/C,OAAO,MAAMC,CAAC,GAAGL,aAAa,CAACI,WAAW,CAAC;;AAE3C,MAAME,SAAS,GAAG;AAClB,EAAEC,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACtB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAACC,SAAS,CAAC,CAAC,CAAC;AAC/B,EAAEF,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAACC,SAAS,EAAEA,SAAS,CAAC,CAAC,CAAC;AAC1C,EAAEF,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,CAAC;AAClC,EAAEF,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1B,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACvB,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAACC,SAAS,CAAC,CAAC,CAAC;AAChC,EAAEF,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAACC,SAAS,EAAEA,SAAS,CAAC,CAAC,CAAC;AAC3C,EAAEF,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,CAAC;AACnC,EAAEF,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5B,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,CAAC;AACnC,EAAEF,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B,EAAED,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5B,EAAED,IAAI,EAAE,GAAG,GAAG,IAAI,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;;;AAGhC,SAASE,aAAaA,CAACC,UAAU,EAAEH,KAAK,EAAE;EACxC,MAAMI,MAAM,GAAGJ,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;EAC5B,OAAO,CAACI,MAAM,EAAEJ,KAAK,CAAC,CAAC,CAAC,IAAIG,UAAU,GAAGC,MAAM,CAAC;AAClD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,SAAS,CAAC;;;AAG5E,SAASC,eAAeA;AACxBH,UAAU;AACVH,KAAK;AACL;EACEO,kBAAkB;EAClBC;;;;AAIF,CAAC;AACD;EACE,MAAMC,UAAU,GAAGF,kBAAkB,KAAK,SAAS,GAAGP,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;EAClE,MAAMU,WAAW,GAAGF,mBAAmB,KAAK,SAAS,GAAGR,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGG,UAAU;EACxF,OAAO;EACPI,kBAAkB,KAAK,gBAAgB,GAAGN,SAAS,GAAGQ,UAAU;EAChED,mBAAmB,KAAK,gBAAgB,GAAGP,SAAS,GAAGS,WAAW,GAAGD,UAAU,CAAC;;AAElF;;AAEAZ,CAAC,CAACc,IAAI,CAAC,gBAAgB,CAAC;AACxBC,IAAI;EACF;AACF;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,oBAAoB,EAAEV,mBAAmB,CAAC;AAClDU,OAAO,CAAC,qBAAqB,EAAEV,mBAAmB,CAAC;AACnDW,aAAa,CAAC,CAAC;AACfC,iBAAiB,CAACnB,SAAS;AAC3B,CAAC;AACDoB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAM,EAAEpB,IAAI,EAAEC,KAAK,CAAC,CAAC,GAAGmB,CAAC,CAACN,MAAM;EAChC,MAAM,CAACO,WAAW,EAAEC,SAAS,CAAC,GAAGnB,aAAa,CAACH,IAAI,EAAEC,KAAK,CAAC;;EAE3D,MAAMsB,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;IACnCxB,IAAI;IACJyB,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE;EAClD,CAAC,CAAC;;EAEF,MAAMC,SAAS,GAAGtB,eAAe,CAACP,IAAI,EAAE,CAACqB,WAAW,EAAEC,SAAS,CAAC,EAAEF,CAAC,CAACN,MAAM,CAAC;EAC3E,MAAMgB,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAEA,MAAM,CAACS,QAAQ,EAAE,CAACC,UAAU,CAACC,KAAK,EAAE,GAAGL,SAAS,CAAC,EAAE,MAAAC,UAAA,CAAAC,YAAA,aAAMR,MAAM,EAANA,MAAM,CAAAS,QAAA,GAAUC,UAAU,CAACC,KAAK,EAAE,GAAGL,SAAS,SAA9CN,MAAM,CAACS,QAAQ,CAACC,UAAU,CAACC,KAAK,EAAE,GAAGL,SAAS,EAAC,CAAC;EAC3J,MAAMM,WAAW,GAAGZ,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;EACnDmB,CAAC,CAACiB,aAAa,CAACd,MAAM,EAAEF,WAAW,EAAEc,WAAW,EAAEb,SAAS,CAAC;AAC9D,CAAC,CAAC;;AAEFxB,CAAC,CAACc,IAAI,CAAC,2CAA2C,CAAC;AACnDC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDE,aAAa,CAAC,CAAC;AACfD,OAAO,CAAC,kBAAkB,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1CE,iBAAiB,CAAC;AAClB,EAAElB,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,EAAE,EAAEC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,EAAEvC,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,EAAE,EAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxC,EAAEvC,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,EAAEvC,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzC,EAAEvC,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,EAAE,EAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxC,EAAEvC,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,EAAEvC,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/C,EAAEvC,IAAI,EAAE,EAAE,EAAEsC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7C;AACA,CAAC;AACDpB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAM,EAAEpB,IAAI,EAAEsC,MAAM,EAAEC,MAAM,EAAEC,gBAAgB,CAAC,CAAC,GAAGpB,CAAC,CAACN,MAAM;EAC3D,MAAM,CAAC2B,YAAY,EAAEC,UAAU,CAAC,GAAGvC,aAAa,CAACH,IAAI,EAAEsC,MAAM,CAAC;EAC9D,MAAM,CAACK,YAAY,EAAEC,UAAU,CAAC,GAAGzC,aAAa,CAACH,IAAI,EAAEuC,MAAM,CAAC;;EAE9D,MAAMhB,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;IACnCgB,gBAAgB;IAChBxC,IAAI;IACJyB,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE;EAClD,CAAC,CAAC;;EAEF;EACA,IAAI,CAACY,gBAAgB,EAAE;IACrB,MAAMV,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAEA,MAAM,CAACS,QAAQ,EAAE,CAACC,UAAU,CAACC,KAAK,CAAC,EAAE,MAAAJ,UAAA,CAAAC,YAAA,aAAMR,MAAM,EAANA,MAAM,CAAAS,QAAA,GAAUC,UAAU,CAACC,KAAK,SAAhCX,MAAM,CAACS,QAAQ,CAACC,UAAU,CAACC,KAAK,EAAC,CAAC;EACjI;;EAEA;EACA,MAAMW,IAAI,GAAGtB,MAAM,CAACa,cAAc,CAAC,GAAGE,MAAM,CAAC;;EAE7C5C,MAAM,CAACmD,IAAI,CAACC,UAAU,KAAKJ,UAAU,CAAC;EACtC,MAAMK,cAAc,GAAG,IAAIC,WAAW,CAAChD,IAAI,CAAC;EAC5C,MAAMiD,QAAQ,GAAG,IAAIC,WAAW;IAC9BH,cAAc;IACdN,YAAY;IACZC,UAAU,GAAGQ,WAAW,CAACC;EAC3B,CAAC;EACD,MAAMC,IAAI,GAAG,IAAIF,WAAW,CAACL,IAAI,CAAC;EAClC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAE,EAAED,CAAC,EAAE;IACpCD,IAAI,CAACC,CAAC,CAAC,GAAGJ,QAAQ,CAACI,CAAC,CAAC,GAAGA,CAAC,GAAG,CAAC;EAC/B;EACA9B,MAAM,CAACgC,KAAK,CAAC,CAAC;;EAEd;EACA,MAAMzB,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAEA,MAAM,CAACS,QAAQ,EAAE,CAACC,UAAU,CAACC,KAAK,EAAE,GAAGK,MAAM,CAAC,EAAE,MAAAT,UAAA,CAAAC,YAAA,aAAMR,MAAM,EAANA,MAAM,CAAAS,QAAA,GAAUC,UAAU,CAACC,KAAK,EAAE,GAAGK,MAAM,SAA3ChB,MAAM,CAACS,QAAQ,CAACC,UAAU,CAACC,KAAK,EAAE,GAAGK,MAAM,EAAC,CAAC;EACrJ,MAAMiB,KAAK,GAAGjC,MAAM,CAACa,cAAc,CAAC,GAAGG,MAAM,CAAC;;EAE9C7C,MAAM,CAAC8D,KAAK,CAACV,UAAU,KAAKF,UAAU,CAAC;EACvC,MAAMa,SAAS,GAAG,IAAIP,WAAW;IAC/BH,cAAc;IACdJ,YAAY;IACZC,UAAU,GAAGM,WAAW,CAACC;EAC3B,CAAC;EACD,MAAMO,KAAK,GAAG,IAAIR,WAAW,CAACM,KAAK,CAAC;EACpC,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,KAAK,CAACJ,MAAM,EAAE,EAAED,CAAC,EAAE;IACrCK,KAAK,CAACL,CAAC,CAAC,GAAGI,SAAS,CAACJ,CAAC,CAAC,GAAG,CAAC;EAC7B;EACA9B,MAAM,CAACgC,KAAK,CAAC,CAAC;;EAEd;EACAnC,CAAC,CAACuC,0BAA0B,CAACpC,MAAM,EAAE0B,QAAQ,EAAER,YAAY,CAAC;AAC9D,CAAC,CAAC;;AAEF3C,CAAC,CAACc,IAAI,CAAC,eAAe,CAAC;AACvBC,IAAI;EACF;AACF;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,oBAAoB,EAAEV,mBAAmB,CAAC;AAClDU,OAAO,CAAC,qBAAqB,EAAEV,mBAAmB,CAAC;AACnDW,aAAa,CAAC,CAAC;AACfC,iBAAiB,CAACnB,SAAS;AAC3B,CAAC;AACDoB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAM,EAAEpB,IAAI,EAAEC,KAAK,CAAC,CAAC,GAAGmB,CAAC,CAACN,MAAM;EAChC,MAAM,CAACO,WAAW,EAAEC,SAAS,CAAC,GAAGnB,aAAa,CAACH,IAAI,EAAEC,KAAK,CAAC;;EAE3D,MAAMsB,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;IACnCgB,gBAAgB,EAAE,IAAI;IACtBxC,IAAI;IACJyB,KAAK,EAAEC,cAAc,CAACkC,QAAQ,GAAGlC,cAAc,CAACmC;EAClD,CAAC,CAAC;EACF,MAAMhB,IAAI,GAAGtB,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;;EAE5CP,MAAM,CAACmD,IAAI,CAACC,UAAU,KAAKxB,SAAS,CAAC;EACrC,MAAM2B,QAAQ,GAAG,IAAIC,WAAW,CAAC,IAAIF,WAAW,CAAC1B,SAAS,CAAC,CAAC;EAC5D,MAAM8B,IAAI,GAAG,IAAIF,WAAW,CAACL,IAAI,CAAC;EAClC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAE,EAAED,CAAC,EAAE;IACpCD,IAAI,CAACC,CAAC,CAAC,GAAGJ,QAAQ,CAACI,CAAC,CAAC,GAAGA,CAAC,GAAG,CAAC;EAC/B;EACA9B,MAAM,CAACgC,KAAK,CAAC,CAAC;;EAEd,MAAM1B,SAAS,GAAGtB,eAAe,CAACP,IAAI,EAAE,CAACqB,WAAW,EAAEC,SAAS,CAAC,EAAEF,CAAC,CAACN,MAAM,CAAC;EAC3E,MAAMgB,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAEA,MAAM,CAACS,QAAQ,EAAE,CAACC,UAAU,CAAC6B,IAAI,EAAE,GAAGjC,SAAS,CAAC,EAAE,MAAAC,UAAA,CAAAC,YAAA,aAAMR,MAAM,EAANA,MAAM,CAAAS,QAAA,GAAUC,UAAU,CAAC6B,IAAI,EAAE,GAAGjC,SAAS,SAA7CN,MAAM,CAACS,QAAQ,CAACC,UAAU,CAAC6B,IAAI,EAAE,GAAGjC,SAAS,EAAC,CAAC;EACzJ,MAAMkC,MAAM,GAAG,IAAIC,UAAU,CAACzC,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC,CAAC;EAC9DmB,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAACmE,MAAM,EAAE,IAAIC,UAAU,CAACf,QAAQ,CAAC1B,MAAM,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC;;AAEFzB,CAAC,CAACc,IAAI,CAAC,gCAAgC,CAAC;AACxCC,IAAI,CAAC,gEAAgE,CAAC;AACtEC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,oBAAoB,EAAEV,mBAAmB,CAAC;AAClDU,OAAO,CAAC,qBAAqB,EAAEV,mBAAmB,CAAC;AACnDW,aAAa,CAAC,CAAC;AACfC,iBAAiB,CAAC;AAClB,EAAElB,IAAI,EAAE,EAAE,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACvB,EAAED,IAAI,EAAE,GAAG,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,IAAI,EAAE,GAAG,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC7B,EAAED,IAAI,EAAE,GAAG,EAAEC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,EAAED,IAAI,EAAE,GAAG,EAAEC,KAAK,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AAC/B,EAAED,IAAI,EAAE,GAAG,EAAEC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B;AACA,CAAC;AACDkB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAM,EAAEpB,IAAI,EAAEC,KAAK,CAAC,CAAC,GAAGmB,CAAC,CAACN,MAAM;EAChC,MAAM,CAACO,WAAW,EAAEC,SAAS,CAAC,GAAGnB,aAAa,CAACH,IAAI,EAAEC,KAAK,CAAC;;EAE3D;EACA,MAAMiE,mBAAmB,GAAG,IAAIlB,WAAW,CAAC,EAAE,CAAC;EAC/C,MAAMmB,aAAa,GAAG,IAAIH,UAAU,CAACE,mBAAmB,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/DC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC;EACpBA,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG;;EAEtB,MAAMC,YAAY,GAAG,IAAIC,SAAS,CAACH,mBAAmB,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7DE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpBA,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG;;EAErB,MAAME,cAAc,GAAG,IAAIC,WAAW,CAACL,mBAAmB,EAAE,CAAC,EAAE,CAAC,CAAC;EACjEI,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC;EACrBA,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK;;EAEzB,MAAME,aAAa,GAAG,IAAIC,UAAU,CAACP,mBAAmB,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/DM,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACrBA,aAAa,CAAC,CAAC,CAAC,GAAG,KAAK;;EAExB,MAAME,cAAc,GAAG,IAAIxB,WAAW,CAACgB,mBAAmB,EAAE,EAAE,EAAE,CAAC,CAAC;EAClEQ,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC;EACrBA,cAAc,CAAC,CAAC,CAAC,GAAG,UAAU;;EAE9B,MAAMC,aAAa,GAAG,IAAIC,UAAU,CAACV,mBAAmB,EAAE,EAAE,EAAE,CAAC,CAAC;EAChES,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACrBA,aAAa,CAAC,CAAC,CAAC,GAAG,UAAU;;EAE7B,MAAME,eAAe,GAAG,IAAIC,YAAY,CAACZ,mBAAmB,EAAE,EAAE,EAAE,CAAC,CAAC;EACpEW,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC;EACtBA,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACvBA,eAAe,CAAC,CAAC,CAAC,GAAG,UAAU;;EAE/B,MAAME,eAAe,GAAG,IAAIC,YAAY,CAACd,mBAAmB,EAAE,EAAE,EAAE,CAAC,CAAC;EACpEa,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC;EACtBA,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACvBA,eAAe,CAAC,CAAC,CAAC,GAAG,UAAU;EAC/BA,eAAe,CAAC,CAAC,CAAC,GAAGE,MAAM,CAACC,SAAS;EACrCH,eAAe,CAAC,CAAC,CAAC,GAAGE,MAAM,CAACE,SAAS;;EAErC,MAAM5D,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;IACnCgB,gBAAgB,EAAE,IAAI;IACtBxC,IAAI;IACJyB,KAAK,EAAEC,cAAc,CAACkC,QAAQ,GAAGlC,cAAc,CAACmC;EAClD,CAAC,CAAC;EACF,MAAMhB,IAAI,GAAGtB,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;;EAE5C;EACAP,MAAM,CAACmD,IAAI,CAACC,UAAU,KAAKxB,SAAS,CAAC;EACrC3B,MAAM,CAAC,EAAEyF,GAAG,EAAElB,mBAAmB,CAAC,CAAC,EAAE,EAAEmB,GAAG,EAAExC,IAAI,CAAC,CAAC,CAAC;EACnDtB,MAAM,CAACgC,KAAK,CAAC,CAAC;;EAEd,MAAM1B,SAAS,GAAGtB,eAAe,CAACP,IAAI,EAAE,CAACqB,WAAW,EAAEC,SAAS,CAAC,EAAEF,CAAC,CAACN,MAAM,CAAC;EAC3E,MAAMgB,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAEA,MAAM,CAACS,QAAQ,EAAE,CAACC,UAAU,CAAC6B,IAAI,EAAE,GAAGjC,SAAS,CAAC,EAAE,MAAAC,UAAA,CAAAC,YAAA,aAAMR,MAAM,EAANA,MAAM,CAAAS,QAAA,GAAUC,UAAU,CAAC6B,IAAI,EAAE,GAAGjC,SAAS,SAA7CN,MAAM,CAACS,QAAQ,CAACC,UAAU,CAAC6B,IAAI,EAAE,GAAGjC,SAAS,EAAC,CAAC;EACzJ,MAAMyD,iBAAiB,GAAG/D,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;EACzDmB,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAIoE,UAAU,CAACsB,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEnB,aAAa,CAAC,CAAC;EACtF/C,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAIyE,SAAS,CAACiB,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,EAAElB,YAAY,CAAC,CAAC;EACpFhD,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAI2E,WAAW,CAACe,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEhB,cAAc,CAAC,CAAC;EACxFlD,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAI6E,UAAU,CAACa,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEd,aAAa,CAAC,CAAC;EACtFpD,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAIsD,WAAW,CAACoC,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAEZ,cAAc,CAAC,CAAC;EACzFtD,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAIgF,UAAU,CAACU,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAEX,aAAa,CAAC,CAAC;EACvFvD,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAIkF,YAAY,CAACQ,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAET,eAAe,CAAC,CAAC;EAC3FzD,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAAC,IAAIoF,YAAY,CAACM,iBAAiB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAEP,eAAe,CAAC,CAAC;AAC7F,CAAC,CAAC;;AAEFjF,CAAC,CAACc,IAAI,CAAC,kBAAkB,CAAC;AAC1BC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC,CAAC;AAAA,CACDC,OAAO,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACnCC,aAAa,CAAC,CAAC;AACfC,iBAAiB,CAACnB,SAAS;AAC3B,CAAC;AACDoB,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAEpB,IAAI,EAAEC,KAAK,EAAEsF,QAAQ,CAAC,CAAC,GAAGnE,CAAC,CAACN,MAAM;EAC1C,MAAM,GAAGQ,SAAS,CAAC,GAAGnB,aAAa,CAACH,IAAI,EAAEC,KAAK,CAAC;;EAEhD,MAAMsB,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;IACnCgB,gBAAgB,EAAE,IAAI;IACtBxC,IAAI;IACJyB,KAAK,EAAEC,cAAc,CAACC,QAAQ,IAAI4D,QAAQ,GAAG7D,cAAc,CAACE,SAAS,GAAG,CAAC;EAC3E,CAAC,CAAC;EACF,MAAMO,WAAW,GAAGZ,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;EACnDmB,CAAC,CAACiB,aAAa,CAACd,MAAM,EAAEtB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAEkC,WAAW,EAAEb,SAAS,CAAC;AAChE,CAAC,CAAC;;AAEFxB,CAAC,CAACc,IAAI,CAAC,oBAAoB,CAAC;AAC5BC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC,CAAC;AAAA,CACDC,OAAO,CAAC,oBAAoB,EAAEV,mBAAmB,CAAC;AACnDU,OAAO,CAAC,qBAAqB,EAAEV,mBAAmB,CAAC;AACnDW,aAAa,CAAC,CAAC;AACfD,OAAO,CAAC,kBAAkB,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1CE,iBAAiB,CAACnB,SAAS;AAC3B,CAAC;AACDoB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAM,EAAEpB,IAAI,EAAEC,KAAK,EAAEuC,gBAAgB,CAAC,CAAC,GAAGpB,CAAC,CAACN,MAAM;EAClD,MAAM,CAACO,WAAW,EAAEC,SAAS,CAAC,GAAGnB,aAAa,CAACH,IAAI,EAAEC,KAAK,CAAC;;EAE3D,MAAMsB,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;IACnCgB,gBAAgB;IAChBxC,IAAI;IACJyB,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE;EAClD,CAAC,CAAC;;EAEF;EACA,IAAI,CAACY,gBAAgB,EAAE;IACrB,MAAMV,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAEA,MAAM,CAACS,QAAQ,EAAE,CAACC,UAAU,CAACC,KAAK,CAAC,EAAE,MAAAJ,UAAA,CAAAC,YAAA,aAAMR,MAAM,EAANA,MAAM,CAAAS,QAAA,GAAUC,UAAU,CAACC,KAAK,SAAhCX,MAAM,CAACS,QAAQ,CAACC,UAAU,CAACC,KAAK,EAAC,CAAC;EACjI;;EAEA;EACA,MAAMW,IAAI,GAAGtB,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;;EAE5CP,MAAM,CAACmD,IAAI,CAACC,UAAU,KAAKxB,SAAS,CAAC;EACrC,MAAM2B,QAAQ,GAAG,IAAIC,WAAW,CAAC,IAAIF,WAAW,CAAC1B,SAAS,CAAC,CAAC;EAC5D,MAAM8B,IAAI,GAAG,IAAIF,WAAW,CAACL,IAAI,CAAC;EAClC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAE,EAAED,CAAC,EAAE;IACpCD,IAAI,CAACC,CAAC,CAAC,GAAGJ,QAAQ,CAACI,CAAC,CAAC,GAAGA,CAAC,GAAG,CAAC;EAC/B;EACA9B,MAAM,CAACgC,KAAK,CAAC,CAAC;;EAEd;EACA;EACA,MAAM1B,SAAS,GAAGtB,eAAe,CAACP,IAAI,EAAE,CAACqB,WAAW,EAAEC,SAAS,CAAC,EAAEF,CAAC,CAACN,MAAM,CAAC;EAC3E,MAAMgB,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAEA,MAAM,CAACS,QAAQ,EAAE,CAACC,UAAU,CAACC,KAAK,EAAE,GAAGL,SAAS,CAAC,EAAE,MAAAC,UAAA,CAAAC,YAAA,aAAMR,MAAM,EAANA,MAAM,CAAAS,QAAA,GAAUC,UAAU,CAACC,KAAK,EAAE,GAAGL,SAAS,SAA9CN,MAAM,CAACS,QAAQ,CAACC,UAAU,CAACC,KAAK,EAAE,GAAGL,SAAS,EAAC,CAAC;EAC3J,MAAMkC,MAAM,GAAG,IAAIC,UAAU,CAACzC,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC,CAAC;EAC9DmB,CAAC,CAAC6C,QAAQ,CAACrE,kBAAkB,CAACmE,MAAM,EAAE,IAAIC,UAAU,CAACf,QAAQ,CAAC1B,MAAM,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC;;AAEFzB,CAAC,CAACc,IAAI,CAAC,2BAA2B,CAAC;AACnCC,IAAI,CAAC,0FAA0F,CAAC;AAChGC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAClDA,OAAO,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACpCA,OAAO,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;AACrC,CAAC;AACDG,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAEoE,SAAS,EAAEC,UAAU,EAAEC,YAAY,CAAC,CAAC,GAAGtE,CAAC,CAACN,MAAM;EACxD,MAAMW,KAAK;EACX+D,SAAS,KAAK,MAAM;EACpB9D,cAAc,CAACkC,QAAQ,GAAGlC,cAAc,CAACmC,QAAQ;EACjD2B,SAAS,KAAK,OAAO;EACrB9D,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE,SAAS;EAClD,CAAC;EACD,MAAM+D,eAAe,GAAGlE,KAAK,KAAK,CAAC;EACnC,MAAMzB,IAAI,GAAG,CAAC;EACd,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEpB,IAAIsB,MAAM;EACVH,CAAC,CAACwE,qBAAqB,CAAC,MAAM;IAC5BrE,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;MAC7BgB,gBAAgB,EAAE,IAAI;MACtBxC,IAAI;MACJyB;IACF,CAAC,CAAC;EACJ,CAAC,EAAEkE,eAAe,CAAC;;EAEnB;EACAvE,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,QAAQ,CAAC;;EAEtC;EACAvE,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;EAC/BmB,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,QAAQ,CAAC;;EAEtC,IAAIL,UAAU,EAAE;IACdlE,MAAM,CAACgC,KAAK,CAAC,CAAC;IACdnC,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;EAC1C;;EAEA,IAAIJ,YAAY,EAAE;IAChB5D,UAAU,CAACC,YAAY,CAAC,SAAS,EAAER,MAAM,EAAGA,MAAM,CAAEwE,OAAO,EAAE,EAAE,EAAE,MAAAjE,UAAA,CAAAC,YAAA,YAAMR,MAAM,CAAC,EAAPA,MAAM,CAAC,CAAAwE,OAAA,YAAPxE,MAAM,CAAC,CAACwE,OAAO,GAAE,CAAC;IACzF3E,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;EAC1C;AACF,CAAC,CAAC;;AAEFhG,CAAC,CAACc,IAAI,CAAC,mBAAmB,CAAC;AAC3BC,IAAI,CAAC,iFAAiF,CAAC;AACvFC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAClDA,OAAO,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACzCA,OAAO,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACrCA,OAAO,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACvCA,OAAO,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACpCA,OAAO,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;AACrC,CAAC;AACDG,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAM,EAAEoE,SAAS,EAAEQ,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAET,UAAU,EAAEC,YAAY,CAAC,CAAC;EACtFtE,CAAC,CAACN,MAAM;EACR,MAAMd,IAAI,GAAG,CAAC;EACd,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACpB,MAAMwB,KAAK;EACX+D,SAAS,KAAK,MAAM;EACpB9D,cAAc,CAACkC,QAAQ,GAAGlC,cAAc,CAACmC,QAAQ;EACjD2B,SAAS,KAAK,OAAO;EACrB9D,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE,SAAS;EAClD,CAAC;EACD,MAAMuE,6BAA6B,GAAG1E,KAAK,KAAK,CAAC;EACjD,MAAM2E,OAAO,GAAGnE,UAAU,CAAC+D,WAAW,CAAC;;EAEvC,IAAIzE,MAAM;EACVH,CAAC,CAACwE,qBAAqB,CAAC,MAAM;IAC5BrE,MAAM,GAAGH,CAAC,CAACI,mBAAmB,CAAC;MAC7BgB,gBAAgB,EAAE,KAAK;MACvBxC,IAAI;MACJyB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE0E,6BAA6B,CAAC;;EAEjC/E,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;;EAExC;IACE,MAAMO,uBAAuB;IAC7BF,6BAA6B;IAC7BC,OAAO,KAAKnE,UAAU,CAAC6B,IAAI,IAAI,EAAErC,KAAK,GAAGC,cAAc,CAACmC,QAAQ,CAAC;IACjEuC,OAAO,KAAKnE,UAAU,CAACC,KAAK,IAAI,EAAET,KAAK,GAAGC,cAAc,CAACE,SAAS,CAAC;IACnE,IAAI0E,OAAO;IACXlF,CAAC,CAACwE,qBAAqB,CAAC,MAAM;MAC5BU,OAAO,GAAGxE,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAGA,MAAM,CAAES,QAAQ,EAAE,CAACoE,OAAO,CAAC,EAAE,MAAAtE,UAAA,CAAAC,YAAA,aAAMR,MAAM,CAAC,EAAPA,MAAM,CAAC,CAAAS,QAAA,GAAUoE,OAAO,SAAxB7E,MAAM,CAAC,CAACS,QAAQ,CAACoE,OAAO,EAAC,CAAC;IACtH,CAAC,EAAEC,uBAAuB,CAAC;IAC3BjF,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,SAAS,CAAC;;IAEvC,IAAI;MACF,IAAIG,WAAW,EAAE;QACf1E,MAAM,CAACgC,KAAK,CAAC,CAAC;QACdnC,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;MAC1C;MACA,IAAII,aAAa,EAAE;QACjBpE,UAAU,CAACC,YAAY,CAAC,SAAS,EAAER,MAAM,EAAGA,MAAM,CAAEwE,OAAO,EAAE,EAAE,EAAE,MAAAjE,UAAA,CAAAC,YAAA,YAAMR,MAAM,CAAC,EAAPA,MAAM,CAAC,CAAAwE,OAAA,YAAPxE,MAAM,CAAC,CAACwE,OAAO,GAAE,CAAC;QACzF3E,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;MAC1C;;MAEA,MAAMQ,OAAO;MACblF,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,QAAQ,CAAC;;MAEtC;MACAvE,MAAM,CAACa,cAAc,CAAC,GAAGnC,KAAK,CAAC;MAC/BmB,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,QAAQ,CAAC;IACxC,CAAC,CAAC,MAAM;MACN;MACA;MACA1E,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;IAC1C;EACF;;EAEA;EACA,IAAIvE,MAAM,CAACuE,QAAQ,KAAK,QAAQ,EAAE;IAChC;IACA;IACA,IAAIQ,OAAO;IACXlF,CAAC,CAACwE,qBAAqB,CAAC,MAAM;MAC5BU,OAAO,GAAGxE,UAAU,CAACC,YAAY,CAAC,UAAU,EAAER,MAAM,EAAGA,MAAM,CAAES,QAAQ,EAAE,CAACC,UAAU,CAACC,KAAK,CAAC,EAAE,MAAAJ,UAAA,CAAAC,YAAA,aAAMR,MAAM,CAAC,EAAPA,MAAM,CAAC,CAAAS,QAAA,GAAUC,UAAU,CAACC,KAAK,SAAjCX,MAAM,CAAC,CAACS,QAAQ,CAACC,UAAU,CAACC,KAAK,EAAC,CAAC;IACxI,CAAC,EAAE,IAAI,CAAC;IACRd,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,QAAQ,CAAC;;IAEtC,IAAI;MACF,MAAMQ,OAAO;MACblF,CAAC,CAACmF,IAAI,CAAC,qDAAqD,CAAC;IAC/D,CAAC,CAAC,MAAM;MACNnF,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,QAAQ,CAAC;IACxC;EACF;;EAEA,IAAIL,UAAU,EAAE;IACdlE,MAAM,CAACgC,KAAK,CAAC,CAAC;IACdnC,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;EAC1C;;EAEA,IAAIJ,YAAY,EAAE;IAChB5D,UAAU,CAACC,YAAY,CAAC,SAAS,EAAER,MAAM,EAAGA,MAAM,CAAEwE,OAAO,EAAE,EAAE,EAAE,MAAAjE,UAAA,CAAAC,YAAA,YAAMR,MAAM,CAAC,EAAPA,MAAM,CAAC,CAAAwE,OAAA,YAAPxE,MAAM,CAAC,CAACwE,OAAO,GAAE,CAAC;IACzF3E,CAAC,CAACyE,MAAM,CAACtE,MAAM,CAACuE,QAAQ,KAAK,UAAU,CAAC;EAC1C;AACF,CAAC,CAAC","ignoreList":[]}