{"version":3,"file":"threading.spec.js","names":["description","makeTestGroup","GPUTest","g","test","desc","unimplemented"],"sources":["../../../../../src/webgpu/api/operation/buffers/threading.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests for valid operations with various client-side thread-shared state of GPUBuffers.\n\nStates to test:\n- mapping pending\n- mapped\n- mapped at creation\n- mapped at creation, then unmapped\n- mapped at creation, then unmapped, then re-mapped\n- destroyed\n\nTODO: Look for more things to test.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('serialize').\ndesc(\n  `Copy a GPUBuffer to another thread while it is in various states on\n{the sending thread, yet another thread}.`\n).\nunimplemented();\n\ng.test('destroyed').\ndesc(`Destroy on one thread while in various states in another thread.`).\nunimplemented();"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,4CAA4C,CAC5E,SAASC,OAAO,QAAQ,sBAAsB;AAE9C,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAO,CAAC;;AAEvCC,CAAC,CAACC,IAAI,CAAC,WAAW,CAAC;AACnBC,IAAI;EACF;AACF;AACA,CAAC;AACDC,aAAa,CAAC,CAAC;;AAEfH,CAAC,CAACC,IAAI,CAAC,WAAW,CAAC;AACnBC,IAAI,CAAC,kEAAkE,CAAC;AACxEC,aAAa,CAAC,CAAC","ignoreList":[]}