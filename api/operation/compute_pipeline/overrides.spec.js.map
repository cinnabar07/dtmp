{"version":3,"file":"overrides.spec.js","names":["description","makeTestGroup","range","GPUTest","F","ExpectShaderOutputWithConstants","isAsync","expected","constants","code","dst","createBufferTracked","size","byteLength","usage","GPUBufferUsage","COPY_SRC","STORAGE","descriptor","layout","compute","module","device","createShaderModule","entryPoint","promise","createComputePipelineAsync","Promise","resolve","createComputePipeline","pipeline","bindGroup","createBindGroup","entries","binding","resource","buffer","offset","getBindGroupLayout","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual","g","test","desc","params","u","combine","fn","t","count","Uint32Array","i","c0","c1","c2","c3","c5","c6","c8","c9","BYTES_PER_ELEMENT","descriptors","bindGroups","Float32Array","type","v","workgroup_size_str","d","expects","buffers","a","promises","all","pipelines"],"sources":["../../../../../src/webgpu/api/operation/compute_pipeline/overrides.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nCompute pipeline using overridable constants test.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nclass F extends GPUTest {\n  async ExpectShaderOutputWithConstants(\n  isAsync,\n  expected,\n  constants,\n  code)\n  {\n    const dst = this.createBufferTracked({\n      size: expected.byteLength,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n    });\n\n    const descriptor = {\n      layout: 'auto',\n      compute: {\n        module: this.device.createShaderModule({\n          code\n        }),\n        entryPoint: 'main',\n        constants\n      }\n    };\n\n    const promise = isAsync ?\n    this.device.createComputePipelineAsync(descriptor) :\n    Promise.resolve(this.device.createComputePipeline(descriptor));\n\n    const pipeline = await promise;\n    const bindGroup = this.device.createBindGroup({\n      entries: [{ binding: 0, resource: { buffer: dst, offset: 0, size: expected.byteLength } }],\n      layout: pipeline.getBindGroupLayout(0)\n    });\n\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", this.device, this.device.createCommandEncoder, [], () => this.device.createCommandEncoder());\n    const pass = encoder.beginComputePass();\n    pass.setPipeline(pipeline);\n    pass.setBindGroup(0, bindGroup);\n    pass.dispatchWorkgroups(1);\n    pass.end();\n    globalThis._TRAMPOLINE_(\"submit\", this.device, this.device.queue.submit, [[encoder.finish()]], () => this.device.queue.submit([encoder.finish()]));\n\n    this.expectGPUBufferValuesEqual(dst, expected);\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('basic').\ndesc(\n  `Test that either correct constants override values or default values when no constants override value are provided at pipeline creation time are used as the output to the storage buffer.`\n).\nparams((u) => u.combine('isAsync', [true, false])).\nfn(async (t) => {\n  const count = 11;\n  await t.ExpectShaderOutputWithConstants(\n    t.params.isAsync,\n    new Uint32Array(range(count, (i) => i)),\n    {\n      c0: 0,\n      c1: 1,\n      c2: 2,\n      c3: 3,\n      // c4 is using default value\n      c5: 5,\n      c6: 6,\n      // c7 is using default value\n      c8: 8,\n      c9: 9\n      // c10 is using default value\n    },\n    `\n      override c0: bool;              // type: bool\n      override c1: bool = false;      // default override\n      override c2: f32;               // type: float32\n      override c3: f32 = 0.0;         // default override\n      override c4: f32 = 4.0;         // default\n      override c5: i32;               // type: int32\n      override c6: i32 = 0;           // default override\n      override c7: i32 = 7;           // default\n      override c8: u32;               // type: uint32\n      override c9: u32 = 0u;          // default override\n      override c10: u32 = 10u;        // default\n\n      struct Buf {\n          data : array<u32, ${count}>\n      }\n\n      @group(0) @binding(0) var<storage, read_write> buf : Buf;\n\n      @compute @workgroup_size(1) fn main() {\n          buf.data[0] = u32(c0);\n          buf.data[1] = u32(c1);\n          buf.data[2] = u32(c2);\n          buf.data[3] = u32(c3);\n          buf.data[4] = u32(c4);\n          buf.data[5] = u32(c5);\n          buf.data[6] = u32(c6);\n          buf.data[7] = u32(c7);\n          buf.data[8] = u32(c8);\n          buf.data[9] = u32(c9);\n          buf.data[10] = u32(c10);\n      }\n    `\n  );\n});\n\ng.test('numeric_id').\ndesc(\n  `Test that correct values are used as output to the storage buffer for constants specified with numeric id instead of their names.`\n).\nparams((u) => u.combine('isAsync', [true, false])).\nfn(async (t) => {\n  await t.ExpectShaderOutputWithConstants(\n    t.params.isAsync,\n    new Uint32Array([1, 2, 3]),\n    {\n      1001: 1,\n      1: 2\n      // 1003 is using default value\n    },\n    `\n        @id(1001) override c1: u32;            // some big numeric id\n        @id(1) override c2: u32 = 0u;          // id == 1 might collide with some generated constant id\n        @id(1003) override c3: u32 = 3u;       // default\n\n        struct Buf {\n            data : array<u32, 3>\n        }\n\n        @group(0) @binding(0) var<storage, read_write> buf : Buf;\n\n        @compute @workgroup_size(1) fn main() {\n            buf.data[0] = c1;\n            buf.data[1] = c2;\n            buf.data[2] = c3;\n        }\n      `\n  );\n});\n\ng.test('computed').\ndesc(`Test that computed overrides work correctly`).\nfn(async (t) => {\n  const module = t.device.createShaderModule({\n    code: `\n      override c0: f32 = 0.;\n      override c1: f32 = 0.;\n      override c2: f32 = c0 * c1;\n\n      struct Buf {\n          data : array<u32, 3>,\n      }\n\n      @group(0) @binding(0) var<storage, read_write> buf : Buf;\n\n      @compute @workgroup_size(1) fn main() {\n          buf.data[0] = u32(c0);\n          buf.data[1] = u32(c1);\n          buf.data[2] = u32(c2);\n      }\n    `\n  });\n\n  const expected = new Uint32Array([2, 4, 8]);\n\n  const buffer = t.createBufferTracked({\n    size: 3 * Uint32Array.BYTES_PER_ELEMENT,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  });\n\n  const descriptors = [\n  {\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'main',\n      constants: {\n        c0: 2,\n        c1: 4\n      }\n    }\n  }];\n\n\n  const pipeline = await t.device.createComputePipelineAsync(descriptors[0]);\n  const bindGroups = [\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer, offset: 0, size: 3 * Uint32Array.BYTES_PER_ELEMENT }\n    }],\n\n    layout: pipeline.getBindGroupLayout(0)\n  })];\n\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroups[0]);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(buffer, expected);\n});\n\ng.test('precision').\ndesc(\n  `Test that float number precision is preserved for constants as they are used for compute shader output of the storage buffer.`\n).\nparams((u) => u.combine('isAsync', [true, false])).\nfn(async (t) => {\n  const c1 = 3.14159;\n  const c2 = 3.141592653589793;\n  await t.ExpectShaderOutputWithConstants(\n    t.params.isAsync,\n    // These values will get rounded to f32 and createComputePipeline, so the values coming out from the shader won't be the exact same one as shown here.\n    new Float32Array([c1, c2]),\n    {\n      c1,\n      c2\n    },\n    `\n        override c1: f32;\n        override c2: f32;\n\n        struct Buf {\n            data : array<f32, 2>\n        }\n\n        @group(0) @binding(0) var<storage, read_write> buf : Buf;\n\n        @compute @workgroup_size(1) fn main() {\n            buf.data[0] = c1;\n            buf.data[1] = c2;\n        }\n      `\n  );\n});\n\ng.test('workgroup_size').\ndesc(\n  `Test that constants can be used as workgroup size correctly, the compute shader should write the max local invocation id to the storage buffer which is equal to the workgroup size dimension given by the constant.`\n).\nparams((u) =>\nu //\n.combine('isAsync', [true, false]).\ncombine('type', ['u32', 'i32']).\ncombine('size', [3, 16, 64]).\ncombine('v', ['x', 'y', 'z'])\n).\nfn(async (t) => {\n  const { isAsync, type, size, v } = t.params;\n  const workgroup_size_str = v === 'x' ? 'd' : v === 'y' ? '1, d' : '1, 1, d';\n  await t.ExpectShaderOutputWithConstants(\n    isAsync,\n    new Uint32Array([size]),\n    {\n      d: size\n    },\n    `\n        override d: ${type};\n\n        struct Buf {\n            data : array<u32, 1>\n        }\n\n        @group(0) @binding(0) var<storage, read_write> buf : Buf;\n\n        @compute @workgroup_size(${workgroup_size_str}) fn main(\n            @builtin(local_invocation_id) local_invocation_id : vec3<u32>\n        ) {\n            if (local_invocation_id.${v} >= u32(d - 1)) {\n                buf.data[0] = local_invocation_id.${v} + 1;\n            }\n        }\n      `\n  );\n});\n\ng.test('shared_shader_module').\ndesc(\n  `Test that when the same shader module is shared by different pipelines, the correct constant values are used as output to the storage buffer. The constant value should not affect other pipeline sharing the same shader module.`\n).\nparams((u) => u.combine('isAsync', [true, false])).\nfn(async (t) => {\n  const module = t.device.createShaderModule({\n    code: `\n      override a: u32;\n\n      struct Buf {\n          data : array<u32, 1>\n      }\n\n      @group(0) @binding(0) var<storage, read_write> buf : Buf;\n\n      @compute @workgroup_size(1) fn main() {\n          buf.data[0] = a;\n      }`\n  });\n\n  const expects = [new Uint32Array([1]), new Uint32Array([2])];\n  const buffers = [\n  t.createBufferTracked({\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  }),\n  t.createBufferTracked({\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  })];\n\n\n  const descriptors = [\n  {\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'main',\n      constants: {\n        a: 1\n      }\n    }\n  },\n  {\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'main',\n      constants: {\n        a: 2\n      }\n    }\n  }];\n\n\n  const promises = t.params.isAsync ?\n  Promise.all([\n  t.device.createComputePipelineAsync(descriptors[0]),\n  t.device.createComputePipelineAsync(descriptors[1])]\n  ) :\n  Promise.resolve([\n  t.device.createComputePipeline(descriptors[0]),\n  t.device.createComputePipeline(descriptors[1])]\n  );\n\n  const pipelines = await promises;\n  const bindGroups = [\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer: buffers[0], offset: 0, size: Uint32Array.BYTES_PER_ELEMENT }\n    }],\n\n    layout: pipelines[0].getBindGroupLayout(0)\n  }),\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer: buffers[1], offset: 0, size: Uint32Array.BYTES_PER_ELEMENT }\n    }],\n\n    layout: pipelines[1].getBindGroupLayout(0)\n  })];\n\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipelines[0]);\n  pass.setBindGroup(0, bindGroups[0]);\n  pass.dispatchWorkgroups(1);\n  pass.setPipeline(pipelines[1]);\n  pass.setBindGroup(0, bindGroups[1]);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(buffers[0], expects[0]);\n  t.expectGPUBufferValuesEqual(buffers[1], expects[1]);\n});\n\ng.test('multi_entry_points').\ndesc(\n  `Test that constants used for different entry points are used correctly as output to the storage buffer. They should have no impact for pipeline using entry points that doesn't reference them.`\n).\nparams((u) => u.combine('isAsync', [true, false])).\nfn(async (t) => {\n  const module = t.device.createShaderModule({\n    code: `\n    override c1: u32;\n    override c2: u32;\n    override c3: u32;\n\n    struct Buf {\n        data : array<u32, 1>\n    }\n\n    @group(0) @binding(0) var<storage, read_write> buf : Buf;\n\n    @compute @workgroup_size(1) fn main1() {\n        buf.data[0] = c1;\n    }\n\n    @compute @workgroup_size(1) fn main2() {\n        buf.data[0] = c2;\n    }\n\n    @compute @workgroup_size(c3) fn main3() {\n        buf.data[0] = 3u;\n    }`\n  });\n\n  const expects = [\n  new Uint32Array([1]),\n  new Uint32Array([2]),\n  new Uint32Array([3]),\n  new Uint32Array([4])];\n\n\n  const buffers = [\n  t.createBufferTracked({\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  }),\n  t.createBufferTracked({\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  }),\n  t.createBufferTracked({\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  }),\n  t.createBufferTracked({\n    size: Uint32Array.BYTES_PER_ELEMENT,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  })];\n\n\n  const descriptors = [\n  {\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'main1',\n      constants: {\n        c1: 1\n      }\n    }\n  },\n  {\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'main2',\n      constants: {\n        c2: 2\n      }\n    }\n  },\n  {\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'main3',\n      constants: {\n        // c3 is used as workgroup size\n        c3: 1\n      }\n    }\n  },\n  {\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'main1',\n      constants: {\n        // assign a different value to c1\n        c1: 4\n      }\n    }\n  }];\n\n\n  const promises = t.params.isAsync ?\n  Promise.all([\n  t.device.createComputePipelineAsync(descriptors[0]),\n  t.device.createComputePipelineAsync(descriptors[1]),\n  t.device.createComputePipelineAsync(descriptors[2]),\n  t.device.createComputePipelineAsync(descriptors[3])]\n  ) :\n  Promise.resolve([\n  t.device.createComputePipeline(descriptors[0]),\n  t.device.createComputePipeline(descriptors[1]),\n  t.device.createComputePipeline(descriptors[2]),\n  t.device.createComputePipeline(descriptors[3])]\n  );\n\n  const pipelines = await promises;\n  const bindGroups = [\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer: buffers[0], offset: 0, size: Uint32Array.BYTES_PER_ELEMENT }\n    }],\n\n    layout: pipelines[0].getBindGroupLayout(0)\n  }),\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer: buffers[1], offset: 0, size: Uint32Array.BYTES_PER_ELEMENT }\n    }],\n\n    layout: pipelines[1].getBindGroupLayout(0)\n  }),\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer: buffers[2], offset: 0, size: Uint32Array.BYTES_PER_ELEMENT }\n    }],\n\n    layout: pipelines[2].getBindGroupLayout(0)\n  }),\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer: buffers[3], offset: 0, size: Uint32Array.BYTES_PER_ELEMENT }\n    }],\n\n    layout: pipelines[3].getBindGroupLayout(0)\n  })];\n\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipelines[0]);\n  pass.setBindGroup(0, bindGroups[0]);\n  pass.dispatchWorkgroups(1);\n  pass.setPipeline(pipelines[1]);\n  pass.setBindGroup(0, bindGroups[1]);\n  pass.dispatchWorkgroups(1);\n  pass.setPipeline(pipelines[2]);\n  pass.setBindGroup(0, bindGroups[2]);\n  pass.dispatchWorkgroups(1);\n  pass.setPipeline(pipelines[3]);\n  pass.setBindGroup(0, bindGroups[3]);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(buffers[0], expects[0]);\n  t.expectGPUBufferValuesEqual(buffers[1], expects[1]);\n  t.expectGPUBufferValuesEqual(buffers[2], expects[2]);\n  t.expectGPUBufferValuesEqual(buffers[3], expects[3]);\n});"],"mappings":"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","ignoreList":[]}