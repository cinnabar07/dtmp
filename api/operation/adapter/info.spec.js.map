{"version":3,"file":"info.spec.js","names":["description","Fixture","makeTestGroup","keysOf","getGPU","assert","objectEquals","isPowerOfTwo","g","normalizedIdentifierRegex","test","desc","fn","t","gpu","rec","adapter","globalThis","_TRAMPOLINE_","requestAdapter","adapterInfo","info","GPUAdapterInfo","expect","vendor","architecture","device","adapterInfo1","adapterInfo2","requestDeviceTracked","deviceAdapterInfo1","deviceAdapterInfo2","paramsSubcasesOnly","u","combine","testDeviceFirst","testMembersFirst","params","deviceInfo","kGPUAdapterInfoKeys","prototype","k","push","kSubgroupMinSizeBound","kSubgroupMaxSizeBound","subgroupMinSize","subgroupMaxSize","features","has","undefined"],"sources":["../../../../../src/webgpu/api/operation/adapter/info.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests for GPUAdapterInfo.\n`;import { Fixture } from '../../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { getGPU } from '../../../../common/util/navigator_gpu.js';\nimport { assert, objectEquals } from '../../../../common/util/util.js';\nimport { isPowerOfTwo } from '../../../util/math.js';\n\nexport const g = makeTestGroup(Fixture);\n\nconst normalizedIdentifierRegex = /^$|^[a-z0-9]+(-[a-z0-9]+)*$/;\n\ng.test('adapter_info').\ndesc(\n  `\n  Test that every member in the GPUAdapter.info except description is properly formatted`\n).\nfn(async (t) => {\n  const gpu = getGPU(t.rec);\n  const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", gpu, gpu.requestAdapter, [], () => gpu.requestAdapter());\n  assert(adapter !== null);\n\n  const adapterInfo = adapter.info;\n  assert(adapterInfo instanceof GPUAdapterInfo);\n\n  t.expect(\n    normalizedIdentifierRegex.test(adapterInfo.vendor),\n    `adapterInfo.vendor should be a normalized identifier. But it's '${adapterInfo.vendor}'`\n  );\n\n  t.expect(\n    normalizedIdentifierRegex.test(adapterInfo.architecture),\n    `adapterInfo.architecture should be a normalized identifier. But it's '${adapterInfo.architecture}'`\n  );\n\n  t.expect(\n    normalizedIdentifierRegex.test(adapterInfo.device),\n    `adapterInfo.device should be a normalized identifier. But it's '${adapterInfo.device}'`\n  );\n});\n\ng.test('same_object').\ndesc(\n  `\nGPUAdapter.info and GPUDevice.adapterInfo provide the same object each time they're accessed,\nbut different objects from one another.`\n).\nfn(async (t) => {\n  const gpu = getGPU(t.rec);\n  const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", gpu, gpu.requestAdapter, [], () => gpu.requestAdapter());\n  assert(adapter !== null);\n  assert(adapter.info instanceof GPUAdapterInfo);\n\n  const adapterInfo1 = adapter.info;\n  const adapterInfo2 = adapter.info;\n  t.expect(adapterInfo1 === adapterInfo2, 'adapter.info should obey [SameObject]');\n\n  const device = await t.requestDeviceTracked(adapter);\n  assert(device !== null);\n  assert(device.adapterInfo instanceof GPUAdapterInfo);\n\n  const deviceAdapterInfo1 = device.adapterInfo;\n  const deviceAdapterInfo2 = device.adapterInfo;\n  t.expect(\n    deviceAdapterInfo1 === deviceAdapterInfo2,\n    'device.adapterInfo should obey [SameObject]'\n  );\n\n  t.expect(\n    adapter.info !== device.adapterInfo,\n    'adapter.info and device.adapterInfo should NOT return the same object'\n  );\n});\n\ng.test('device_matches_adapter').\ndesc(\n  `\nTest that GPUDevice.adapterInfo matches GPUAdapter.info. Cases access the members in\ndifferent orders to make sure that they are consistent regardless of the access order.`\n).\nparamsSubcasesOnly((u) =>\nu.combine('testDeviceFirst', [true, false]).combine('testMembersFirst', [true, false])\n).\nfn(async (t) => {\n  const { testDeviceFirst, testMembersFirst } = t.params;\n\n  const gpu = getGPU(t.rec);\n  const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", gpu, gpu.requestAdapter, [], () => gpu.requestAdapter());\n  assert(adapter !== null);\n\n  const device = await t.requestDeviceTracked(adapter);\n  assert(device !== null);\n\n  const deviceInfo = [];\n  const adapterInfo = [];\n\n  const kGPUAdapterInfoKeys = keysOf(GPUAdapterInfo.prototype);\n  if (testMembersFirst) {\n    if (testDeviceFirst) {\n      assert(device.adapterInfo instanceof GPUAdapterInfo);\n      for (const k of kGPUAdapterInfoKeys) {\n        deviceInfo.push(device.adapterInfo[k]);\n      }\n      assert(adapter.info instanceof GPUAdapterInfo);\n      for (const k of kGPUAdapterInfoKeys) {\n        adapterInfo.push(adapter.info[k]);\n      }\n    } else {\n      assert(adapter.info instanceof GPUAdapterInfo);\n      for (const k of kGPUAdapterInfoKeys) {\n        adapterInfo.push(adapter.info[k]);\n      }\n      assert(device.adapterInfo instanceof GPUAdapterInfo);\n      for (const k of kGPUAdapterInfoKeys) {\n        deviceInfo.push(device.adapterInfo[k]);\n      }\n    }\n  } else {\n    if (testDeviceFirst) {\n      assert(device.adapterInfo instanceof GPUAdapterInfo);\n      assert(adapter.info instanceof GPUAdapterInfo);\n      for (const k of kGPUAdapterInfoKeys) {\n        deviceInfo.push(device.adapterInfo[k]);\n        adapterInfo.push(adapter.info[k]);\n      }\n    } else {\n      assert(adapter.info instanceof GPUAdapterInfo);\n      assert(device.adapterInfo instanceof GPUAdapterInfo);\n      for (const k of kGPUAdapterInfoKeys) {\n        adapterInfo.push(adapter.info[k]);\n        deviceInfo.push(device.adapterInfo[k]);\n      }\n    }\n    t.expect(objectEquals(deviceInfo, adapterInfo));\n  }\n});\n\n// This can be removed once 'subgroups' lands.\n// See https://github.com/gpuweb/gpuweb/pull/4963\n\n\n\n\n\nconst kSubgroupMinSizeBound = 4;\nconst kSubgroupMaxSizeBound = 128;\n\ng.test('subgroup_sizes').\ndesc(\n  `\nVerify GPUAdapterInfo.subgroupMinSize, GPUAdapterInfo.subgroupMaxSize.\nIf the subgroups feature is supported, they must both exist.\nIf they exist, they must both exist and be powers of two, and\n4 <= subgroupMinSize <= subgroupMaxSize <= 128.\n`\n).\nfn(async (t) => {\n  const gpu = getGPU(t.rec);\n  const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", gpu, gpu.requestAdapter, [], () => gpu.requestAdapter());\n  assert(adapter !== null);\n  const { subgroupMinSize, subgroupMaxSize } = adapter.info;\n  // Once 'subgroups' lands, the properties should be defined with default values 4 and 128\n  // when adapter does not support the feature.\n  // https://github.com/gpuweb/gpuweb/pull/4963\n  if (adapter.features.has('subgroups')) {\n    t.expect(\n      subgroupMinSize !== undefined,\n      'GPUAdapterInfo.subgroupMinSize must exist when subgroups supported'\n    );\n    t.expect(\n      subgroupMaxSize !== undefined,\n      'GPUAdapterInfo.subgroupMaxSize must exist when subgroups supported'\n    );\n  }\n  t.expect(\n    subgroupMinSize === undefined === (subgroupMinSize === undefined),\n    'GPUAdapterInfo.subgropuMinSize and GPUAdapterInfo.subgroupMaxSize must both be defined, or neither should be'\n  );\n  if (subgroupMinSize !== undefined && subgroupMaxSize !== undefined) {\n    t.expect(isPowerOfTwo(subgroupMinSize));\n    t.expect(isPowerOfTwo(subgroupMaxSize));\n    t.expect(kSubgroupMinSizeBound <= subgroupMinSize);\n    t.expect(subgroupMinSize <= subgroupMaxSize);\n    t.expect(subgroupMaxSize <= kSubgroupMaxSizeBound);\n  }\n});"],"mappings":"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","ignoreList":[]}