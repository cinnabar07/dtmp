{"version":3,"file":"texture_sync_test.js","names":["GPUConst","kAllWriteOps","kAllReadOps","kOpInfo","contexts","readUsage","writeUsage","TextureUsage","COPY_DST","COPY_SRC","storage","STORAGE","sample","SAMPLED","RENDER_ATTACHMENT","checkOpsValidForContext","ops","context","valid","includes","checkImpl","op1","op2"],"sources":["../../../../../../src/webgpu/api/operation/memory_sync/texture/texture_sync_test.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { GPUConst } from '../../../../constants.js';\nexport const kAllWriteOps = [\n'write-texture',\n'b2t-copy',\n't2t-copy',\n'storage',\n'attachment-store',\n'attachment-resolve'];\n\n\n\nexport const kAllReadOps = ['t2b-copy', 't2t-copy', 'sample'];\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Mapping of Op to the OperationContext(s) it is valid in\n */\nexport const kOpInfo =\n\n{\n  'write-texture': {\n    contexts: ['queue'],\n    readUsage: 0,\n    writeUsage: GPUConst.TextureUsage.COPY_DST\n  },\n  'b2t-copy': {\n    contexts: ['command-encoder'],\n    readUsage: 0,\n    writeUsage: GPUConst.TextureUsage.COPY_DST\n  },\n  't2t-copy': {\n    contexts: ['command-encoder'],\n    readUsage: GPUConst.TextureUsage.COPY_SRC,\n    writeUsage: GPUConst.TextureUsage.COPY_DST\n  },\n  't2b-copy': {\n    contexts: ['command-encoder'],\n    readUsage: GPUConst.TextureUsage.COPY_SRC,\n    writeUsage: 0\n  },\n  storage: {\n    contexts: ['compute-pass-encoder', 'render-pass-encoder', 'render-bundle-encoder'],\n    readUsage: 0,\n    writeUsage: GPUConst.TextureUsage.STORAGE\n  },\n  sample: {\n    contexts: ['compute-pass-encoder', 'render-pass-encoder', 'render-bundle-encoder'],\n    readUsage: GPUConst.TextureUsage.SAMPLED,\n    writeUsage: 0\n  },\n  'attachment-store': {\n    contexts: ['command-encoder'],\n    readUsage: 0,\n    writeUsage: GPUConst.TextureUsage.RENDER_ATTACHMENT\n  },\n  'attachment-resolve': {\n    contexts: ['command-encoder'],\n    readUsage: 0,\n    writeUsage: GPUConst.TextureUsage.RENDER_ATTACHMENT\n  }\n};\n\nexport function checkOpsValidForContext(\nops,\ncontext)\n{\n  const valid =\n  kOpInfo[ops[0]].contexts.includes(context[0]) && kOpInfo[ops[1]].contexts.includes(context[1]);\n  if (!valid) return false;\n\n  if (\n  context[0] === 'render-bundle-encoder' ||\n  context[0] === 'render-pass-encoder' ||\n  context[1] === 'render-bundle-encoder' ||\n  context[1] === 'render-pass-encoder')\n  {\n    // In a render pass, it is invalid to use a resource as both writable and another usage.\n    // Also, for storage+storage usage, the application is opting into racy behavior.\n    // The storage+storage case is also skipped as the results cannot be reliably tested.\n    const checkImpl = (op1, op2) => {\n      switch (op1) {\n        case 'attachment-resolve':\n        case 'attachment-store':\n        case 'storage':\n          switch (op2) {\n            case 'attachment-resolve':\n            case 'attachment-store':\n            case 'storage':\n            case 'sample':\n              // Write+other, or racy.\n              return false;\n            case 'b2t-copy':\n            case 't2b-copy':\n            case 't2t-copy':\n            case 'write-texture':\n              // These don't occur in a render pass.\n              return true;\n          }\n          break;\n        case 'b2t-copy':\n        case 'sample':\n        case 't2b-copy':\n        case 't2t-copy':\n        case 'write-texture':\n          // These are not write usages, or don't occur in a render pass.\n          break;\n      }\n      return true;\n    };\n    return checkImpl(ops[0], ops[1]) && checkImpl(ops[1], ops[0]);\n  }\n  return true;\n}"],"mappings":"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","ignoreList":[]}