{"version":3,"file":"basic.spec.js","names":["description","makeTestGroup","now","GPUTest","checkElementsEqual","g","test","fn","t","dst","createBufferTracked","size","usage","GPUBufferUsage","COPY_SRC","COPY_DST","colorAttachment","createTextureTracked","format","width","height","depthOrArrayLayers","GPUTextureUsage","RENDER_ATTACHMENT","colorAttachmentView","createView","encoder","globalThis","_TRAMPOLINE_","device","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","clearValue","r","b","a","loadOp","storeOp","end","copyTextureToBuffer","texture","mipLevel","origin","x","y","z","buffer","bytesPerRow","queue","submit","finish","expectGPUBufferValuesEqual","Uint8Array","pipeline","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","targets","primitive","topology","setPipeline","draw","desc","params","u","combine","indexed","indirect","kBytesPerRow","paramsBuffer","UNIFORM","indirectBuffer","INDIRECT","writeIndirectParams","count","instanceCount","Uint32Array","writeBuffer","indexBuffer","kMaxIndices","BYTES_PER_ELEMENT","INDEX","mappedAtCreation","indexData","getMappedRange","i","unmap","bgLayout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","VERTEX","bindGroup","createBindGroup","resource","createPipelineLayout","bindGroupLayouts","runPipeline","numVertices","numInstances","setBindGroup","setIndexBuffer","drawIndexedIndirect","drawIndirect","drawIndexed","yellow","allYellow","row","expectGPUBufferValuesPassCheck","data","srcByteOffset","type","typedLength","maxDurationMs","counts","vertexCounts","start","onSubmittedWorkDone","duration"],"sources":["../../../../../src/webgpu/api/operation/rendering/basic.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nBasic command buffer rendering tests.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { now } from '../../../../common/util/util.js';\nimport { GPUTest } from '../../../gpu_test.js';\nimport { checkElementsEqual } from '../../../util/check_contents.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('clear').fn((t) => {\n  const dst = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n\n  const colorAttachment = t.createTextureTracked({\n    format: 'rgba8unorm',\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n  const colorAttachmentView = colorAttachment.createView();\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: colorAttachmentView,\n      clearValue: { r: 0.0, g: 1.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  pass.end();\n  encoder.copyTextureToBuffer(\n    { texture: colorAttachment, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { buffer: dst, bytesPerRow: 256 },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(dst, new Uint8Array([0x00, 0xff, 0x00, 0xff]));\n});\n\ng.test('fullscreen_quad').fn((t) => {\n  const dst = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n\n  const colorAttachment = t.createTextureTracked({\n    format: 'rgba8unorm',\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n  const colorAttachmentView = colorAttachment.createView();\n\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: `\n        @vertex fn main(\n          @builtin(vertex_index) VertexIndex : u32\n          ) -> @builtin(position) vec4<f32> {\n            var pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n                vec2<f32>(-1.0, -3.0),\n                vec2<f32>(3.0, 1.0),\n                vec2<f32>(-1.0, 1.0));\n            return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n          }\n          `\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: `\n          @fragment fn main() -> @location(0) vec4<f32> {\n            return vec4<f32>(0.0, 1.0, 0.0, 1.0);\n          }\n          `\n      }),\n      entryPoint: 'main',\n      targets: [{ format: 'rgba8unorm' }]\n    },\n    primitive: { topology: 'triangle-list' }\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: colorAttachmentView,\n      clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(3);\n  pass.end();\n  encoder.copyTextureToBuffer(\n    { texture: colorAttachment, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { buffer: dst, bytesPerRow: 256 },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(dst, new Uint8Array([0x00, 0xff, 0x00, 0xff]));\n});\n\ng.test('large_draw').\ndesc(\n  `Test reasonably-sized large {draw, drawIndexed} (see also stress tests).\n\n  Tests that draw calls behave reasonably with large vertex counts for\n  non-indexed draws, large index counts for indexed draws, and large instance\n  counts in both cases. Various combinations of these counts are tested with\n  both direct and indirect draw calls.\n\n  Draw call sizes are increased incrementally over these parameters until we the\n  run out of values or completion of a draw call exceeds a fixed time limit of\n  100ms.\n\n  To validate that the drawn vertices actually made it though the pipeline on\n  each draw call, we render a 3x3 target with the positions of the first and\n  last vertices of the first and last instances in different respective corners,\n  and everything else positioned to cover only one of the intermediate\n  fragments. If the output image is completely yellow, then we can reasonably\n  infer that all vertices were drawn.\n\n  Params:\n    - indexed= {true, false} - whether to test indexed or non-indexed draw calls\n    - indirect= {true, false} - whether to use indirect or direct draw calls`\n).\nparams((u) =>\nu //\n.combine('indexed', [true, false]).\ncombine('indirect', [true, false])\n).\nfn(async (t) => {\n  const { indexed, indirect } = t.params;\n\n  const kBytesPerRow = 256;\n  const dst = t.createBufferTracked({\n    size: 3 * kBytesPerRow,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n\n  const paramsBuffer = t.createBufferTracked({\n    size: 8,\n    usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\n  });\n\n  const indirectBuffer = t.createBufferTracked({\n    size: 20,\n    usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_DST\n  });\n  const writeIndirectParams = (count, instanceCount) => {\n    const params = new Uint32Array(5);\n    params[0] = count; // Vertex or index count\n    params[1] = instanceCount;\n    params[2] = 0; // First vertex or index\n    params[3] = 0; // First instance (non-indexed) or base vertex (indexed)\n    params[4] = 0; // First instance (indexed)\n    t.device.queue.writeBuffer(indirectBuffer, 0, params, 0, 5);\n  };\n\n  let indexBuffer = null;\n  if (indexed) {\n    const kMaxIndices = 16 * 1024 * 1024;\n    indexBuffer = t.createBufferTracked({\n      size: kMaxIndices * Uint32Array.BYTES_PER_ELEMENT,\n      usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n      mappedAtCreation: true\n    });\n    const indexData = new Uint32Array(indexBuffer.getMappedRange());\n    for (let i = 0; i < kMaxIndices; ++i) {\n      indexData[i] = i;\n    }\n    indexBuffer.unmap();\n  }\n\n  const colorAttachment = t.createTextureTracked({\n    format: 'rgba8unorm',\n    size: { width: 3, height: 3, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n  const colorAttachmentView = colorAttachment.createView();\n\n  const bgLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.VERTEX,\n      buffer: {}\n    }]\n\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: bgLayout,\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer: paramsBuffer }\n    }]\n\n  });\n\n  const pipeline = t.device.createRenderPipeline({\n    layout: t.device.createPipelineLayout({ bindGroupLayouts: [bgLayout] }),\n\n    vertex: {\n      module: t.device.createShaderModule({\n        code: `\n          struct Params {\n            numVertices: u32,\n            numInstances: u32,\n          };\n\n          fn selectValue(index: u32, maxIndex: u32) -> f32 {\n            let highOrMid = select(0.0, 2.0 / 3.0, index == maxIndex - 1u);\n            return select(highOrMid, -2.0 / 3.0, index == 0u);\n          }\n\n          @group(0) @binding(0) var<uniform> params: Params;\n\n          @vertex fn main(\n              @builtin(vertex_index) v: u32,\n              @builtin(instance_index) i: u32)\n              -> @builtin(position) vec4<f32> {\n            let x = selectValue(v, params.numVertices);\n            let y = -selectValue(i, params.numInstances);\n            return vec4<f32>(x, y, 0.0, 1.0);\n          }\n          `\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: `\n            @fragment fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(1.0, 1.0, 0.0, 1.0);\n            }\n            `\n      }),\n      entryPoint: 'main',\n      targets: [{ format: 'rgba8unorm' }]\n    },\n    primitive: { topology: 'point-list' }\n  });\n\n  const runPipeline = (numVertices, numInstances) => {\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: colorAttachmentView,\n        clearValue: { r: 0.0, g: 0.0, b: 1.0, a: 1.0 },\n        loadOp: 'clear',\n        storeOp: 'store'\n      }]\n\n    });\n\n    pass.setPipeline(pipeline);\n    pass.setBindGroup(0, bindGroup);\n    if (indexBuffer !== null) {\n      pass.setIndexBuffer(indexBuffer, 'uint32');\n    }\n\n    if (indirect) {\n      writeIndirectParams(numVertices, numInstances);\n      if (indexed) {\n        pass.drawIndexedIndirect(indirectBuffer, 0);\n      } else {\n        pass.drawIndirect(indirectBuffer, 0);\n      }\n    } else {\n      if (indexed) {\n        pass.drawIndexed(numVertices, numInstances);\n      } else {\n        pass.draw(numVertices, numInstances);\n      }\n    }\n    pass.end();\n    encoder.copyTextureToBuffer(\n      { texture: colorAttachment, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n      { buffer: dst, bytesPerRow: kBytesPerRow },\n      { width: 3, height: 3, depthOrArrayLayers: 1 }\n    );\n\n    const params = new Uint32Array([numVertices, numInstances]);\n    t.device.queue.writeBuffer(paramsBuffer, 0, params, 0, 2);\n    globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n    const yellow = [0xff, 0xff, 0x00, 0xff];\n    const allYellow = new Uint8Array([...yellow, ...yellow, ...yellow]);\n    for (const row of [0, 1, 2]) {\n      t.expectGPUBufferValuesPassCheck(dst, (data) => checkElementsEqual(data, allYellow), {\n        srcByteOffset: row * 256,\n        type: Uint8Array,\n        typedLength: 12\n      });\n    }\n  };\n\n  // If any iteration takes longer than this, we stop incrementing along that\n  // branch and move on to the next instance count. Note that the max\n  // supported vertex count for any iteration is 2**24 due to our choice of\n  // index buffer size.\n  const maxDurationMs = 100;\n  const counts = [\n  {\n    numInstances: 4,\n    vertexCounts: [2 ** 10, 2 ** 16, 2 ** 18, 2 ** 20, 2 ** 22, 2 ** 24]\n  },\n  {\n    numInstances: 2 ** 8,\n    vertexCounts: [2 ** 10, 2 ** 16, 2 ** 18, 2 ** 20, 2 ** 22]\n  },\n  {\n    numInstances: 2 ** 10,\n    vertexCounts: [2 ** 8, 2 ** 10, 2 ** 12, 2 ** 16, 2 ** 18, 2 ** 20]\n  },\n  {\n    numInstances: 2 ** 16,\n    vertexCounts: [2 ** 4, 2 ** 8, 2 ** 10, 2 ** 12, 2 ** 14]\n  },\n  {\n    numInstances: 2 ** 20,\n    vertexCounts: [2 ** 4, 2 ** 8, 2 ** 10]\n  }];\n\n  for (const { numInstances, vertexCounts } of counts) {\n    for (const numVertices of vertexCounts) {\n      const start = now();\n      runPipeline(numVertices, numInstances);\n      await t.device.queue.onSubmittedWorkDone();\n      const duration = now() - start;\n      if (duration >= maxDurationMs) {\n        break;\n      }\n    }\n  }\n});"],"mappings":"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","ignoreList":[]}