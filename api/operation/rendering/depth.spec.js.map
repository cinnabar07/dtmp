{"version":3,"file":"depth.spec.js","names":["description","makeTestGroup","kDepthStencilFormats","kTextureFormatInfo","GPUTest","TextureTestMixin","TexelView","backgroundColor","triangleColor","kBaseColor","Float32Array","kRedStencilColor","kGreenStencilColor","DepthTest","runDepthStateTest","testStates","expectedColor","renderTargetFormat","renderTarget","createTextureTracked","format","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","depthStencilFormat","depthTexture","sampleCount","mipLevelCount","COPY_DST","depthStencilAttachment","view","createView","depthLoadOp","depthStoreOp","stencilLoadOp","stencilStoreOp","encoder","globalThis","_TRAMPOLINE_","device","createCommandEncoder","pass","beginRenderPass","colorAttachments","loadOp","storeOp","test","testPipeline","createRenderPipelineForTest","state","depth","setPipeline","setBindGroup","createBindGroupForTest","getBindGroupLayout","color","draw","end","queue","submit","finish","expColor","R","G","B","A","expTexelView","fromTexelsAsColors","_coords","expectTexelViewComparisonIsOkInTexture","texture","depthStencil","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","targets","primitive","topology","data","createBindGroup","entries","binding","resource","buffer","makeBufferWithContents","GPUBufferUsage","UNIFORM","g","desc","fn","t","depthSpencilFormat","depthWriteEnabled","depthCompare","last","i","j","params","u","combineWithParams","lastDepth","_expectedColor","stencilState","compare","failOp","depthFailOp","passOp","baseState","stencilFront","stencilBack","stencilReadMask","stencilWriteMask","depthWriteState","checkState","secondDepth","depthTestState","kMiddleDepthValue","combine","filter","depthClearValue","_expected","beforeAllSubcases","selectDeviceForTextureFormatOrSkipTestCase","colorAttachmentFormat","colorAttachment","colorAttachmentView","TEXTURE_BINDING","depthTextureView","pipelineDescriptor","pipeline","stencil","stencilClearValue","clearValue","r","b","a","expectSinglePixelComparisonsAreOkInTexture","coord","x","y","exp","Uint8Array","depthBufferFormat","reversed"],"sources":["../../../../../src/webgpu/api/operation/rendering/depth.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTest related to depth buffer, depth op, compare func, etc.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\n\nimport { kDepthStencilFormats, kTextureFormatInfo } from '../../../format_info.js';\nimport { GPUTest, TextureTestMixin } from '../../../gpu_test.js';\nimport { TexelView } from '../../../util/texture/texel_view.js';\n\nconst backgroundColor = [0x00, 0x00, 0x00, 0xff];\nconst triangleColor = [0xff, 0xff, 0xff, 0xff];\n\nconst kBaseColor = new Float32Array([1.0, 1.0, 1.0, 1.0]);\nconst kRedStencilColor = new Float32Array([1.0, 0.0, 0.0, 1.0]);\nconst kGreenStencilColor = new Float32Array([0.0, 1.0, 0.0, 1.0]);\n\n\n\n\n\n\n\nclass DepthTest extends TextureTestMixin(GPUTest) {\n  runDepthStateTest(testStates, expectedColor) {\n    const renderTargetFormat = 'rgba8unorm';\n\n    const renderTarget = this.createTextureTracked({\n      format: renderTargetFormat,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n    });\n\n    const depthStencilFormat = 'depth24plus-stencil8';\n    const depthTexture = this.createTextureTracked({\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      format: depthStencilFormat,\n      sampleCount: 1,\n      mipLevelCount: 1,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST\n    });\n\n    const depthStencilAttachment = {\n      view: depthTexture.createView(),\n      depthLoadOp: 'load',\n      depthStoreOp: 'store',\n      stencilLoadOp: 'load',\n      stencilStoreOp: 'store'\n    };\n\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", this.device, this.device.createCommandEncoder, [], () => this.device.createCommandEncoder());\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: renderTarget.createView(),\n        loadOp: 'load',\n        storeOp: 'store'\n      }],\n\n      depthStencilAttachment\n    });\n\n    // Draw a triangle with the given depth state, color, and depth.\n    for (const test of testStates) {\n      const testPipeline = this.createRenderPipelineForTest(test.state, test.depth);\n      pass.setPipeline(testPipeline);\n      pass.setBindGroup(\n        0,\n        this.createBindGroupForTest(testPipeline.getBindGroupLayout(0), test.color)\n      );\n      pass.draw(1);\n    }\n\n    pass.end();\n    globalThis._TRAMPOLINE_(\"submit\", this.device, this.device.queue.submit, [[encoder.finish()]], () => this.device.queue.submit([encoder.finish()]));\n\n    const expColor = {\n      R: expectedColor[0],\n      G: expectedColor[1],\n      B: expectedColor[2],\n      A: expectedColor[3]\n    };\n    const expTexelView = TexelView.fromTexelsAsColors(renderTargetFormat, (_coords) => expColor);\n\n    this.expectTexelViewComparisonIsOkInTexture({ texture: renderTarget }, expTexelView, [1, 1]);\n  }\n\n  createRenderPipelineForTest(\n  depthStencil,\n  depth)\n  {\n    return this.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: this.device.createShaderModule({\n          code: `\n            @vertex\n            fn main(@builtin(vertex_index) VertexIndex : u32) -> @builtin(position) vec4<f32> {\n                return vec4<f32>(0.0, 0.0, ${depth}, 1.0);\n            }\n            `\n        }),\n        entryPoint: 'main'\n      },\n      fragment: {\n        targets: [{ format: 'rgba8unorm' }],\n        module: this.device.createShaderModule({\n          code: `\n            struct Params {\n              color : vec4<f32>\n            }\n            @group(0) @binding(0) var<uniform> params : Params;\n\n            @fragment fn main() -> @location(0) vec4<f32> {\n                return vec4<f32>(params.color);\n            }`\n        }),\n        entryPoint: 'main'\n      },\n      primitive: { topology: 'point-list' },\n      depthStencil\n    });\n  }\n\n  createBindGroupForTest(layout, data) {\n    return this.device.createBindGroup({\n      layout,\n      entries: [\n      {\n        binding: 0,\n        resource: {\n          buffer: this.makeBufferWithContents(data, GPUBufferUsage.UNIFORM)\n        }\n      }]\n\n    });\n  }\n}\n\nexport const g = makeTestGroup(DepthTest);\n\ng.test('depth_disabled').\ndesc('Tests render results with depth test disabled.').\nfn((t) => {\n  const depthSpencilFormat = 'depth24plus-stencil8';\n  const state = {\n    format: depthSpencilFormat,\n    depthWriteEnabled: false,\n    depthCompare: 'always'\n  };\n\n  const testStates = [\n  { state, color: kBaseColor, depth: 0.0 },\n  { state, color: kRedStencilColor, depth: 0.5 },\n  { state, color: kGreenStencilColor, depth: 1.0 }];\n\n\n  // Test that for all combinations and ensure the last triangle drawn is the one visible\n  // regardless of depth testing.\n  for (let last = 0; last < 3; ++last) {\n    const i = (last + 1) % 3;\n    const j = (last + 2) % 3;\n\n    t.runDepthStateTest([testStates[i], testStates[j], testStates[last]], testStates[last].color);\n    t.runDepthStateTest([testStates[j], testStates[i], testStates[last]], testStates[last].color);\n  }\n});\n\ng.test('depth_write_disabled').\ndesc(\n  `\n  Test that depthWriteEnabled behaves as expected.\n  If enabled, a depth value of 0.0 is written.\n  If disabled, it's not written, so it keeps the previous value of 1.0.\n  Use a depthCompare: 'equal' check at the end to check the value.\n  `\n).\nparams((u) =>\nu //\n.combineWithParams([\n{ depthWriteEnabled: false, lastDepth: 0.0, _expectedColor: kRedStencilColor },\n{ depthWriteEnabled: true, lastDepth: 0.0, _expectedColor: kGreenStencilColor },\n{ depthWriteEnabled: false, lastDepth: 1.0, _expectedColor: kGreenStencilColor },\n{ depthWriteEnabled: true, lastDepth: 1.0, _expectedColor: kRedStencilColor }]\n)\n).\nfn((t) => {\n  const { depthWriteEnabled, lastDepth, _expectedColor } = t.params;\n\n  const depthSpencilFormat = 'depth24plus-stencil8';\n\n  const stencilState = {\n    compare: 'always',\n    failOp: 'keep',\n    depthFailOp: 'keep',\n    passOp: 'keep'\n  };\n\n  const baseState = {\n    format: depthSpencilFormat,\n    depthWriteEnabled: true,\n    depthCompare: 'always',\n    stencilFront: stencilState,\n    stencilBack: stencilState,\n    stencilReadMask: 0xff,\n    stencilWriteMask: 0xff\n  };\n\n  const depthWriteState = {\n    format: depthSpencilFormat,\n    depthWriteEnabled,\n    depthCompare: 'always',\n    stencilFront: stencilState,\n    stencilBack: stencilState,\n    stencilReadMask: 0xff,\n    stencilWriteMask: 0xff\n  };\n\n  const checkState = {\n    format: depthSpencilFormat,\n    depthWriteEnabled: false,\n    depthCompare: 'equal',\n    stencilFront: stencilState,\n    stencilBack: stencilState,\n    stencilReadMask: 0xff,\n    stencilWriteMask: 0xff\n  };\n\n  const testStates = [\n  // Draw a base point with depth write enabled.\n  { state: baseState, color: kBaseColor, depth: 1.0 },\n  // Draw a second point without depth write enabled.\n  { state: depthWriteState, color: kRedStencilColor, depth: 0.0 },\n  // Draw a third point which should occlude the second even though it is behind it.\n  { state: checkState, color: kGreenStencilColor, depth: lastDepth }];\n\n\n  t.runDepthStateTest(testStates, _expectedColor);\n});\n\ng.test('depth_test_fail').\ndesc(\n  `\n  Test that render results on depth test failure cases with 'less' depthCompare operation and\n  depthWriteEnabled is true.\n  `\n).\nparams((u) =>\nu //\n.combineWithParams([\n{ secondDepth: 1.0, lastDepth: 2.0, _expectedColor: kBaseColor }, // fail -> fail.\n{ secondDepth: 0.0, lastDepth: 2.0, _expectedColor: kRedStencilColor }, // pass -> fail.\n{ secondDepth: 2.0, lastDepth: 0.9, _expectedColor: kGreenStencilColor } // fail -> pass.\n])\n).\nfn((t) => {\n  const { secondDepth, lastDepth, _expectedColor } = t.params;\n\n  const depthSpencilFormat = 'depth24plus-stencil8';\n\n  const baseState = {\n    format: depthSpencilFormat,\n    depthWriteEnabled: true,\n    depthCompare: 'always',\n    stencilReadMask: 0xff,\n    stencilWriteMask: 0xff\n  };\n\n  const depthTestState = {\n    format: depthSpencilFormat,\n    depthWriteEnabled: true,\n    depthCompare: 'less',\n    stencilReadMask: 0xff,\n    stencilWriteMask: 0xff\n  };\n\n  const testStates = [\n  { state: baseState, color: kBaseColor, depth: 1.0 },\n  { state: depthTestState, color: kRedStencilColor, depth: secondDepth },\n  { state: depthTestState, color: kGreenStencilColor, depth: lastDepth }];\n\n\n  t.runDepthStateTest(testStates, _expectedColor);\n});\n\n// Use a depth value that's not exactly 0.5 because it is exactly between two depth16unorm value and\n// can get rounded either way (and a different way between shaders and clearDepthValue).\nconst kMiddleDepthValue = 0.5001;\n\ng.test('depth_compare_func').\ndesc(\n  `Tests each depth compare function works properly. Clears the depth attachment to various values, and renders a point at depth 0.5 with various depthCompare modes.`\n).\nparams((u) =>\nu.\ncombine(\n  'format',\n  kDepthStencilFormats.filter((format) => kTextureFormatInfo[format].depth)\n).\ncombineWithParams([\n{ depthCompare: 'never', depthClearValue: 1.0, _expected: backgroundColor },\n{ depthCompare: 'never', depthClearValue: kMiddleDepthValue, _expected: backgroundColor },\n{ depthCompare: 'never', depthClearValue: 0.0, _expected: backgroundColor },\n{ depthCompare: 'less', depthClearValue: 1.0, _expected: triangleColor },\n{ depthCompare: 'less', depthClearValue: kMiddleDepthValue, _expected: backgroundColor },\n{ depthCompare: 'less', depthClearValue: 0.0, _expected: backgroundColor },\n{ depthCompare: 'less-equal', depthClearValue: 1.0, _expected: triangleColor },\n{\n  depthCompare: 'less-equal',\n  depthClearValue: kMiddleDepthValue,\n  _expected: triangleColor\n},\n{ depthCompare: 'less-equal', depthClearValue: 0.0, _expected: backgroundColor },\n{ depthCompare: 'equal', depthClearValue: 1.0, _expected: backgroundColor },\n{ depthCompare: 'equal', depthClearValue: kMiddleDepthValue, _expected: triangleColor },\n{ depthCompare: 'equal', depthClearValue: 0.0, _expected: backgroundColor },\n{ depthCompare: 'not-equal', depthClearValue: 1.0, _expected: triangleColor },\n{\n  depthCompare: 'not-equal',\n  depthClearValue: kMiddleDepthValue,\n  _expected: backgroundColor\n},\n{ depthCompare: 'not-equal', depthClearValue: 0.0, _expected: triangleColor },\n{ depthCompare: 'greater-equal', depthClearValue: 1.0, _expected: backgroundColor },\n{\n  depthCompare: 'greater-equal',\n  depthClearValue: kMiddleDepthValue,\n  _expected: triangleColor\n},\n{ depthCompare: 'greater-equal', depthClearValue: 0.0, _expected: triangleColor },\n{ depthCompare: 'greater', depthClearValue: 1.0, _expected: backgroundColor },\n{ depthCompare: 'greater', depthClearValue: kMiddleDepthValue, _expected: backgroundColor },\n{ depthCompare: 'greater', depthClearValue: 0.0, _expected: triangleColor },\n{ depthCompare: 'always', depthClearValue: 1.0, _expected: triangleColor },\n{ depthCompare: 'always', depthClearValue: kMiddleDepthValue, _expected: triangleColor },\n{ depthCompare: 'always', depthClearValue: 0.0, _expected: triangleColor }]\n)\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceForTextureFormatOrSkipTestCase(t.params.format);\n}).\nfn((t) => {\n  const { depthCompare, depthClearValue, _expected, format } = t.params;\n\n  const colorAttachmentFormat = 'rgba8unorm';\n  const colorAttachment = t.createTextureTracked({\n    format: colorAttachmentFormat,\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n  const colorAttachmentView = colorAttachment.createView();\n\n  const depthTexture = t.createTextureTracked({\n    size: { width: 1, height: 1 },\n    format,\n    usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\n  });\n  const depthTextureView = depthTexture.createView();\n\n  const pipelineDescriptor = {\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: `\n            @vertex fn main(\n              @builtin(vertex_index) VertexIndex : u32) -> @builtin(position) vec4<f32> {\n              return vec4<f32>(0.5, 0.5, ${kMiddleDepthValue}, 1.0);\n            }\n            `\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: `\n            @fragment fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(1.0, 1.0, 1.0, 1.0);\n            }\n            `\n      }),\n      entryPoint: 'main',\n      targets: [{ format: colorAttachmentFormat }]\n    },\n    primitive: { topology: 'point-list' },\n    depthStencil: {\n      depthWriteEnabled: true,\n      depthCompare,\n      format\n    }\n  };\n  const pipeline = t.device.createRenderPipeline(pipelineDescriptor);\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const depthStencilAttachment = {\n    view: depthTextureView,\n    depthClearValue,\n    depthLoadOp: 'clear',\n    depthStoreOp: 'store'\n  };\n  if (kTextureFormatInfo[format].stencil) {\n    depthStencilAttachment.stencilClearValue = 0;\n    depthStencilAttachment.stencilLoadOp = 'clear';\n    depthStencilAttachment.stencilStoreOp = 'store';\n  }\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: colorAttachmentView,\n      clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }],\n\n    depthStencilAttachment\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectSinglePixelComparisonsAreOkInTexture({ texture: colorAttachment }, [\n  {\n    coord: { x: 0, y: 0 },\n    exp: new Uint8Array(_expected)\n  }]\n  );\n});\n\ng.test('reverse_depth').\ndesc(\n  `Tests simple rendering with reversed depth buffer, ensures depth test works properly: fragments are in correct order and out of range fragments are clipped.\n    Note that in real use case the depth range remapping is done by the modified projection matrix.\n(see https://developer.nvidia.com/content/depth-precision-visualized).`\n).\nparams((u) => u.combine('reversed', [false, true])).\nfn((t) => {\n  const colorAttachmentFormat = 'rgba8unorm';\n  const colorAttachment = t.createTextureTracked({\n    format: colorAttachmentFormat,\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n  const colorAttachmentView = colorAttachment.createView();\n\n  const depthBufferFormat = 'depth32float';\n  const depthTexture = t.createTextureTracked({\n    size: { width: 1, height: 1 },\n    format: depthBufferFormat,\n    usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\n  });\n  const depthTextureView = depthTexture.createView();\n\n  const pipelineDescriptor = {\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: `\n            struct Output {\n              @builtin(position) Position : vec4<f32>,\n              @location(0) color : vec4<f32>,\n            };\n\n            @vertex fn main(\n              @builtin(vertex_index) VertexIndex : u32,\n              @builtin(instance_index) InstanceIndex : u32) -> Output {\n              let zv = array(0.2, 0.3, -0.1, 1.1);\n              let z = zv[InstanceIndex];\n\n              var output : Output;\n              output.Position = vec4<f32>(0.5, 0.5, z, 1.0);\n              var colors : array<vec4<f32>, 4> = array<vec4<f32>, 4>(\n                  vec4<f32>(1.0, 0.0, 0.0, 1.0),\n                  vec4<f32>(0.0, 1.0, 0.0, 1.0),\n                  vec4<f32>(0.0, 0.0, 1.0, 1.0),\n                  vec4<f32>(1.0, 1.0, 1.0, 1.0)\n              );\n              output.color = colors[InstanceIndex];\n              return output;\n            }\n            `\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: `\n            @fragment fn main(\n              @location(0) color : vec4<f32>\n              ) -> @location(0) vec4<f32> {\n              return color;\n            }\n            `\n      }),\n      entryPoint: 'main',\n      targets: [{ format: colorAttachmentFormat }]\n    },\n    primitive: { topology: 'point-list' },\n    depthStencil: {\n      depthWriteEnabled: true,\n      depthCompare: t.params.reversed ? 'greater' : 'less',\n      format: depthBufferFormat\n    }\n  };\n  const pipeline = t.device.createRenderPipeline(pipelineDescriptor);\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: colorAttachmentView,\n      clearValue: { r: 0.5, g: 0.5, b: 0.5, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }],\n\n    depthStencilAttachment: {\n      view: depthTextureView,\n\n      depthClearValue: t.params.reversed ? 0.0 : 1.0,\n      depthLoadOp: 'clear',\n      depthStoreOp: 'store'\n    }\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(1, 4);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectSinglePixelComparisonsAreOkInTexture({ texture: colorAttachment }, [\n  {\n    coord: { x: 0, y: 0 },\n    exp: new Uint8Array(\n      t.params.reversed ? [0x00, 0xff, 0x00, 0xff] : [0xff, 0x00, 0x00, 0xff]\n    )\n  }]\n  );\n});"],"mappings":"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","ignoreList":[]}