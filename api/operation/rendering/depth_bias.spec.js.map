{"version":3,"file":"depth_bias.spec.js","names":["description","makeTestGroup","unreachable","kTextureFormatInfo","GPUTest","TextureTestMixin","TexelView","QuadAngle","kPointTwoFiveBiasForPointTwoFiveZOnFloat","DepthBiasTest","runDepthBiasTestInternal","depthFormat","quadAngle","bias","biasSlopeScale","biasClamp","initialDepth","renderTargetFormat","depthFormatInfo","vertexShaderCode","Flat","TiltedX","renderTarget","createTextureTracked","format","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","depthTexture","sampleCount","mipLevelCount","depthStencilAttachment","view","createView","depthLoadOp","depth","undefined","depthStoreOp","stencilLoadOp","stencil","stencilStoreOp","depthClearValue","encoder","globalThis","_TRAMPOLINE_","device","createCommandEncoder","pass","beginRenderPass","colorAttachments","loadOp","storeOp","depthCompare","testState","depthWriteEnabled","depthBias","depthBiasSlopeScale","depthBiasClamp","testPipeline","createRenderPipelineForTest","setPipeline","draw","end","queue","submit","finish","runDepthBiasTest","_expectedDepth","expColor","Depth","expTexelView","fromTexelsAsColors","_coords","expectTexelViewComparisonIsOkInTexture","texture","runDepthBiasTestFor24BitFormat","_expectedColor","R","G","B","A","vertex","depthStencil","createRenderPipeline","layout","module","createShaderModule","code","entryPoint","fragment","targets","g","test","desc","params","u","combineWithParams","beforeAllSubcases","t","skipIf","isCompatibility","fn","combine","Float32Array"],"sources":["../../../../../src/webgpu/api/operation/rendering/depth_bias.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests render results with different depth bias values like 'positive', 'negative',\n'slope', 'clamp', etc.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../common/util/util.js';\nimport {\n  kTextureFormatInfo } from\n\n\n'../../../format_info.js';\nimport { GPUTest, TextureTestMixin } from '../../../gpu_test.js';\nimport { TexelView } from '../../../util/texture/texel_view.js';var\n\nQuadAngle = /*#__PURE__*/function (QuadAngle) {QuadAngle[QuadAngle[\"Flat\"] = 0] = \"Flat\";QuadAngle[QuadAngle[\"TiltedX\"] = 1] = \"TiltedX\";return QuadAngle;}(QuadAngle || {});\n\n\n\n\n// Floating point depth buffers use the following formula to calculate bias\n// bias = depthBias * 2 ** (exponent(max z of primitive) - number of bits in mantissa) +\n//        slopeScale * maxSlope\n// https://docs.microsoft.com/en-us/windows/win32/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias\n// https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDepthBias.html\n// https://developer.apple.com/documentation/metal/mtlrendercommandencoder/1516269-setdepthbias\n//\n// To get a final bias of 0.25 for primitives with z = 0.25, we can use\n// depthBias = 0.25 / (2 ** (-2 - 23)) = 8388608.\nconst kPointTwoFiveBiasForPointTwoFiveZOnFloat = 8388608;\n\nclass DepthBiasTest extends TextureTestMixin(GPUTest) {\n  runDepthBiasTestInternal(\n  depthFormat,\n  {\n    quadAngle,\n    bias,\n    biasSlopeScale,\n    biasClamp,\n    initialDepth\n\n\n\n\n\n\n  })\n  {\n    const renderTargetFormat = 'rgba8unorm';\n    const depthFormatInfo = kTextureFormatInfo[depthFormat];\n\n    let vertexShaderCode;\n    switch (quadAngle) {\n      case QuadAngle.Flat:\n        // Draw a square at z = 0.25.\n        vertexShaderCode = `\n          @vertex\n          fn main(@builtin(vertex_index) VertexIndex : u32) -> @builtin(position) vec4<f32> {\n            var pos = array<vec2<f32>, 6>(\n            vec2<f32>(-1.0, -1.0),\n            vec2<f32>( 1.0, -1.0),\n            vec2<f32>(-1.0,  1.0),\n            vec2<f32>(-1.0,  1.0),\n            vec2<f32>( 1.0, -1.0),\n            vec2<f32>( 1.0,  1.0));\n            return vec4<f32>(pos[VertexIndex], 0.25, 1.0);\n          }\n          `;\n        break;\n      case QuadAngle.TiltedX:\n        // Draw a square ranging from 0 to 0.5, bottom to top.\n        vertexShaderCode = `\n          @vertex\n          fn main(@builtin(vertex_index) VertexIndex : u32) -> @builtin(position) vec4<f32> {\n            var pos = array<vec3<f32>, 6>(\n            vec3<f32>(-1.0, -1.0, 0.0),\n            vec3<f32>( 1.0, -1.0, 0.0),\n            vec3<f32>(-1.0,  1.0, 0.5),\n            vec3<f32>(-1.0,  1.0, 0.5),\n            vec3<f32>( 1.0, -1.0, 0.0),\n            vec3<f32>( 1.0,  1.0, 0.5));\n            return vec4<f32>(pos[VertexIndex], 1.0);\n          }\n          `;\n        break;\n      default:\n        unreachable();\n    }\n\n    const renderTarget = this.createTextureTracked({\n      format: renderTargetFormat,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n    });\n\n    const depthTexture = this.createTextureTracked({\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      format: depthFormat,\n      sampleCount: 1,\n      mipLevelCount: 1,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\n    });\n\n    const depthStencilAttachment = {\n      view: depthTexture.createView(),\n      depthLoadOp: depthFormatInfo.depth ? 'clear' : undefined,\n      depthStoreOp: depthFormatInfo.depth ? 'store' : undefined,\n      stencilLoadOp: depthFormatInfo.stencil ? 'clear' : undefined,\n      stencilStoreOp: depthFormatInfo.stencil ? 'store' : undefined,\n      depthClearValue: initialDepth\n    };\n\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", this.device, this.device.createCommandEncoder, [], () => this.device.createCommandEncoder());\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: renderTarget.createView(),\n        loadOp: 'load',\n        storeOp: 'store'\n      }],\n\n      depthStencilAttachment\n    });\n\n    let depthCompare = 'always';\n    if (depthFormat !== 'depth32float') {\n      depthCompare = 'greater';\n    }\n\n    const testState = {\n      format: depthFormat,\n      depthCompare,\n      depthWriteEnabled: true,\n      depthBias: bias,\n      depthBiasSlopeScale: biasSlopeScale,\n      depthBiasClamp: biasClamp\n    };\n\n    // Draw a square with the given depth state and bias values.\n    const testPipeline = this.createRenderPipelineForTest(vertexShaderCode, testState);\n    pass.setPipeline(testPipeline);\n    pass.draw(6);\n    pass.end();\n    globalThis._TRAMPOLINE_(\"submit\", this.device, this.device.queue.submit, [[encoder.finish()]], () => this.device.queue.submit([encoder.finish()]));\n\n    return { renderTarget, depthTexture };\n  }\n\n  runDepthBiasTest(\n  depthFormat,\n  {\n    quadAngle,\n    bias,\n    biasSlopeScale,\n    biasClamp,\n    _expectedDepth\n\n\n\n\n\n\n  })\n  {\n    const { depthTexture } = this.runDepthBiasTestInternal(depthFormat, {\n      quadAngle,\n      bias,\n      biasSlopeScale,\n      biasClamp,\n      initialDepth: 0\n    });\n\n    const expColor = { Depth: _expectedDepth };\n    const expTexelView = TexelView.fromTexelsAsColors(depthFormat, (_coords) => expColor);\n    this.expectTexelViewComparisonIsOkInTexture({ texture: depthTexture }, expTexelView, [1, 1]);\n  }\n\n  runDepthBiasTestFor24BitFormat(\n  depthFormat,\n  {\n    quadAngle,\n    bias,\n    biasSlopeScale,\n    biasClamp,\n    _expectedColor\n\n\n\n\n\n\n  })\n  {\n    const { renderTarget } = this.runDepthBiasTestInternal(depthFormat, {\n      quadAngle,\n      bias,\n      biasSlopeScale,\n      biasClamp,\n      initialDepth: 0.4\n    });\n\n    const renderTargetFormat = 'rgba8unorm';\n    const expColor = {\n      R: _expectedColor[0],\n      G: _expectedColor[1],\n      B: _expectedColor[2],\n      A: _expectedColor[3]\n    };\n    const expTexelView = TexelView.fromTexelsAsColors(renderTargetFormat, (_coords) => expColor);\n    this.expectTexelViewComparisonIsOkInTexture({ texture: renderTarget }, expTexelView, [1, 1]);\n  }\n\n  createRenderPipelineForTest(\n  vertex,\n  depthStencil)\n  {\n    return this.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: this.device.createShaderModule({\n          code: vertex\n        }),\n        entryPoint: 'main'\n      },\n      fragment: {\n        targets: [{ format: 'rgba8unorm' }],\n        module: this.device.createShaderModule({\n          code: `\n            @fragment fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(1.0, 0.0, 0.0, 1.0);\n            }`\n        }),\n        entryPoint: 'main'\n      },\n      depthStencil\n    });\n  }\n}\n\nexport const g = makeTestGroup(DepthBiasTest);\n\ng.test('depth_bias').\ndesc(\n  `\n  Tests that a square with different depth bias values like 'positive', 'negative',\n  'slope', 'clamp', etc. is drawn as expected.\n  `\n).\nparams((u) =>\nu //\n.combineWithParams([\n{\n  quadAngle: QuadAngle.Flat,\n  bias: kPointTwoFiveBiasForPointTwoFiveZOnFloat,\n  biasSlopeScale: 0,\n  biasClamp: 0,\n  _expectedDepth: 0.5\n},\n{\n  quadAngle: QuadAngle.Flat,\n  bias: kPointTwoFiveBiasForPointTwoFiveZOnFloat,\n  biasSlopeScale: 0,\n  biasClamp: 0.125,\n  _expectedDepth: 0.375\n},\n{\n  quadAngle: QuadAngle.Flat,\n  bias: -kPointTwoFiveBiasForPointTwoFiveZOnFloat,\n  biasSlopeScale: 0,\n  biasClamp: 0.125,\n  _expectedDepth: 0\n},\n{\n  quadAngle: QuadAngle.Flat,\n  bias: -kPointTwoFiveBiasForPointTwoFiveZOnFloat,\n  biasSlopeScale: 0,\n  biasClamp: -0.125,\n  _expectedDepth: 0.125\n},\n{\n  quadAngle: QuadAngle.TiltedX,\n  bias: 0,\n  biasSlopeScale: 0,\n  biasClamp: 0,\n  _expectedDepth: 0.25\n},\n{\n  quadAngle: QuadAngle.TiltedX,\n  bias: 0,\n  biasSlopeScale: 1,\n  biasClamp: 0,\n  _expectedDepth: 0.75\n},\n{\n  quadAngle: QuadAngle.TiltedX,\n  bias: 0,\n  biasSlopeScale: -0.5,\n  biasClamp: 0,\n  _expectedDepth: 0\n}]\n)\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && t.params.biasClamp !== 0,\n    'non zero depthBiasClamp is not supported in compatibility mode'\n  );\n}).\nfn((t) => {\n  t.runDepthBiasTest('depth32float', t.params);\n});\n\ng.test('depth_bias_24bit_format').\ndesc(\n  `\n  Tests that a square with different depth bias values like 'positive', 'negative',\n  'slope', 'clamp', etc. is drawn as expected with 24 bit depth format.\n\n  TODO: Enhance these tests by reading back the depth (emulating the copy using texture sampling)\n  and checking the result directly, like the non-24-bit depth tests, instead of just relying on\n  whether the depth test passes or fails.\n  `\n).\nparams((u) =>\nu //\n.combine('format', ['depth24plus', 'depth24plus-stencil8']).\ncombineWithParams([\n{\n  quadAngle: QuadAngle.Flat,\n  bias: 0.25 * (1 << 25),\n  biasSlopeScale: 0,\n  biasClamp: 0,\n  _expectedColor: new Float32Array([1.0, 0.0, 0.0, 1.0])\n},\n{\n  quadAngle: QuadAngle.TiltedX,\n  bias: 0.25 * (1 << 25),\n  biasSlopeScale: 1,\n  biasClamp: 0,\n  _expectedColor: new Float32Array([1.0, 0.0, 0.0, 1.0])\n},\n{\n  quadAngle: QuadAngle.Flat,\n  bias: 0.25 * (1 << 25),\n  biasSlopeScale: 0,\n  biasClamp: 0.1,\n  _expectedColor: new Float32Array([0.0, 0.0, 0.0, 0.0])\n}]\n)\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && t.params.biasClamp !== 0,\n    'non zero depthBiasClamp is not supported in compatibility mode'\n  );\n}).\nfn((t) => {\n  const { format } = t.params;\n  t.runDepthBiasTestFor24BitFormat(format, t.params);\n});"],"mappings":"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","ignoreList":[]}