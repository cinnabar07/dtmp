{"version":3,"file":"all_limits_and_features.spec.js","names":["description","makeTestGroup","GPUTest","GPUTestSubcaseBatchState","initUncanonicalizedDeviceDescriptor","getAdapterLimitsAsDeviceRequiredLimits","adapter","requiredLimits","adapterLimits","limits","key","setAllLimitsToAdapterLimitsAndAddAllFeatures","desc","descWithMaxLimits","defaultQueue","requiredFeatures","features","AllLimitsAndFeaturesGPUTestSubcaseBatchState","selectDeviceOrSkipTestCase","descriptor","descriptorModifierFn","wrapper","AllLimitsAndFeaturesLimitsTest","MakeSharedState","recorder","params","g","test","fn","t","deviceLimits","device","deviceLimit","adapterLimit","expect","feature","has"],"sources":["../../../../../src/webgpu/api/operation/device/all_limits_and_features.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Test you can request an device with all features and limits`;\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport {\n\n  GPUTest,\n  GPUTestSubcaseBatchState,\n  initUncanonicalizedDeviceDescriptor } from\n'../../../gpu_test.js';\n\n\n/**\n * Gets the adapter limits as a standard JavaScript object.\n */\nfunction getAdapterLimitsAsDeviceRequiredLimits(adapter) {\n  const requiredLimits = {};\n  const adapterLimits = adapter.limits;\n  for (const key in adapter.limits) {\n    requiredLimits[key] = adapterLimits[key];\n  }\n  return requiredLimits;\n}\n\nfunction setAllLimitsToAdapterLimitsAndAddAllFeatures(\nadapter,\ndesc)\n{\n  const descWithMaxLimits = {\n    defaultQueue: {},\n    ...desc,\n    requiredFeatures: [...adapter.features],\n    requiredLimits: getAdapterLimitsAsDeviceRequiredLimits(adapter)\n  };\n  return descWithMaxLimits;\n}\n\n/**\n * Used by MaxLimitsTest to request a device with all the max limits of the adapter.\n */\nexport class AllLimitsAndFeaturesGPUTestSubcaseBatchState extends GPUTestSubcaseBatchState {\n  selectDeviceOrSkipTestCase(\n  descriptor,\n  descriptorModifierFn)\n  {\n    const wrapper = (adapter, desc) => {\n      desc = descriptorModifierFn ? descriptorModifierFn(adapter, desc) : desc;\n      return setAllLimitsToAdapterLimitsAndAddAllFeatures(adapter, desc);\n    };\n    super.selectDeviceOrSkipTestCase(initUncanonicalizedDeviceDescriptor(descriptor), wrapper);\n  }\n}\n\n/**\n * A Test that requests all the max limits from the adapter on the device.\n */\nexport class AllLimitsAndFeaturesLimitsTest extends GPUTest {\n  static MakeSharedState(\n  recorder,\n  params)\n  {\n    return new AllLimitsAndFeaturesGPUTestSubcaseBatchState(recorder, params);\n  }\n}\n\nexport const g = makeTestGroup(AllLimitsAndFeaturesLimitsTest);\n\ng.test('everything').\ndesc(\n  `\nTest we can request all features and limits.\n\nIt is expected that, even though this is generally not recommended, because\nit is possible, make sure it works and continues to work going forward so that\nchanges to WebGPU do not break sites requesting everything.\n`\n).\nfn((t) => {\n  // Test that all the limits on the device match the adapter.\n  const adapterLimits = t.adapter.limits;\n  const deviceLimits = t.device.limits;\n  for (const key in t.adapter.limits) {\n    const deviceLimit = deviceLimits[key];\n    const adapterLimit = adapterLimits[key];\n    t.expect(\n      deviceLimit === adapterLimit,\n      `device.limits.${key} (${deviceLimit}) === adapter.limits.${key} (${adapterLimit})`\n    );\n  }\n\n  // Test that all the adapter features are on the device.\n  for (const feature of t.adapter.features) {\n    t.expect(t.device.features.has(feature), `device has feature: ${feature}`);\n  }\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG,6DAA6D,CAC3F,SAASC,aAAa,QAAQ,4CAA4C,CAC1E;;EAEEC,OAAO;EACPC,wBAAwB;EACxBC,mCAAmC;AACrC,sBAAsB;;;AAGtB;AACA;AACA;AACA,SAASC,sCAAsCA,CAACC,OAAO,EAAE;EACvD,MAAMC,cAAc,GAAG,CAAC,CAAC;EACzB,MAAMC,aAAa,GAAGF,OAAO,CAACG,MAAM;EACpC,KAAK,MAAMC,GAAG,IAAIJ,OAAO,CAACG,MAAM,EAAE;IAChCF,cAAc,CAACG,GAAG,CAAC,GAAGF,aAAa,CAACE,GAAG,CAAC;EAC1C;EACA,OAAOH,cAAc;AACvB;;AAEA,SAASI,4CAA4CA;AACrDL,OAAO;AACPM,IAAI;AACJ;EACE,MAAMC,iBAAiB,GAAG;IACxBC,YAAY,EAAE,CAAC,CAAC;IAChB,GAAGF,IAAI;IACPG,gBAAgB,EAAE,CAAC,GAAGT,OAAO,CAACU,QAAQ,CAAC;IACvCT,cAAc,EAAEF,sCAAsC,CAACC,OAAO;EAChE,CAAC;EACD,OAAOO,iBAAiB;AAC1B;;AAEA;AACA;AACA;AACA,OAAO,MAAMI,4CAA4C,SAASd,wBAAwB,CAAC;EACzFe,0BAA0BA;EAC1BC,UAAU;EACVC,oBAAoB;EACpB;IACE,MAAMC,OAAO,GAAGA,CAACf,OAAO,EAAEM,IAAI,KAAK;MACjCA,IAAI,GAAGQ,oBAAoB,GAAGA,oBAAoB,CAACd,OAAO,EAAEM,IAAI,CAAC,GAAGA,IAAI;MACxE,OAAOD,4CAA4C,CAACL,OAAO,EAAEM,IAAI,CAAC;IACpE,CAAC;IACD,KAAK,CAACM,0BAA0B,CAACd,mCAAmC,CAACe,UAAU,CAAC,EAAEE,OAAO,CAAC;EAC5F;AACF;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,8BAA8B,SAASpB,OAAO,CAAC;EAC1D,OAAOqB,eAAeA;EACtBC,QAAQ;EACRC,MAAM;EACN;IACE,OAAO,IAAIR,4CAA4C,CAACO,QAAQ,EAAEC,MAAM,CAAC;EAC3E;AACF;;AAEA,OAAO,MAAMC,CAAC,GAAGzB,aAAa,CAACqB,8BAA8B,CAAC;;AAE9DI,CAAC,CAACC,IAAI,CAAC,YAAY,CAAC;AACpBf,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDgB,EAAE,CAAC,CAACC,CAAC,KAAK;EACR;EACA,MAAMrB,aAAa,GAAGqB,CAAC,CAACvB,OAAO,CAACG,MAAM;EACtC,MAAMqB,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACtB,MAAM;EACpC,KAAK,MAAMC,GAAG,IAAImB,CAAC,CAACvB,OAAO,CAACG,MAAM,EAAE;IAClC,MAAMuB,WAAW,GAAGF,YAAY,CAACpB,GAAG,CAAC;IACrC,MAAMuB,YAAY,GAAGzB,aAAa,CAACE,GAAG,CAAC;IACvCmB,CAAC,CAACK,MAAM;MACNF,WAAW,KAAKC,YAAY;MAC5B,iBAAiBvB,GAAG,KAAKsB,WAAW,wBAAwBtB,GAAG,KAAKuB,YAAY;IAClF,CAAC;EACH;;EAEA;EACA,KAAK,MAAME,OAAO,IAAIN,CAAC,CAACvB,OAAO,CAACU,QAAQ,EAAE;IACxCa,CAAC,CAACK,MAAM,CAACL,CAAC,CAACE,MAAM,CAACf,QAAQ,CAACoB,GAAG,CAACD,OAAO,CAAC,EAAE,uBAAuBA,OAAO,EAAE,CAAC;EAC5E;AACF,CAAC,CAAC","ignoreList":[]}