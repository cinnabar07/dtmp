{"version":3,"file":"lost.spec.js","names":["description","Fixture","makeTestGroup","attemptGarbageCollection","getGPU","assert","assertNotSettledWithinTime","raceWithRejectOnTimeout","DeviceLostTests","kDeviceLostTimeoutMS","getDeviceLostWithTimeout","lost","expectDeviceDestroyed","device","eventualAsyncExpectation","niceStack","expect","reason","ex","message","rec","expectationFailed","g","test","desc","fn","t","adapter","globalThis","_TRAMPOLINE_","requestAdapter","requestDeviceTracked","destroy","lostPromise1","lostPromise2","lostPromise3","lost1","lost2","lost3","lostPromise4","lost4"],"sources":["../../../../../src/webgpu/api/operation/device/lost.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests for GPUDevice.lost.\n`;import { Fixture } from '../../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { attemptGarbageCollection } from '../../../../common/util/collect_garbage.js';\nimport { getGPU } from '../../../../common/util/navigator_gpu.js';\nimport {\n  assert,\n  assertNotSettledWithinTime,\n  raceWithRejectOnTimeout } from\n'../../../../common/util/util.js';\n\nclass DeviceLostTests extends Fixture {\n  // Default timeout for waiting for device lost is 2 seconds.\n  kDeviceLostTimeoutMS = 2000;\n\n  getDeviceLostWithTimeout(lost) {\n    return raceWithRejectOnTimeout(lost, this.kDeviceLostTimeoutMS, 'device was not lost');\n  }\n\n  expectDeviceDestroyed(device) {\n    this.eventualAsyncExpectation(async (niceStack) => {\n      try {\n        const lost = await this.getDeviceLostWithTimeout(device.lost);\n        this.expect(lost.reason === 'destroyed', 'device was lost from destroy');\n      } catch (ex) {\n        niceStack.message = 'device was not lost';\n        this.rec.expectationFailed(niceStack);\n      }\n    });\n  }\n}\n\nexport const g = makeTestGroup(DeviceLostTests);\n\ng.test('not_lost_on_gc').\ndesc(\n  `'lost' is never resolved by GPUDevice being garbage collected (with attemptGarbageCollection).`\n).\nfn(async (t) => {\n  // Wraps a lost promise object creation in a function scope so that the device has the best\n  // chance of being gone and ready for GC before trying to resolve the lost promise.\n  const { lost } = await (async () => {\n    const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", getGPU(t.rec), getGPU(t.rec).requestAdapter, [], () => getGPU(t.rec).requestAdapter());\n    assert(adapter !== null);\n    const device = await t.requestDeviceTracked(adapter);\n    return { lost: device.lost };\n  })();\n  await assertNotSettledWithinTime(lost, t.kDeviceLostTimeoutMS, 'device was unexpectedly lost');\n\n  await attemptGarbageCollection();\n});\n\ng.test('lost_on_destroy').\ndesc(`'lost' is resolved, with reason='destroyed', on GPUDevice.destroy().`).\nfn(async (t) => {\n  const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", getGPU(t.rec), getGPU(t.rec).requestAdapter, [], () => getGPU(t.rec).requestAdapter());\n  assert(adapter !== null);\n  const device = await t.requestDeviceTracked(adapter);\n  t.expectDeviceDestroyed(device);\n  globalThis._TRAMPOLINE_(\"destroy\", device, device.destroy, [], () => device.destroy());\n});\n\ng.test('same_object').\ndesc(`'lost' provides the same Promise and GPUDeviceLostInfo objects each time it's accessed.`).\nfn(async (t) => {\n  const adapter = await globalThis._TRAMPOLINE_(\"requestAdapter\", getGPU(t.rec), getGPU(t.rec).requestAdapter, [], () => getGPU(t.rec).requestAdapter());\n  assert(adapter !== null);\n  const device = await t.requestDeviceTracked(adapter);\n\n  // The promises should be the same promise object.\n  const lostPromise1 = device.lost;\n  const lostPromise2 = device.lost;\n  t.expect(lostPromise1 === lostPromise2);\n\n  // Promise object should still be the same after destroy.\n  globalThis._TRAMPOLINE_(\"destroy\", device, device.destroy, [], () => device.destroy());\n  const lostPromise3 = device.lost;\n  t.expect(lostPromise1 === lostPromise3);\n\n  // The results should also be the same result object.\n  const lost1 = await t.getDeviceLostWithTimeout(lostPromise1);\n  const lost2 = await t.getDeviceLostWithTimeout(lostPromise2);\n  const lost3 = await t.getDeviceLostWithTimeout(lostPromise3);\n  // Promise object should still be the same after we've been notified about device loss.\n  const lostPromise4 = device.lost;\n  t.expect(lostPromise1 === lostPromise4);\n  const lost4 = await t.getDeviceLostWithTimeout(lostPromise4);\n  t.expect(lost1 === lost2 && lost2 === lost3 && lost3 === lost4);\n});"],"mappings":"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","ignoreList":[]}