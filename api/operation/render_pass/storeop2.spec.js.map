{"version":3,"file":"storeop2.spec.js","names":["description","makeTestGroup","GPUTest","g","test","desc","paramsSimple","storeOp","_expected","fn","t","renderTexture","createTextureTracked","size","width","height","depthOrArrayLayers","format","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","renderPipeline","device","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","targets","primitive","topology","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","createView","clearValue","r","b","a","loadOp","params","setPipeline","draw","end","queue","submit","finish","expectSingleColor","exp","R"],"sources":["../../../../../src/webgpu/api/operation/render_pass/storeop2.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nrenderPass store op test that drawn quad is either stored or cleared based on storeop\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('storeOp_controls_whether_1x1_drawn_quad_is_stored').\ndesc(\n  `\nTODO: is this duplicated with api,operation,render_pass,storeOp?\nTODO: needs review and rename\n`\n).\nparamsSimple([\n{ storeOp: 'store', _expected: 1 }, //\n{ storeOp: 'discard', _expected: 0 }]\n).\nfn((t) => {\n  const renderTexture = t.createTextureTracked({\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    format: 'r8unorm',\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n\n  // create render pipeline\n  const renderPipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: `\n            @vertex fn main(\n              @builtin(vertex_index) VertexIndex : u32\n              ) -> @builtin(position) vec4<f32> {\n              var pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n                  vec2<f32>( 1.0, -1.0),\n                  vec2<f32>( 1.0,  1.0),\n                  vec2<f32>(-1.0,  1.0));\n              return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n            }\n            `\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: `\n            @fragment fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(1.0, 0.0, 0.0, 1.0);\n            }\n            `\n      }),\n      entryPoint: 'main',\n      targets: [{ format: 'r8unorm' }]\n    },\n    primitive: { topology: 'triangle-list' }\n  });\n\n  // encode pass and submit\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: renderTexture.createView(),\n      clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 0.0 },\n      loadOp: 'clear',\n      storeOp: t.params.storeOp\n    }]\n\n  });\n  pass.setPipeline(renderPipeline);\n  pass.draw(3);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  // expect the buffer to be clear\n  t.expectSingleColor(renderTexture, 'r8unorm', {\n    size: [1, 1, 1],\n    exp: { R: t.params._expected }\n  });\n});"],"mappings":"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","ignoreList":[]}