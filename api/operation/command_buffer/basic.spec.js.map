{"version":3,"file":"basic.spec.js","names":["description","makeTestGroup","memcpy","GPUTest","g","test","fn","t","encoder","globalThis","_TRAMPOLINE_","device","createCommandEncoder","cmd","finish","queue","submit","data","Uint32Array","src","createBufferTracked","mappedAtCreation","size","usage","GPUBufferUsage","COPY_SRC","COPY_DST","dst","getMappedRange","unmap","mid","createTextureTracked","width","height","depthOrArrayLayers","format","GPUTextureUsage","copyBufferToTexture","buffer","bytesPerRow","texture","mipLevel","origin","x","y","z","copyTextureToBuffer","expectGPUBufferValuesEqual","midDesc","mid1","mid2","copyTextureToTexture"],"sources":["../../../../../src/webgpu/api/operation/command_buffer/basic.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nBasic tests.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { memcpy } from '../../../../common/util/util.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('empty').fn((t) => {\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const cmd = encoder.finish();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[cmd]], () => t.device.queue.submit([cmd]));\n});\n\ng.test('b2t2b').fn((t) => {\n  const data = new Uint32Array([0x01020304]);\n\n  const src = t.createBufferTracked({\n    mappedAtCreation: true,\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n  memcpy({ src: data }, { dst: src.getMappedRange() });\n  src.unmap();\n\n  const dst = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n\n  const mid = t.createTextureTracked({\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    format: 'rgba8uint',\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  encoder.copyBufferToTexture(\n    { buffer: src, bytesPerRow: 256 },\n    { texture: mid, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  encoder.copyTextureToBuffer(\n    { texture: mid, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { buffer: dst, bytesPerRow: 256 },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(dst, data);\n});\n\ng.test('b2t2t2b').fn((t) => {\n  const data = new Uint32Array([0x01020304]);\n\n  const src = t.createBufferTracked({\n    mappedAtCreation: true,\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n  memcpy({ src: data }, { dst: src.getMappedRange() });\n  src.unmap();\n\n  const dst = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n\n  const midDesc = {\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    format: 'rgba8uint',\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST\n  };\n  const mid1 = t.createTextureTracked(midDesc);\n  const mid2 = t.createTextureTracked(midDesc);\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  encoder.copyBufferToTexture(\n    { buffer: src, bytesPerRow: 256 },\n    { texture: mid1, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  encoder.copyTextureToTexture(\n    { texture: mid1, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { texture: mid2, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  encoder.copyTextureToBuffer(\n    { texture: mid2, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { buffer: dst, bytesPerRow: 256 },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(dst, data);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,4CAA4C,CAC5E,SAASC,MAAM,QAAQ,iCAAiC,CACxD,SAASC,OAAO,QAAQ,sBAAsB;;AAE9C,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,OAAO,CAAC;;AAEvCC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAACC,EAAE,CAAC,CAACC,CAAC,KAAK;EACxB,MAAMC,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEH,CAAC,CAACI,MAAM,EAAEJ,CAAC,CAACI,MAAM,CAACC,oBAAoB,EAAE,EAAE,EAAE,MAAAH,UAAA,CAAAC,YAAA,yBAAMH,CAAC,CAACI,MAAM,EAARJ,CAAC,CAACI,MAAM,CAAAC,oBAAA,YAARL,CAAC,CAACI,MAAM,CAACC,oBAAoB,GAAE,CAAC;EACnJ,MAAMC,GAAG,GAAGL,OAAO,CAACM,MAAM,CAAC,CAAC;EAC5BL,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAEH,CAAC,CAACI,MAAM,EAAEJ,CAAC,CAACI,MAAM,CAACI,KAAK,CAACC,MAAM,EAAE,CAAC,CAACH,GAAG,CAAC,CAAC,EAAE,MAAAJ,UAAA,CAAAC,YAAA,WAAMH,CAAC,CAACI,MAAM,EAARJ,CAAC,CAACI,MAAM,CAACI,KAAK,CAAAC,MAAA,GAAQ,CAACH,GAAG,CAAC,SAA3BN,CAAC,CAACI,MAAM,CAACI,KAAK,CAACC,MAAM,CAAC,CAACH,GAAG,CAAC,EAAC,CAAC;AACjH,CAAC,CAAC;;AAEFT,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC,CAACC,EAAE,CAAC,CAACC,CAAC,KAAK;EACxB,MAAMU,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC;;EAE1C,MAAMC,GAAG,GAAGZ,CAAC,CAACa,mBAAmB,CAAC;IAChCC,gBAAgB,EAAE,IAAI;IACtBC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE;EAClD,CAAC,CAAC;EACFxB,MAAM,CAAC,EAAEiB,GAAG,EAAEF,IAAI,CAAC,CAAC,EAAE,EAAEU,GAAG,EAAER,GAAG,CAACS,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACpDT,GAAG,CAACU,KAAK,CAAC,CAAC;;EAEX,MAAMF,GAAG,GAAGpB,CAAC,CAACa,mBAAmB,CAAC;IAChCE,IAAI,EAAE,CAAC;IACPC,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE;EAClD,CAAC,CAAC;;EAEF,MAAMI,GAAG,GAAGvB,CAAC,CAACwB,oBAAoB,CAAC;IACjCT,IAAI,EAAE,EAAEU,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC,CAAC;IACpDC,MAAM,EAAE,WAAW;IACnBZ,KAAK,EAAEa,eAAe,CAACX,QAAQ,GAAGW,eAAe,CAACV;EACpD,CAAC,CAAC;;EAEF,MAAMlB,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEH,CAAC,CAACI,MAAM,EAAEJ,CAAC,CAACI,MAAM,CAACC,oBAAoB,EAAE,EAAE,EAAE,MAAAH,UAAA,CAAAC,YAAA,yBAAMH,CAAC,CAACI,MAAM,EAARJ,CAAC,CAACI,MAAM,CAAAC,oBAAA,YAARL,CAAC,CAACI,MAAM,CAACC,oBAAoB,GAAE,CAAC;EACnJJ,OAAO,CAAC6B,mBAAmB;IACzB,EAAEC,MAAM,EAAEnB,GAAG,EAAEoB,WAAW,EAAE,GAAG,CAAC,CAAC;IACjC,EAAEC,OAAO,EAAEV,GAAG,EAAEW,QAAQ,EAAE,CAAC,EAAEC,MAAM,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,EAAEb,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,CAAC;EACD1B,OAAO,CAACsC,mBAAmB;IACzB,EAAEN,OAAO,EAAEV,GAAG,EAAEW,QAAQ,EAAE,CAAC,EAAEC,MAAM,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,EAAEP,MAAM,EAAEX,GAAG,EAAEY,WAAW,EAAE,GAAG,CAAC,CAAC;IACjC,EAAEP,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,CAAC;EACDzB,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAEH,CAAC,CAACI,MAAM,EAAEJ,CAAC,CAACI,MAAM,CAACI,KAAK,CAACC,MAAM,EAAE,CAAC,CAACR,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAAL,UAAA,CAAAC,YAAA,WAAMH,CAAC,CAACI,MAAM,EAARJ,CAAC,CAACI,MAAM,CAACI,KAAK,CAAAC,MAAA,GAAQ,CAACR,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,SAAxCP,CAAC,CAACI,MAAM,CAACI,KAAK,CAACC,MAAM,CAAC,CAACR,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;;EAEzIP,CAAC,CAACwC,0BAA0B,CAACpB,GAAG,EAAEV,IAAI,CAAC;AACzC,CAAC,CAAC;;AAEFb,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC,CAACC,EAAE,CAAC,CAACC,CAAC,KAAK;EAC1B,MAAMU,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC;;EAE1C,MAAMC,GAAG,GAAGZ,CAAC,CAACa,mBAAmB,CAAC;IAChCC,gBAAgB,EAAE,IAAI;IACtBC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE;EAClD,CAAC,CAAC;EACFxB,MAAM,CAAC,EAAEiB,GAAG,EAAEF,IAAI,CAAC,CAAC,EAAE,EAAEU,GAAG,EAAER,GAAG,CAACS,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACpDT,GAAG,CAACU,KAAK,CAAC,CAAC;;EAEX,MAAMF,GAAG,GAAGpB,CAAC,CAACa,mBAAmB,CAAC;IAChCE,IAAI,EAAE,CAAC;IACPC,KAAK,EAAEC,cAAc,CAACC,QAAQ,GAAGD,cAAc,CAACE;EAClD,CAAC,CAAC;;EAEF,MAAMsB,OAAO,GAAG;IACd1B,IAAI,EAAE,EAAEU,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC,CAAC;IACpDC,MAAM,EAAE,WAAW;IACnBZ,KAAK,EAAEa,eAAe,CAACX,QAAQ,GAAGW,eAAe,CAACV;EACpD,CAAC;EACD,MAAMuB,IAAI,GAAG1C,CAAC,CAACwB,oBAAoB,CAACiB,OAAO,CAAC;EAC5C,MAAME,IAAI,GAAG3C,CAAC,CAACwB,oBAAoB,CAACiB,OAAO,CAAC;;EAE5C,MAAMxC,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEH,CAAC,CAACI,MAAM,EAAEJ,CAAC,CAACI,MAAM,CAACC,oBAAoB,EAAE,EAAE,EAAE,MAAAH,UAAA,CAAAC,YAAA,yBAAMH,CAAC,CAACI,MAAM,EAARJ,CAAC,CAACI,MAAM,CAAAC,oBAAA,YAARL,CAAC,CAACI,MAAM,CAACC,oBAAoB,GAAE,CAAC;EACnJJ,OAAO,CAAC6B,mBAAmB;IACzB,EAAEC,MAAM,EAAEnB,GAAG,EAAEoB,WAAW,EAAE,GAAG,CAAC,CAAC;IACjC,EAAEC,OAAO,EAAES,IAAI,EAAER,QAAQ,EAAE,CAAC,EAAEC,MAAM,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,EAAEb,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,CAAC;EACD1B,OAAO,CAAC2C,oBAAoB;IAC1B,EAAEX,OAAO,EAAES,IAAI,EAAER,QAAQ,EAAE,CAAC,EAAEC,MAAM,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,EAAEL,OAAO,EAAEU,IAAI,EAAET,QAAQ,EAAE,CAAC,EAAEC,MAAM,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,EAAEb,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,CAAC;EACD1B,OAAO,CAACsC,mBAAmB;IACzB,EAAEN,OAAO,EAAEU,IAAI,EAAET,QAAQ,EAAE,CAAC,EAAEC,MAAM,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,EAAEP,MAAM,EAAEX,GAAG,EAAEY,WAAW,EAAE,GAAG,CAAC,CAAC;IACjC,EAAEP,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,CAAC;EACDzB,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAEH,CAAC,CAACI,MAAM,EAAEJ,CAAC,CAACI,MAAM,CAACI,KAAK,CAACC,MAAM,EAAE,CAAC,CAACR,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAAL,UAAA,CAAAC,YAAA,WAAMH,CAAC,CAACI,MAAM,EAARJ,CAAC,CAACI,MAAM,CAACI,KAAK,CAAAC,MAAA,GAAQ,CAACR,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,SAAxCP,CAAC,CAACI,MAAM,CAACI,KAAK,CAACC,MAAM,CAAC,CAACR,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;;EAEzIP,CAAC,CAACwC,0BAA0B,CAACpB,GAAG,EAAEV,IAAI,CAAC;AACzC,CAAC,CAAC","ignoreList":[]}