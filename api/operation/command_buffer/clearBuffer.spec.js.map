{"version":3,"file":"clearBuffer.spec.js","names":["description","makeTestGroup","GPUTest","g","test","desc","paramsSubcasesOnly","u","combine","undefined","expand","p","offset","size","fn","t","bufferSize","params","bufferData","Uint8Array","i","buffer","makeBufferWithContents","GPUBufferUsage","COPY_DST","COPY_SRC","encoder","globalThis","_TRAMPOLINE_","device","createCommandEncoder","clearBuffer","queue","submit","finish","expectOffset","expectSize","expectGPUBufferValuesEqual"],"sources":["../../../../../src/webgpu/api/operation/command_buffer/clearBuffer.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nAPI operations tests for clearBuffer.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('clear').\ndesc(\n  `Validate the correctness of the clear by filling the srcBuffer with testable data, doing\n  clearBuffer(), and verifying the content of the whole srcBuffer with MapRead:\n  Clear {4 bytes, part of, the whole} buffer {with, without} a non-zero valid offset that\n  - covers the whole buffer\n  - covers the beginning of the buffer\n  - covers the end of the buffer\n  - covers neither the beginning nor the end of the buffer`\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('offset', [0, 4, 8, 16, undefined]).\ncombine('size', [0, 4, 8, 16, undefined]).\nexpand('bufferSize', (p) => [\n(p.offset ?? 0) + (p.size ?? 16),\n(p.offset ?? 0) + (p.size ?? 16) + 8]\n)\n).\nfn((t) => {\n  const { offset, size, bufferSize } = t.params;\n\n  const bufferData = new Uint8Array(bufferSize);\n  for (let i = 0; i < bufferSize; ++i) {\n    bufferData[i] = i + 1;\n  }\n\n  const buffer = t.makeBufferWithContents(\n    bufferData,\n    GPUBufferUsage.COPY_DST | GPUBufferUsage.COPY_SRC\n  );\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  encoder.clearBuffer(buffer, offset, size);\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  const expectOffset = offset ?? 0;\n  const expectSize = size ?? bufferSize - expectOffset;\n\n  for (let i = 0; i < expectSize; ++i) {\n    bufferData[expectOffset + i] = 0;\n  }\n\n  t.expectGPUBufferValuesEqual(buffer, bufferData);\n});"],"mappings":"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","ignoreList":[]}