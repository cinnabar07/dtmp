{"version":3,"file":"texture_zero.spec.js","names":["description","makeTestGroup","unreachable","kTextureFormatInfo","checkContentsByBufferCopy","checkContentsByTextureCopy","checkContentsByDepthTest","checkContentsByStencilTest","checkContentsBySampling","getRequiredTextureUsage","TextureZeroInitTest","kTestParams","UninitializeMethod","InitializedState","checkContentsImpl","Sample","CopyToBuffer","CopyToTexture","DepthTest","StencilTest","ColorBlending","t","skip","Storage","g","test","params","beforeAllSubcases","skipIfTextureFormatNotSupported","format","selectDeviceOrSkipTestCase","feature","fn","usage","sampleCount","uninitializeMethod","readMethod","texture","createTextureTracked","size","textureWidth","textureHeight","textureDepthOrArrayLayers","dimension","mipLevelCount","canaryOnCreation","subresourceRange","iterateInitializedSubresources","initializeTexture","Canary","Creation","StoreOpClear","iterateUninitializedSubresources","discardTexture","Zero"],"sources":["../../../../../src/webgpu/api/operation/resource_init/texture_zero.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTest uninitialized textures are initialized to zero when read.\n\nTODO:\n- test by sampling depth/stencil [1]\n- test by copying out of stencil [2]\n- test compressed texture formats [3]\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../common/util/util.js';\nimport { kTextureFormatInfo } from '../../../format_info.js';\n\nimport { checkContentsByBufferCopy, checkContentsByTextureCopy } from './check_texture/by_copy.js';\nimport {\n  checkContentsByDepthTest,\n  checkContentsByStencilTest } from\n'./check_texture/by_ds_test.js';\nimport { checkContentsBySampling } from './check_texture/by_sampling.js';\nimport {\n  getRequiredTextureUsage,\n\n\n  TextureZeroInitTest,\n  kTestParams,\n  UninitializeMethod,\n  InitializedState } from\n'./check_texture/texture_zero_init_test.js';\n\nconst checkContentsImpl = {\n  Sample: checkContentsBySampling,\n  CopyToBuffer: checkContentsByBufferCopy,\n  CopyToTexture: checkContentsByTextureCopy,\n  DepthTest: checkContentsByDepthTest,\n  StencilTest: checkContentsByStencilTest,\n  ColorBlending: (t) => t.skip('Not implemented'),\n  Storage: (t) => t.skip('Not implemented')\n};\n\nexport const g = makeTestGroup(TextureZeroInitTest);\n\ng.test('uninitialized_texture_is_zero').\nparams(kTestParams).\nbeforeAllSubcases((t) => {\n  t.skipIfTextureFormatNotSupported(t.params.format);\n  t.selectDeviceOrSkipTestCase(kTextureFormatInfo[t.params.format].feature);\n}).\nfn((t) => {\n  const usage = getRequiredTextureUsage(\n    t.params.format,\n    t.params.sampleCount,\n    t.params.uninitializeMethod,\n    t.params.readMethod\n  );\n\n  const texture = t.createTextureTracked({\n    size: [t.textureWidth, t.textureHeight, t.textureDepthOrArrayLayers],\n    format: t.params.format,\n    dimension: t.params.dimension,\n    usage,\n    mipLevelCount: t.params.mipLevelCount,\n    sampleCount: t.params.sampleCount\n  });\n\n  if (t.params.canaryOnCreation) {\n    // Initialize some subresources with canary values\n    for (const subresourceRange of t.iterateInitializedSubresources()) {\n      t.initializeTexture(texture, InitializedState.Canary, subresourceRange);\n    }\n  }\n\n  switch (t.params.uninitializeMethod) {\n    case UninitializeMethod.Creation:\n      break;\n    case UninitializeMethod.StoreOpClear:\n      // Initialize the rest of the resources.\n      for (const subresourceRange of t.iterateUninitializedSubresources()) {\n        t.initializeTexture(texture, InitializedState.Canary, subresourceRange);\n      }\n      // Then use a store op to discard their contents.\n      for (const subresourceRange of t.iterateUninitializedSubresources()) {\n        t.discardTexture(texture, subresourceRange);\n      }\n      break;\n    default:\n      unreachable();\n  }\n\n  // Check that all uninitialized resources are zero.\n  for (const subresourceRange of t.iterateUninitializedSubresources()) {\n    checkContentsImpl[t.params.readMethod](\n      t,\n      t.params,\n      texture,\n      InitializedState.Zero,\n      subresourceRange\n    );\n  }\n\n  if (t.params.canaryOnCreation) {\n    // Check the all other resources are unchanged.\n    for (const subresourceRange of t.iterateInitializedSubresources()) {\n      checkContentsImpl[t.params.readMethod](\n        t,\n        t.params,\n        texture,\n        InitializedState.Canary,\n        subresourceRange\n      );\n    }\n  }\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,4CAA4C,CAC5E,SAASC,WAAW,QAAQ,iCAAiC,CAC7D,SAASC,kBAAkB,QAAQ,yBAAyB;;AAE5D,SAASC,yBAAyB,EAAEC,0BAA0B,QAAQ,4BAA4B;AAClG;EACEC,wBAAwB;EACxBC,0BAA0B;AAC5B,+BAA+B;AAC/B,SAASC,uBAAuB,QAAQ,gCAAgC;AACxE;EACEC,uBAAuB;;;EAGvBC,mBAAmB;EACnBC,WAAW;EACXC,kBAAkB;EAClBC,gBAAgB;AAClB,2CAA2C;;AAE3C,MAAMC,iBAAiB,GAAG;EACxBC,MAAM,EAAEP,uBAAuB;EAC/BQ,YAAY,EAAEZ,yBAAyB;EACvCa,aAAa,EAAEZ,0BAA0B;EACzCa,SAAS,EAAEZ,wBAAwB;EACnCa,WAAW,EAAEZ,0BAA0B;EACvCa,aAAa,EAAEA,CAACC,CAAC,KAAKA,CAAC,CAACC,IAAI,CAAC,iBAAiB,CAAC;EAC/CC,OAAO,EAAEA,CAACF,CAAC,KAAKA,CAAC,CAACC,IAAI,CAAC,iBAAiB;AAC1C,CAAC;;AAED,OAAO,MAAME,CAAC,GAAGvB,aAAa,CAACS,mBAAmB,CAAC;;AAEnDc,CAAC,CAACC,IAAI,CAAC,+BAA+B,CAAC;AACvCC,MAAM,CAACf,WAAW,CAAC;AACnBgB,iBAAiB,CAAC,CAACN,CAAC,KAAK;EACvBA,CAAC,CAACO,+BAA+B,CAACP,CAAC,CAACK,MAAM,CAACG,MAAM,CAAC;EAClDR,CAAC,CAACS,0BAA0B,CAAC3B,kBAAkB,CAACkB,CAAC,CAACK,MAAM,CAACG,MAAM,CAAC,CAACE,OAAO,CAAC;AAC3E,CAAC,CAAC;AACFC,EAAE,CAAC,CAACX,CAAC,KAAK;EACR,MAAMY,KAAK,GAAGxB,uBAAuB;IACnCY,CAAC,CAACK,MAAM,CAACG,MAAM;IACfR,CAAC,CAACK,MAAM,CAACQ,WAAW;IACpBb,CAAC,CAACK,MAAM,CAACS,kBAAkB;IAC3Bd,CAAC,CAACK,MAAM,CAACU;EACX,CAAC;;EAED,MAAMC,OAAO,GAAGhB,CAAC,CAACiB,oBAAoB,CAAC;IACrCC,IAAI,EAAE,CAAClB,CAAC,CAACmB,YAAY,EAAEnB,CAAC,CAACoB,aAAa,EAAEpB,CAAC,CAACqB,yBAAyB,CAAC;IACpEb,MAAM,EAAER,CAAC,CAACK,MAAM,CAACG,MAAM;IACvBc,SAAS,EAAEtB,CAAC,CAACK,MAAM,CAACiB,SAAS;IAC7BV,KAAK;IACLW,aAAa,EAAEvB,CAAC,CAACK,MAAM,CAACkB,aAAa;IACrCV,WAAW,EAAEb,CAAC,CAACK,MAAM,CAACQ;EACxB,CAAC,CAAC;;EAEF,IAAIb,CAAC,CAACK,MAAM,CAACmB,gBAAgB,EAAE;IAC7B;IACA,KAAK,MAAMC,gBAAgB,IAAIzB,CAAC,CAAC0B,8BAA8B,CAAC,CAAC,EAAE;MACjE1B,CAAC,CAAC2B,iBAAiB,CAACX,OAAO,EAAExB,gBAAgB,CAACoC,MAAM,EAAEH,gBAAgB,CAAC;IACzE;EACF;;EAEA,QAAQzB,CAAC,CAACK,MAAM,CAACS,kBAAkB;IACjC,KAAKvB,kBAAkB,CAACsC,QAAQ;MAC9B;IACF,KAAKtC,kBAAkB,CAACuC,YAAY;MAClC;MACA,KAAK,MAAML,gBAAgB,IAAIzB,CAAC,CAAC+B,gCAAgC,CAAC,CAAC,EAAE;QACnE/B,CAAC,CAAC2B,iBAAiB,CAACX,OAAO,EAAExB,gBAAgB,CAACoC,MAAM,EAAEH,gBAAgB,CAAC;MACzE;MACA;MACA,KAAK,MAAMA,gBAAgB,IAAIzB,CAAC,CAAC+B,gCAAgC,CAAC,CAAC,EAAE;QACnE/B,CAAC,CAACgC,cAAc,CAAChB,OAAO,EAAES,gBAAgB,CAAC;MAC7C;MACA;IACF;MACE5C,WAAW,CAAC,CAAC;EACjB;;EAEA;EACA,KAAK,MAAM4C,gBAAgB,IAAIzB,CAAC,CAAC+B,gCAAgC,CAAC,CAAC,EAAE;IACnEtC,iBAAiB,CAACO,CAAC,CAACK,MAAM,CAACU,UAAU,CAAC;MACpCf,CAAC;MACDA,CAAC,CAACK,MAAM;MACRW,OAAO;MACPxB,gBAAgB,CAACyC,IAAI;MACrBR;IACF,CAAC;EACH;;EAEA,IAAIzB,CAAC,CAACK,MAAM,CAACmB,gBAAgB,EAAE;IAC7B;IACA,KAAK,MAAMC,gBAAgB,IAAIzB,CAAC,CAAC0B,8BAA8B,CAAC,CAAC,EAAE;MACjEjC,iBAAiB,CAACO,CAAC,CAACK,MAAM,CAACU,UAAU,CAAC;QACpCf,CAAC;QACDA,CAAC,CAACK,MAAM;QACRW,OAAO;QACPxB,gBAAgB,CAACoC,MAAM;QACvBH;MACF,CAAC;IACH;EACF;AACF,CAAC,CAAC","ignoreList":[]}