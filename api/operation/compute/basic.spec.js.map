{"version":3,"file":"basic.spec.js","names":["description","makeTestGroup","GPUTest","checkElementsEqualGenerated","g","test","fn","t","data","Uint32Array","src","makeBufferWithContents","GPUBufferUsage","COPY_DST","STORAGE","dst","createBufferTracked","size","usage","COPY_SRC","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","bg","createBindGroup","entries","binding","resource","buffer","offset","getBindGroupLayout","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual","desc","params","u","combine","beginSubcases","expand","val","badVal","kMaxComputeWorkgroupSize","limits","maxComputeWorkgroupSizeX","maxComputeWorkgroupSizeY","maxComputeWorkgroupSizeZ","wgSize","workgroupSize","largeDimension","dispatchSize","maxComputeWorkgroupsPerDimension","bufferLength","bufferByteSize","BYTES_PER_ELEMENT","dims","wgSizes","expectGPUBufferValuesPassCheck","a","_i","type","typedLength","destroy"],"sources":["../../../../../src/webgpu/api/operation/compute/basic.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nBasic command buffer compute tests.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\nimport { checkElementsEqualGenerated } from '../../../util/check_contents.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('memcpy').fn((t) => {\n  const data = new Uint32Array([0x01020304]);\n\n  const src = t.makeBufferWithContents(data, GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE);\n\n  const dst = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  });\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code: `\n          struct Data {\n            value : u32\n          };\n\n          @group(0) @binding(0) var<storage, read> src : Data;\n          @group(0) @binding(1) var<storage, read_write> dst : Data;\n\n          @compute @workgroup_size(1) fn main() {\n            dst.value = src.value;\n            return;\n          }\n        `\n      }),\n      entryPoint: 'main'\n    }\n  });\n\n  const bg = t.device.createBindGroup({\n    entries: [\n    { binding: 0, resource: { buffer: src, offset: 0, size: 4 } },\n    { binding: 1, resource: { buffer: dst, offset: 0, size: 4 } }],\n\n    layout: pipeline.getBindGroupLayout(0)\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(dst, data);\n});\n\ng.test('large_dispatch').\ndesc(`Test reasonably-sized large dispatches (see also: stress tests).`).\nparams((u) =>\nu\n// Reasonably-sized powers of two, and some stranger larger sizes.\n.combine('dispatchSize', [256, 2048, 315, 628, 2179, 'maximum'])\n// Test some reasonable workgroup sizes.\n.beginSubcases()\n// 0 == x axis; 1 == y axis; 2 == z axis.\n.combine('largeDimension', [0, 1, 2]).\nexpand('workgroupSize', () => [1, 2, 8, 32, 'maximum'])\n).\nfn((t) => {\n  // The output storage buffer is filled with this value.\n  const val = 0x01020304;\n  const badVal = 0xbaadf00d;\n\n  const kMaxComputeWorkgroupSize = [\n  t.device.limits.maxComputeWorkgroupSizeX,\n  t.device.limits.maxComputeWorkgroupSizeY,\n  t.device.limits.maxComputeWorkgroupSizeZ];\n\n\n  const wgSize =\n  t.params.workgroupSize === 'maximum' ?\n  kMaxComputeWorkgroupSize[t.params.largeDimension] :\n  t.params.workgroupSize;\n  const dispatchSize =\n  t.params.dispatchSize === 'maximum' ?\n  t.device.limits.maxComputeWorkgroupsPerDimension :\n  t.params.dispatchSize;\n  const bufferLength = dispatchSize * wgSize;\n  const bufferByteSize = Uint32Array.BYTES_PER_ELEMENT * bufferLength;\n  const dst = t.createBufferTracked({\n    size: bufferByteSize,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  });\n\n  // Only use one large dimension and workgroup size in the dispatch\n  // call to keep the size of the test reasonable.\n  const dims = [1, 1, 1];\n  dims[t.params.largeDimension] = dispatchSize;\n  const wgSizes = [1, 1, 1];\n  wgSizes[t.params.largeDimension] = wgSize;\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code: `\n            struct OutputBuffer {\n              value : array<u32>\n            };\n\n            @group(0) @binding(0) var<storage, read_write> dst : OutputBuffer;\n\n            @compute @workgroup_size(${wgSizes[0]}, ${wgSizes[1]}, ${wgSizes[2]})\n            fn main(\n              @builtin(global_invocation_id) GlobalInvocationID : vec3<u32>\n            ) {\n              var xExtent : u32 = ${dims[0]}u * ${wgSizes[0]}u;\n              var yExtent : u32 = ${dims[1]}u * ${wgSizes[1]}u;\n              var zExtent : u32 = ${dims[2]}u * ${wgSizes[2]}u;\n              var index : u32 = (\n                GlobalInvocationID.z * xExtent * yExtent +\n                GlobalInvocationID.y * xExtent +\n                GlobalInvocationID.x);\n              var val : u32 = ${val}u;\n              // Trivial error checking in the indexing and invocation.\n              if (GlobalInvocationID.x > xExtent ||\n                  GlobalInvocationID.y > yExtent ||\n                  GlobalInvocationID.z > zExtent) {\n                val = ${badVal}u;\n              }\n              dst.value[index] = val;\n            }\n          `\n      }),\n      entryPoint: 'main'\n    }\n  });\n\n  const bg = t.device.createBindGroup({\n    entries: [{ binding: 0, resource: { buffer: dst, offset: 0, size: bufferByteSize } }],\n    layout: pipeline.getBindGroupLayout(0)\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.dispatchWorkgroups(dims[0], dims[1], dims[2]);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesPassCheck(dst, (a) => checkElementsEqualGenerated(a, (_i) => val), {\n    type: Uint32Array,\n    typedLength: bufferLength\n  });\n\n  globalThis._TRAMPOLINE_(\"destroy\", dst, dst.destroy, [], () => dst.destroy());\n});"],"mappings":"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","ignoreList":[]}