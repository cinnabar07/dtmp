{"version":3,"file":"primitive_topology.spec.js","names":["description","makeTestGroup","GPUTest","TextureTestMixin","kRTSize","kColorFormat","kValidPixelColor","Uint8Array","kInvalidPixelColor","Point2D","constructor","x","y","z","w","toNDC","getMidpoint","a","b","getCentroid","c","VertexLocations","getPointTestLocations","expectedColor","testLocations","location","push","coord","exp","getLineTestLocations","getPrimitiveRestartLineTestLocations","getLineStripTestLocations","getTriangleListTestLocations","getTriangleStripTestLocations","getDefaultTestLocations","topology","primitiveRestart","invalidateLastInList","maybeInvalidateLast","locations","map","tl","i","length","generateVertexBuffer","vertexLocations","vertexCoords","Float32Array","point","kDefaultDrawCount","PrimitiveTopologyTest","makeAttachmentTexture","createTextureTracked","format","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","RENDER_ATTACHMENT","COPY_SRC","run","indirect","drawCount","colorAttachment","encoder","globalThis","_TRAMPOLINE_","device","createCommandEncoder","renderPass","beginRenderPass","colorAttachments","view","createView","clearValue","r","g","loadOp","storeOp","stripIndexFormat","undefined","setPipeline","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","buffers","arrayStride","BYTES_PER_ELEMENT","attributes","offset","shaderLocation","fragment","targets","primitive","vertexBuffer","makeBufferWithContents","GPUBufferUsage","VERTEX","setVertexBuffer","indexBuffer","Uint32Array","INDEX","setIndexBuffer","drawIndexedIndirect","INDIRECT","drawIndexed","drawIndirect","draw","end","queue","submit","finish","expectSinglePixelComparisonsAreOkInTexture","texture","topologies","test","desc","params","u","combine","unless","p","fn","t","expand"],"sources":["../../../../../src/webgpu/api/operation/render_pipeline/primitive_topology.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Test primitive topology rendering.\n\nDraw a primitive using 6 vertices with each topology and check if the pixel is covered.\n\nVertex sequence and coordinates are the same for each topology:\n  - Vertex buffer = [v1, v2, v3, v4, v5, v6]\n  - Topology = [point-list, line-list, line-strip, triangle-list, triangle-strip]\n\nTest locations are framebuffer coordinates:\n  - Pixel value { valid: green, invalid: black, format: 'rgba8unorm'}\n  - Test point is valid if the pixel value equals the covered pixel value at the test location.\n  - Primitive restart occurs for strips (line-strip and triangle-strip) between [v3, v4].\n\n  Topology: point-list         Valid test location(s)           Invalid test location(s)\n\n       v2    v4     v6         Every vertex.                    Line-strip locations.\n                                                                Triangle-list locations.\n                                                                Triangle-strip locations.\n\n   v1     v3     v5\n\n  Topology: line-list (3 lines)\n\n       v2    v4     v6         Center of three line segments:   Line-strip locations.\n      *      *      *          {v1,V2}, {v3,v4}, and {v4,v5}.   Triangle-list locations.\n     *      *      *                                            Triangle-strip locations.\n    *      *      *\n   v1     v3     v5\n\n  Topology: line-strip (5 lines)\n\n       v2    v4     v6\n       **    **     *\n      *  *  *  *   *           Line-list locations              Triangle-list locations.\n     *    **     **          + Center of two line segments:     Triangle-strip locations.\n    v1    v3     v5            {v2,v3} and {v4,v5}.\n                                                                With primitive restart:\n                                                                Line segment {v3, v4}.\n\n  Topology: triangle-list (2 triangles)\n\n      v2       v4    v6\n      **        ******         Center of two triangle(s):       Triangle-strip locations.\n     ****        ****          {v1,v2,v3} and {v4,v5,v6}.\n    ******        **\n   v1     v3      v5\n\n  Topology: triangle-strip (4 triangles)\n\n      v2        v4      v6\n      ** ****** ** ******      Triangle-list locations          None.\n     **** **** **** ****     + Center of two triangle(s):\n    ****** ** ****** **        {v2,v3,v4} and {v3,v4,v5}.       With primitive restart:\n   v1       v3        v5                                        Triangle {v2, v3, v4}\n                                                                and {v3, v4, v5}.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest, TextureTestMixin } from '../../../gpu_test.js';\n\n\nconst kRTSize = 56;\nconst kColorFormat = 'rgba8unorm';\nconst kValidPixelColor = new Uint8Array([0x00, 0xff, 0x00, 0xff]); // green\nconst kInvalidPixelColor = new Uint8Array([0x00, 0x00, 0x00, 0x00]); // black\n\nclass Point2D {\n\n\n\n\n\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.z = 0;\n    this.w = 1;\n  }\n\n  toNDC() {\n    // NDC coordinate space is y-up, so we negate the y mapping.\n    // To ensure the resulting vertex in NDC will be placed at the center of the pixel, we\n    // must offset by the pixel coordinates or 0.5.\n    return new Point2D(2 * (this.x + 0.5) / kRTSize - 1, -2 * (this.y + 0.5) / kRTSize + 1);\n  }\n\n  static getMidpoint(a, b) {\n    return new Point2D((a.x + b.x) / 2, (a.y + b.y) / 2);\n  }\n\n  static getCentroid(a, b, c) {\n    return new Point2D((a.x + b.x + c.x) / 3, (a.y + b.y + c.y) / 3);\n  }\n}\n\n\n\nconst VertexLocations = [\nnew Point2D(8, 24), // v1\nnew Point2D(16, 8), // v2\nnew Point2D(24, 24), // v3\nnew Point2D(32, 8), // v4\nnew Point2D(40, 24), // v5\nnew Point2D(48, 8) // v6\n];\n\nfunction getPointTestLocations(expectedColor) {\n  // Test points are always equal to vertex locations.\n  const testLocations = [];\n  for (const location of VertexLocations) {\n    testLocations.push({ coord: location, exp: expectedColor });\n  }\n  return testLocations;\n}\n\nfunction getLineTestLocations(expectedColor) {\n  // Midpoints of 3 line segments\n  return [\n  {\n    // Line {v1, v2}\n    coord: Point2D.getMidpoint(VertexLocations[0], VertexLocations[1]),\n    exp: expectedColor\n  },\n  {\n    // Line {v3, v4}\n    coord: Point2D.getMidpoint(VertexLocations[2], VertexLocations[3]),\n    exp: expectedColor\n  },\n  {\n    // Line {v5, v6}\n    coord: Point2D.getMidpoint(VertexLocations[4], VertexLocations[5]),\n    exp: expectedColor\n  }];\n\n}\n\nfunction getPrimitiveRestartLineTestLocations(expectedColor) {\n  // Midpoints of 2 line segments\n  return [\n  {\n    // Line {v1, v2}\n    coord: Point2D.getMidpoint(VertexLocations[0], VertexLocations[1]),\n    exp: expectedColor\n  },\n  {\n    // Line {v5, v6}\n    coord: Point2D.getMidpoint(VertexLocations[4], VertexLocations[5]),\n    exp: expectedColor\n  }];\n\n}\n\nfunction getLineStripTestLocations(expectedColor) {\n  // Midpoints of 2 line segments\n  return [\n  {\n    // Line {v2, v3}\n    coord: Point2D.getMidpoint(VertexLocations[1], VertexLocations[2]),\n    exp: expectedColor\n  },\n  {\n    // Line {v4, v5}\n    coord: Point2D.getMidpoint(VertexLocations[3], VertexLocations[4]),\n    exp: expectedColor\n  }];\n\n}\n\nfunction getTriangleListTestLocations(expectedColor) {\n  // Center of two triangles\n  return [\n  {\n    // Triangle {v1, v2, v3}\n    coord: Point2D.getCentroid(VertexLocations[0], VertexLocations[1], VertexLocations[2]),\n    exp: expectedColor\n  },\n  {\n    // Triangle {v4, v5, v6}\n    coord: Point2D.getCentroid(VertexLocations[3], VertexLocations[4], VertexLocations[5]),\n    exp: expectedColor\n  }];\n\n}\n\nfunction getTriangleStripTestLocations(expectedColor) {\n  // Center of two triangles\n  return [\n  {\n    // Triangle {v2, v3, v4}\n    coord: Point2D.getCentroid(VertexLocations[1], VertexLocations[2], VertexLocations[3]),\n    exp: expectedColor\n  },\n  {\n    // Triangle {v3, v4, v5}\n    coord: Point2D.getCentroid(VertexLocations[2], VertexLocations[3], VertexLocations[4]),\n    exp: expectedColor\n  }];\n\n}\n\nfunction getDefaultTestLocations({\n  topology,\n  primitiveRestart = false,\n  invalidateLastInList = false\n\n\n\n\n}) {\n  function maybeInvalidateLast(locations) {\n    if (!invalidateLastInList) return locations;\n\n    return locations.map((tl, i) => {\n      if (i === locations.length - 1) {\n        return {\n          coord: tl.coord,\n          exp: kInvalidPixelColor\n        };\n      } else {\n        return tl;\n      }\n    });\n  }\n\n  let testLocations;\n  switch (topology) {\n    case 'point-list':\n      testLocations = [\n      ...getPointTestLocations(kValidPixelColor),\n      ...getLineStripTestLocations(kInvalidPixelColor),\n      ...getTriangleListTestLocations(kInvalidPixelColor),\n      ...getTriangleStripTestLocations(kInvalidPixelColor)];\n\n      break;\n    case 'line-list':\n      testLocations = [\n      ...maybeInvalidateLast(getLineTestLocations(kValidPixelColor)),\n      ...getLineStripTestLocations(kInvalidPixelColor),\n      ...getTriangleListTestLocations(kInvalidPixelColor),\n      ...getTriangleStripTestLocations(kInvalidPixelColor)];\n\n      break;\n    case 'line-strip':\n      testLocations = [\n      ...(primitiveRestart ?\n      getPrimitiveRestartLineTestLocations(kValidPixelColor) :\n      getLineTestLocations(kValidPixelColor)),\n      ...getLineStripTestLocations(kValidPixelColor),\n      ...getTriangleListTestLocations(kInvalidPixelColor),\n      ...getTriangleStripTestLocations(kInvalidPixelColor)];\n\n      break;\n    case 'triangle-list':\n      testLocations = [\n      ...maybeInvalidateLast(getTriangleListTestLocations(kValidPixelColor)),\n      ...getTriangleStripTestLocations(kInvalidPixelColor)];\n\n      break;\n    case 'triangle-strip':\n      testLocations = [\n      ...getTriangleListTestLocations(kValidPixelColor),\n      ...getTriangleStripTestLocations(primitiveRestart ? kInvalidPixelColor : kValidPixelColor)];\n\n      break;\n  }\n  return testLocations;\n}\n\nfunction generateVertexBuffer(vertexLocations) {\n  const vertexCoords = new Float32Array(vertexLocations.length * 4);\n  for (let i = 0; i < vertexLocations.length; i++) {\n    const point = vertexLocations[i].toNDC();\n    vertexCoords[i * 4 + 0] = point.x;\n    vertexCoords[i * 4 + 1] = point.y;\n    vertexCoords[i * 4 + 2] = point.z;\n    vertexCoords[i * 4 + 3] = point.w;\n  }\n  return vertexCoords;\n}\n\nconst kDefaultDrawCount = 6;\nclass PrimitiveTopologyTest extends TextureTestMixin(GPUTest) {\n  makeAttachmentTexture() {\n    return this.createTextureTracked({\n      format: kColorFormat,\n      size: { width: kRTSize, height: kRTSize, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\n    });\n  }\n\n  run({\n    topology,\n    indirect,\n    testLocations,\n    primitiveRestart = false,\n    drawCount = kDefaultDrawCount\n\n\n\n\n\n\n  }) {\n    const colorAttachment = this.makeAttachmentTexture();\n\n    // Color load operator will clear color attachment to zero.\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", this.device, this.device.createCommandEncoder, [], () => this.device.createCommandEncoder());\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: colorAttachment.createView(),\n        clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 0.0 },\n        loadOp: 'clear',\n        storeOp: 'store'\n      }]\n\n    });\n\n    let stripIndexFormat = undefined;\n    if (topology === 'triangle-strip' || topology === 'line-strip') {\n      stripIndexFormat = 'uint32';\n    }\n\n    // Draw a primitive using 6 vertices based on the type.\n    // Pixels are generated based on vertex position.\n    // If point, 1 pixel is generated at each vertex location.\n    // Otherwise, >1 pixels could be generated.\n    // Output color is solid green.\n    renderPass.setPipeline(\n      this.device.createRenderPipeline({\n        layout: 'auto',\n        vertex: {\n          module: this.device.createShaderModule({\n            code: `\n              @vertex fn main(\n                @location(0) pos : vec4<f32>\n                ) -> @builtin(position) vec4<f32> {\n                return pos;\n              }`\n          }),\n          entryPoint: 'main',\n          buffers: [\n          {\n            arrayStride: 4 * Float32Array.BYTES_PER_ELEMENT,\n            attributes: [\n            {\n              format: 'float32x4',\n              offset: 0,\n              shaderLocation: 0\n            }]\n\n          }]\n\n        },\n        fragment: {\n          module: this.device.createShaderModule({\n            code: `\n              @fragment fn main() -> @location(0) vec4<f32> {\n                return vec4<f32>(0.0, 1.0, 0.0, 1.0);\n              }`\n          }),\n          entryPoint: 'main',\n          targets: [{ format: kColorFormat }]\n        },\n        primitive: {\n          topology,\n          stripIndexFormat\n        }\n      })\n    );\n\n    // Create vertices for the primitive in a vertex buffer and bind it.\n    const vertexCoords = generateVertexBuffer(VertexLocations);\n    const vertexBuffer = this.makeBufferWithContents(vertexCoords, GPUBufferUsage.VERTEX);\n    renderPass.setVertexBuffer(0, vertexBuffer);\n\n    // Restart the strip between [v3, <restart>, v4].\n    if (primitiveRestart) {\n      const indexBuffer = this.makeBufferWithContents(\n        new Uint32Array([0, 1, 2, -1, 3, 4, 5]),\n        GPUBufferUsage.INDEX\n      );\n      renderPass.setIndexBuffer(indexBuffer, 'uint32');\n\n      if (indirect) {\n        renderPass.drawIndexedIndirect(\n          this.makeBufferWithContents(\n            new Uint32Array([drawCount + 1, 1, 0, 0, 0]),\n            GPUBufferUsage.INDIRECT\n          ),\n          0\n        );\n      } else {\n        renderPass.drawIndexed(drawCount + 1); // extra index for restart\n      }\n    } else {\n      if (indirect) {\n        renderPass.drawIndirect(\n          this.makeBufferWithContents(\n            new Uint32Array([drawCount, 1, 0, 0]),\n            GPUBufferUsage.INDIRECT\n          ),\n          0\n        );\n      } else {\n        renderPass.draw(drawCount);\n      }\n    }\n\n    renderPass.end();\n\n    globalThis._TRAMPOLINE_(\"submit\", this.device, this.device.queue.submit, [[encoder.finish()]], () => this.device.queue.submit([encoder.finish()]));\n    this.expectSinglePixelComparisonsAreOkInTexture({ texture: colorAttachment }, testLocations);\n  }\n}\n\nexport const g = makeTestGroup(PrimitiveTopologyTest);\n\nconst topologies = [\n'point-list',\n'line-list',\n'line-strip',\n'triangle-list',\n'triangle-strip'];\n\n\ng.test('basic').\ndesc(\n  `Compute test locations for valid and invalid pixels for each topology.\n  If the primitive covers the pixel, the color value will be |kValidPixelColor|.\n  Otherwise, a non-covered pixel will be |kInvalidPixelColor|.\n\n  Params:\n    - topology= {...all topologies}\n    - indirect= {true, false}\n    - primitiveRestart= { true, false } - always false for non-strip topologies\n  `\n).\nparams((u) =>\nu //\n.combine('topology', topologies).\ncombine('indirect', [false, true]).\ncombine('primitiveRestart', [false, true]).\nunless(\n  (p) => p.primitiveRestart && p.topology !== 'line-strip' && p.topology !== 'triangle-strip'\n)\n).\nfn((t) => {\n  t.run({\n    ...t.params,\n    testLocations: getDefaultTestLocations(t.params)\n  });\n});\n\ng.test('unaligned_vertex_count').\ndesc(\n  `Test that drawing with a number of vertices that's not a multiple of the vertices a given primitive list topology is not an error. The last primitive is not drawn.\n\n    Params:\n    - topology= {line-list, triangle-list}\n    - indirect= {true, false}\n    - drawCount - number of vertices to draw. A value smaller than the test's default of ${kDefaultDrawCount}.\n                   One smaller for line-list. One or two smaller for triangle-list.\n    `\n).\nparams((u) =>\nu //\n.combine('topology', ['line-list', 'triangle-list']).\ncombine('indirect', [false, true]).\nexpand('drawCount', function* (p) {\n  switch (p.topology) {\n    case 'line-list':\n      yield kDefaultDrawCount - 1;\n      break;\n    case 'triangle-list':\n      yield kDefaultDrawCount - 1;\n      yield kDefaultDrawCount - 2;\n      break;\n  }\n})\n).\nfn((t) => {\n  const testLocations = getDefaultTestLocations({ ...t.params, invalidateLastInList: true });\n  t.run({\n    ...t.params,\n    testLocations\n  });\n});"],"mappings":"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","ignoreList":[]}