{"version":3,"file":"culling_tests.spec.js","names":["description","makeTestGroup","kTextureFormatInfo","GPUTest","TextureTestMixin","faceIsCulled","face","frontFace","cullMode","faceColor","isCulled","Uint8Array","CullingTest","checkCornerPixels","texture","expectedTopLeftColor","expectedBottomRightColor","expectSinglePixelComparisonsAreOkInTexture","coord","x","y","exp","width","height","drawFullClipSpaceTriangleAndCheckCornerPixels","format","topology","color","depthStencil","depthStencilAttachment","device","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","setPipeline","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","Array","from","map","v","targets","primitive","draw","end","queue","submit","finish","g","test","desc","params","u","combine","beginSubcases","fn","t","depthStencilFormat","size","createTextureTracked","depthOrArrayLayers","usage","GPUTextureUsage","RENDER_ATTACHMENT","COPY_SRC","haveStencil","stencil","depthTexture","undefined","depthClearValue","depthLoadOp","depthStoreOp","depthCompare","depthWriteEnabled","stencilLoadOp","stencilStoreOp","stencilFront","passOp","stencilBack","clearValue","kCCWTriangleTopLeftColor","kCWTriangleBottomRightColor","k2ndDrawColor","isTopLeftCulled","kExpectedTopLeftColor","isBottomRightCulled","kExpectedBottomRightColor","compare","k3rdDrawColor"],"sources":["../../../../../src/webgpu/api/operation/render_pipeline/culling_tests.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Test culling and rasterization state.\n\nTest coverage:\nTest all culling combinations of GPUFrontFace and GPUCullMode show the correct output.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kTextureFormatInfo } from '../../../format_info.js';\nimport { GPUTest, TextureTestMixin } from '../../../gpu_test.js';\n\nfunction faceIsCulled(face, frontFace, cullMode) {\n  return cullMode !== 'none' && frontFace === face === (cullMode === 'front');\n}\n\nfunction faceColor(face, frontFace, cullMode) {\n  // front facing color is green, non front facing is red, background is blue\n  const isCulled = faceIsCulled(face, frontFace, cullMode);\n  if (!isCulled && face === frontFace) {\n    return new Uint8Array([0x00, 0xff, 0x00, 0xff]);\n  } else if (isCulled) {\n    return new Uint8Array([0x00, 0x00, 0xff, 0xff]);\n  } else {\n    return new Uint8Array([0xff, 0x00, 0x00, 0xff]);\n  }\n}\n\nclass CullingTest extends TextureTestMixin(GPUTest) {\n  checkCornerPixels(\n  texture,\n  expectedTopLeftColor,\n  expectedBottomRightColor)\n  {\n    this.expectSinglePixelComparisonsAreOkInTexture({ texture }, [\n    { coord: { x: 0, y: 0 }, exp: expectedTopLeftColor },\n    { coord: { x: texture.width - 1, y: texture.height - 1 }, exp: expectedBottomRightColor }]\n    );\n  }\n\n  drawFullClipSpaceTriangleAndCheckCornerPixels(\n  texture,\n  format,\n  topology,\n  color,\n  depthStencil,\n  depthStencilAttachment,\n  expectedTopLeftColor,\n  expectedBottomRightColor)\n  {\n    const { device } = this;\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", device, device.createCommandEncoder, [], () => device.createCommandEncoder());\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: texture.createView(),\n        loadOp: 'load',\n        storeOp: 'store'\n      }],\n\n      depthStencilAttachment\n    });\n\n    pass.setPipeline(\n      device.createRenderPipeline({\n        layout: 'auto',\n        vertex: {\n          module: device.createShaderModule({\n            code: `\n              @vertex fn main(\n                @builtin(vertex_index) VertexIndex : u32\n                ) -> @builtin(position) vec4<f32> {\n                  var pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n                    vec2<f32>(-1.0, -1.0),\n                    vec2<f32>( 3.0, -1.0),\n                    vec2<f32>(-1.0,  3.0));\n                return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n              }`\n          }),\n          entryPoint: 'main'\n        },\n        fragment: {\n          module: device.createShaderModule({\n            code: `\n              @fragment fn main() -> @location(0) vec4<f32> {\n                return vec4f(${Array.from(color).map((v) => v / 255)});\n              }`\n          }),\n          entryPoint: 'main',\n          targets: [{ format }]\n        },\n        primitive: {\n          topology\n        },\n        depthStencil\n      })\n    );\n    pass.draw(3);\n    pass.end();\n\n    globalThis._TRAMPOLINE_(\"submit\", device, device.queue.submit, [[encoder.finish()]], () => device.queue.submit([encoder.finish()]));\n\n    this.checkCornerPixels(texture, expectedTopLeftColor, expectedBottomRightColor);\n  }\n}\n\nexport const g = makeTestGroup(CullingTest);\n\ng.test('culling').\ndesc(\n  `\n    Test 2 triangles with different winding orders:\n\n    - Test that the counter-clock wise triangle has correct output for:\n      - All FrontFaces (ccw, cw)\n      - All CullModes (none, front, back)\n      - All depth stencil attachment types (none, depth24plus, depth32float, depth24plus-stencil8)\n      - Some primitive topologies (triangle-list, triangle-strip)\n\n    - Test that the clock wise triangle has correct output for:\n      - All FrontFaces (ccw, cw)\n      - All CullModes (none, front, back)\n      - All depth stencil attachment types (none, depth24plus, depth32float, depth24plus-stencil8)\n      - Some primitive topologies (triangle-list, triangle-strip)\n    `\n).\nparams((u) =>\nu.\ncombine('frontFace', ['ccw', 'cw']).\ncombine('cullMode', ['none', 'front', 'back']).\nbeginSubcases().\ncombine('depthStencilFormat', [\nnull,\n'depth24plus',\n'depth32float',\n'depth24plus-stencil8']\n).\ncombine('topology', ['triangle-list', 'triangle-strip'])\n).\nfn((t) => {\n  const { frontFace, cullMode, depthStencilFormat, topology } = t.params;\n  const size = 4;\n  const format = 'rgba8unorm';\n\n  const texture = t.createTextureTracked({\n    size: { width: size, height: size, depthOrArrayLayers: 1 },\n    format,\n    usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\n  });\n\n  const haveStencil = depthStencilFormat && kTextureFormatInfo[depthStencilFormat].stencil;\n  let depthTexture = undefined;\n  let depthStencilAttachment = undefined;\n  let depthStencil = undefined;\n  if (depthStencilFormat) {\n    depthTexture = t.createTextureTracked({\n      size: { width: size, height: size, depthOrArrayLayers: 1 },\n      format: depthStencilFormat,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT\n    });\n\n    depthStencilAttachment = {\n      view: depthTexture.createView(),\n      depthClearValue: 1.0,\n      depthLoadOp: 'clear',\n      depthStoreOp: 'store'\n    };\n\n    depthStencil = {\n      format: depthStencilFormat,\n      depthCompare: 'less',\n      depthWriteEnabled: true\n    };\n\n    if (haveStencil) {\n      depthStencilAttachment.stencilLoadOp = 'clear';\n      depthStencilAttachment.stencilStoreOp = 'store';\n      depthStencil.stencilFront = { passOp: 'increment-clamp' };\n      depthStencil.stencilBack = { passOp: 'increment-clamp' };\n    }\n  }\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: texture.createView(),\n      clearValue: [0, 0, 1, 1],\n      loadOp: 'clear',\n      storeOp: 'store'\n    }],\n\n    depthStencilAttachment\n  });\n\n  // Draw triangles with different winding orders:\n  //\n  // for triangle-list, 2 triangles\n  //   1. The top-left one is counterclockwise (CCW)\n  //   2. The bottom-right one is clockwise (CW)\n  //\n  //     0---2---+\n  //     |   |   |\n  //     |   |   |\n  //     1---+---4\n  //     |   |   |\n  //     |   |   |\n  //     +---3---5\n  //\n  // for triangle-strip, 4 triangles\n  // note: for triangle-strip the index order swaps every other triangle\n  // so the order is 012, 213, 234, 435\n  //\n  //   1. The top left is counterclockwise (CCW)\n  //   2. zero size\n  //   3. zero size\n  //   4. The bottom right one is clockwise (CW)\n  //\n  //         0\n  //         |\n  //         |\n  //     +---+---+\n  //     |   |   |\n  //     |   |   |\n  // 1---+---23--+---5\n  //     |   |   |\n  //     |   |   |\n  //     +---+---+\n  //         |\n  //         |\n  //         4\n  pass.setPipeline(\n    t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: `\n              @vertex fn main(\n                @builtin(vertex_index) VertexIndex : u32\n                ) -> @builtin(position) vec4<f32> {\n                  var pos : array<vec2<f32>, 6> = array<vec2<f32>, 6>(\n                ${\n          topology === 'triangle-list' ?\n          `\n                    vec2<f32>(-1.0,  1.0),\n                    vec2<f32>(-1.0,  0.0),\n                    vec2<f32>( 0.0,  1.0),\n                    vec2<f32>( 0.0, -1.0),\n                    vec2<f32>( 1.0,  0.0),\n                    vec2<f32>( 1.0, -1.0));\n                ` :\n          `\n                    vec2<f32>( 0.0,  2.0),\n                    vec2<f32>(-2.0,  0.0),\n                    vec2<f32>( 0.0,  0.0),\n                    vec2<f32>( 0.0,  0.0),\n                    vec2<f32>( 0.0, -2.0),\n                    vec2<f32>( 2.0,  0.0));\n                `}\n                return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n              }`\n\n        }),\n        entryPoint: 'main'\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: `\n              @fragment fn main(\n                @builtin(front_facing) FrontFacing : bool\n                ) -> @location(0) vec4<f32> {\n                var color : vec4<f32>;\n                if (FrontFacing) {\n                  color = vec4<f32>(0.0, 1.0, 0.0, 1.0);\n                } else {\n                  color = vec4<f32>(1.0, 0.0, 0.0, 1.0);\n                }\n                return color;\n              }`\n        }),\n        entryPoint: 'main',\n        targets: [{ format }]\n      },\n      primitive: {\n        topology,\n        frontFace,\n        cullMode\n      },\n      depthStencil\n    })\n  );\n  pass.draw(6);\n  pass.end();\n\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  // front facing color is green, non front facing is red, background is blue\n  const kCCWTriangleTopLeftColor = faceColor('ccw', frontFace, cullMode);\n  const kCWTriangleBottomRightColor = faceColor('cw', frontFace, cullMode);\n  t.checkCornerPixels(texture, kCCWTriangleTopLeftColor, kCWTriangleBottomRightColor);\n\n  if (depthTexture) {\n    // draw a triangle that covers all of clip space in yellow at the same depth\n    // as the previous triangles with the depth test set to 'less'. We should only\n    // draw yellow where the previous triangles did not.\n    depthStencilAttachment.depthLoadOp = 'load';\n\n    if (haveStencil) {\n      depthStencilAttachment.stencilLoadOp = 'load';\n      depthStencil.stencilFront.passOp = 'keep';\n      depthStencil.stencilBack.passOp = 'keep';\n    }\n\n    const k2ndDrawColor = new Uint8Array([255, 255, 0, 255]);\n\n    const isTopLeftCulled = faceIsCulled('ccw', frontFace, cullMode);\n    const kExpectedTopLeftColor = isTopLeftCulled ? k2ndDrawColor : kCCWTriangleTopLeftColor;\n\n    const isBottomRightCulled = faceIsCulled('cw', frontFace, cullMode);\n    const kExpectedBottomRightColor = isBottomRightCulled ?\n    k2ndDrawColor :\n    kCWTriangleBottomRightColor;\n\n    t.drawFullClipSpaceTriangleAndCheckCornerPixels(\n      texture,\n      format,\n      topology,\n      k2ndDrawColor,\n      depthStencil,\n      depthStencilAttachment,\n      kExpectedTopLeftColor,\n      kExpectedBottomRightColor\n    );\n\n    if (haveStencil) {\n      // draw a triangle that covers all of clip space in cyan with the stencil\n      // compare set to 'equal'. The reference value defaults to 0 so we should\n      // only render cyan where the first two triangles did not.\n      depthStencil.depthCompare = 'always';\n      depthStencil.stencilFront.compare = 'equal';\n      depthStencil.stencilBack.compare = 'equal';\n\n      const k3rdDrawColor = new Uint8Array([0, 255, 255, 255]);\n      const kExpectedTopLeftColor = isTopLeftCulled ? k3rdDrawColor : kCCWTriangleTopLeftColor;\n      const kExpectedBottomRightColor = isBottomRightCulled ?\n      k3rdDrawColor :\n      kCWTriangleBottomRightColor;\n\n      t.drawFullClipSpaceTriangleAndCheckCornerPixels(\n        texture,\n        format,\n        topology,\n        k3rdDrawColor,\n        depthStencil,\n        depthStencilAttachment,\n        kExpectedTopLeftColor,\n        kExpectedBottomRightColor\n      );\n    }\n  }\n});"],"mappings":"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","ignoreList":[]}