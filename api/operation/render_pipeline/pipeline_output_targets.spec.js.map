{"version":3,"file":"pipeline_output_targets.spec.js","names":["description","makeTestGroup","range","computeBytesPerSampleFromFormats","kRenderableColorTextureFormats","kTextureFormatInfo","GPUTest","TextureTestMixin","getFragmentShaderCodeWithOutput","getPlainTypeInfo","kTexelRepresentationInfo","kVertexShader","g","attachmentsIntWriteValues","R","G","B","A","attachmentsFloatWriteValues","test","desc","params","u","combine","beginSubcases","expand","p","attachmentCount","i","beforeAllSubcases","t","info","format","skipIfTextureFormatNotSupported","selectDeviceOrSkipTestCase","feature","fn","emptyAttachmentId","componentCount","componentOrder","length","pixelByteCost","colorRender","byteCost","skipIf","undefined","device","limits","maxColorAttachmentBytesPerSample","writeValues","color","type","renderTargets","createTextureTracked","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","pipeline","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","values","plainType","targets","primitive","topology","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","createView","clearValue","r","b","a","loadOp","storeOp","setPipeline","draw","end","queue","submit","finish","expectSinglePixelComparisonsAreOkInTexture","texture","coord","x","y","exp","filter","renderTarget","expectSingleColor","combineWithParams","_result","output","colorSrcFactor","colorDstFactor","alphaSrcFactor","alphaDstFactor","blend","srcFactor","dstFactor","operation","alpha"],"sources":["../../../../../src/webgpu/api/operation/render_pipeline/pipeline_output_targets.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\n- Test pipeline outputs with different color attachment number, formats, component counts, etc.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport {\n  computeBytesPerSampleFromFormats,\n  kRenderableColorTextureFormats,\n  kTextureFormatInfo } from\n'../../../format_info.js';\nimport { GPUTest, TextureTestMixin } from '../../../gpu_test.js';\nimport { getFragmentShaderCodeWithOutput, getPlainTypeInfo } from '../../../util/shader.js';\nimport { kTexelRepresentationInfo } from '../../../util/texture/texel_data.js';\n\nconst kVertexShader = `\n@vertex fn main(\n@builtin(vertex_index) VertexIndex : u32\n) -> @builtin(position) vec4<f32> {\n  var pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n      vec2<f32>(-1.0, -3.0),\n      vec2<f32>(3.0, 1.0),\n      vec2<f32>(-1.0, 1.0));\n  return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n}\n`;\n\nexport const g = makeTestGroup(TextureTestMixin(GPUTest));\n\n// Values to write into each attachment\n// We make values different for each attachment index and each channel\n// to make sure they didn't get mixed up\n\n// Clamp alpha to 3 to avoid comparing a large expected value with a max 3 value for rgb10a2uint\n// MAINTENANCE_TODO: Make TexelRepresentation.numericRange per-component and use that.\nconst attachmentsIntWriteValues = [\n{ R: 1, G: 2, B: 3, A: 1 },\n{ R: 5, G: 6, B: 7, A: 2 },\n{ R: 9, G: 10, B: 11, A: 3 },\n{ R: 13, G: 14, B: 15, A: 0 }];\n\nconst attachmentsFloatWriteValues = [\n{ R: 0.12, G: 0.34, B: 0.56, A: 0 },\n{ R: 0.78, G: 0.9, B: 0.19, A: 1 },\n{ R: 0.28, G: 0.37, B: 0.46, A: 0.3 },\n{ R: 0.55, G: 0.64, B: 0.73, A: 1 }];\n\n\ng.test('color,attachments').\ndesc(`Test that pipeline with sparse color attachments write values correctly.`).\nparams((u) =>\nu.\ncombine('format', kRenderableColorTextureFormats).\nbeginSubcases().\ncombine('attachmentCount', [2, 3, 4]).\nexpand('emptyAttachmentId', (p) => range(p.attachmentCount, (i) => i))\n).\nbeforeAllSubcases((t) => {\n  const info = kTextureFormatInfo[t.params.format];\n  t.skipIfTextureFormatNotSupported(t.params.format);\n  t.selectDeviceOrSkipTestCase(info.feature);\n}).\nfn((t) => {\n  const { format, attachmentCount, emptyAttachmentId } = t.params;\n  const componentCount = kTexelRepresentationInfo[format].componentOrder.length;\n  const info = kTextureFormatInfo[format];\n\n  // We only need to test formats that have a valid color attachment bytes per sample.\n  const pixelByteCost = kTextureFormatInfo[format].colorRender?.byteCost;\n  t.skipIf(\n    pixelByteCost === undefined ||\n    computeBytesPerSampleFromFormats(range(attachmentCount, () => format)) >\n    t.device.limits.maxColorAttachmentBytesPerSample\n  );\n\n  const writeValues =\n  info.color.type === 'sint' || info.color.type === 'uint' ?\n  attachmentsIntWriteValues :\n  attachmentsFloatWriteValues;\n\n  const renderTargets = range(attachmentCount, () =>\n  t.createTextureTracked({\n    format,\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  })\n  );\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: kVertexShader\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: getFragmentShaderCodeWithOutput(\n          range(attachmentCount, (i) =>\n          i === emptyAttachmentId ?\n          null :\n          {\n            values: [\n            writeValues[i].R,\n            writeValues[i].G,\n            writeValues[i].B,\n            writeValues[i].A],\n\n            plainType: getPlainTypeInfo(info.color.type),\n            componentCount\n          }\n          )\n        )\n      }),\n      entryPoint: 'main',\n      targets: range(attachmentCount, (i) => i === emptyAttachmentId ? null : { format })\n    },\n    primitive: { topology: 'triangle-list' }\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: range(attachmentCount, (i) =>\n    i === emptyAttachmentId ?\n    null :\n    {\n      view: renderTargets[i].createView(),\n      clearValue: { r: 0.5, g: 0.5, b: 0.5, a: 0.5 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }\n    )\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(3);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  for (let i = 0; i < attachmentCount; i++) {\n    if (i === emptyAttachmentId) {\n      continue;\n    }\n    t.expectSinglePixelComparisonsAreOkInTexture({ texture: renderTargets[i] }, [\n    { coord: { x: 0, y: 0 }, exp: writeValues[i] }]\n    );\n  }\n});\n\ng.test('color,component_count').\ndesc(\n  `Test that extra components of the output (e.g. f32, vec2<f32>, vec3<f32>, vec4<f32>) are discarded.`\n).\nparams((u) =>\nu.\ncombine('format', kRenderableColorTextureFormats).\nbeginSubcases().\ncombine('componentCount', [1, 2, 3, 4]).\nfilter((x) => x.componentCount >= kTexelRepresentationInfo[x.format].componentOrder.length)\n).\nbeforeAllSubcases((t) => {\n  const info = kTextureFormatInfo[t.params.format];\n  t.skipIfTextureFormatNotSupported(t.params.format);\n  t.selectDeviceOrSkipTestCase(info.feature);\n}).\nfn((t) => {\n  const { format, componentCount } = t.params;\n  const info = kTextureFormatInfo[format];\n\n  // expected RGBA values\n  // extra channels are discarded\n  const values = [0, 1, 0, 1];\n\n  const renderTarget = t.createTextureTracked({\n    format,\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: kVertexShader\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: getFragmentShaderCodeWithOutput([\n        {\n          values,\n          plainType: getPlainTypeInfo(info.color.type),\n          componentCount\n        }]\n        )\n      }),\n      entryPoint: 'main',\n      targets: [{ format }]\n    },\n    primitive: { topology: 'triangle-list' }\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: renderTarget.createView(),\n      clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(3);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectSingleColor(renderTarget, format, {\n    size: [1, 1, 1],\n    exp: { R: values[0], G: values[1], B: values[2], A: values[3] }\n  });\n});\n\ng.test('color,component_count,blend').\ndesc(\n  `Test that blending behaves correctly when:\n- fragment output has no alpha, but the src alpha is not used for the blend operation indicated by blend factors\n- attachment format has no alpha, and the dst alpha should be assumed as 1\n\nThe attachment has a load value of [1, 0, 0, 1]\n`\n).\nparams((u) =>\nu.\ncombine('format', ['r8unorm', 'rg8unorm', 'rgba8unorm', 'bgra8unorm']).\nbeginSubcases()\n// _result is expected values in the color attachment (extra channels are discarded)\n// output is the fragment shader output vector\n// 0.498 -> 0x7f, 0.502 -> 0x80\n.combineWithParams([\n// fragment output has no alpha\n{\n  _result: [0, 0, 0, 0],\n  output: [0],\n  colorSrcFactor: 'one',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [0, 0, 0, 0],\n  output: [0],\n  colorSrcFactor: 'dst-alpha',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [1, 0, 0, 0],\n  output: [0],\n  colorSrcFactor: 'one-minus-dst-alpha',\n  colorDstFactor: 'dst-alpha',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'one'\n},\n{\n  _result: [0.498, 0, 0, 0],\n  output: [0.498],\n  colorSrcFactor: 'dst-alpha',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'one'\n},\n{\n  _result: [0, 1, 0, 0],\n  output: [0, 1],\n  colorSrcFactor: 'one',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [0, 1, 0, 0],\n  output: [0, 1],\n  colorSrcFactor: 'dst-alpha',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [1, 0, 0, 0],\n  output: [0, 1],\n  colorSrcFactor: 'one-minus-dst-alpha',\n  colorDstFactor: 'dst-alpha',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'one'\n},\n{\n  _result: [0, 1, 0, 0],\n  output: [0, 1, 0],\n  colorSrcFactor: 'one',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [0, 1, 0, 0],\n  output: [0, 1, 0],\n  colorSrcFactor: 'dst-alpha',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [1, 0, 0, 0],\n  output: [0, 1, 0],\n  colorSrcFactor: 'one-minus-dst-alpha',\n  colorDstFactor: 'dst-alpha',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'one'\n},\n// fragment output has alpha\n{\n  _result: [0.502, 1, 0, 0.498],\n  output: [0, 1, 0, 0.498],\n  colorSrcFactor: 'one',\n  colorDstFactor: 'one-minus-src-alpha',\n  alphaSrcFactor: 'one',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [0.502, 0.498, 0, 0.498],\n  output: [0, 1, 0, 0.498],\n  colorSrcFactor: 'src-alpha',\n  colorDstFactor: 'one-minus-src-alpha',\n  alphaSrcFactor: 'one',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [0, 1, 0, 0.498],\n  output: [0, 1, 0, 0.498],\n  colorSrcFactor: 'dst-alpha',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'one',\n  alphaDstFactor: 'zero'\n},\n{\n  _result: [0, 1, 0, 0.498],\n  output: [0, 1, 0, 0.498],\n  colorSrcFactor: 'dst-alpha',\n  colorDstFactor: 'zero',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'src'\n},\n{\n  _result: [1, 0, 0, 1],\n  output: [0, 1, 0, 0.498],\n  colorSrcFactor: 'one-minus-dst-alpha',\n  colorDstFactor: 'dst-alpha',\n  alphaSrcFactor: 'zero',\n  alphaDstFactor: 'dst-alpha'\n}]\n).\nfilter((x) => x.output.length >= kTexelRepresentationInfo[x.format].componentOrder.length)\n).\nbeforeAllSubcases((t) => {\n  const info = kTextureFormatInfo[t.params.format];\n  t.selectDeviceOrSkipTestCase(info.feature);\n}).\nfn((t) => {\n  const {\n    format,\n    _result,\n    output,\n    colorSrcFactor,\n    colorDstFactor,\n    alphaSrcFactor,\n    alphaDstFactor\n  } = t.params;\n  const componentCount = output.length;\n  const info = kTextureFormatInfo[format];\n\n  const renderTarget = t.createTextureTracked({\n    format,\n    size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: kVertexShader\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: getFragmentShaderCodeWithOutput([\n        {\n          values: output,\n          plainType: getPlainTypeInfo(info.color.type),\n          componentCount\n        }]\n        )\n      }),\n      entryPoint: 'main',\n      targets: [\n      {\n        format,\n        blend: {\n          color: {\n            srcFactor: colorSrcFactor,\n            dstFactor: colorDstFactor,\n            operation: 'add'\n          },\n          alpha: {\n            srcFactor: alphaSrcFactor,\n            dstFactor: alphaDstFactor,\n            operation: 'add'\n          }\n        }\n      }]\n\n    },\n    primitive: { topology: 'triangle-list' }\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: renderTarget.createView(),\n      clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(3);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n  t.expectSingleColor(renderTarget, format, {\n    size: [1, 1, 1],\n    exp: { R: _result[0], G: _result[1], B: _result[2], A: _result[3] }\n  });\n});"],"mappings":"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","ignoreList":[]}