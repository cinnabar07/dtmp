{"version":3,"file":"in_pass_encoder.spec.js","names":["description","makeTestGroup","pp","assert","GPUConst","kDepthStencilFormats","kDepthStencilFormatResolvedAspect","kTextureFormatInfo","ValidationTest","kTextureBindingTypes","SIZE","TextureUsageTracking","createTestTexture","options","width","height","arrayLayerCount","mipLevelCount","sampleCount","format","usage","GPUTextureUsage","RENDER_ATTACHMENT","TEXTURE_BINDING","createTextureTracked","size","depthOrArrayLayers","dimension","createBindGroupLayout","binding","bindingType","viewDimension","sampleType","entry","texture","multisampled","undefined","storageTexture","access","device","entries","visibility","GPUShaderStage","COMPUTE","FRAGMENT","createBindGroup","resource","layout","createAndExecuteBundle","bindGroup","pass","depthStencilFormat","bundleEncoder","createRenderBundleEncoder","colorFormats","setBindGroup","bundle","finish","executeBundles","beginSimpleRenderPass","encoder","view","beginRenderPass","colorAttachments","clearValue","r","g","b","a","loadOp","storeOp","makeTwoBindGroupsWithOneTextureView","usage1","usage2","STORAGE_BINDING","createView","bindGroupLayouts","bindGroups","testValidationScope","compute","globalThis","_TRAMPOLINE_","createCommandEncoder","beginComputePass","pipelineLayout","createPipelineLayout","pipeline","createNoOpComputePipeline","createNoOpRenderPipeline","bindGroup0","bindGroup1","setPipeline","GPUComputePassEncoder","issueDrawOrDispatch","dispatchWorkgroups","draw","setComputePipelineAndCallDispatch","BASE_LEVEL","TOTAL_LEVELS","BASE_LAYER","TOTAL_LAYERS","SLICE_COUNT","test","desc","params","u","combine","expandWithParams","p","_usageOK","type0","type1","beginSubcases","unless","binding0InBundle","binding1InBundle","combineWithParams","levelCount0","layerCount0","baseLevel1","levelCount1","baseLayer1","layerCount1","_resourceSuccess","fn","t","skipIf","isCompatibility","dimension0","view0","baseMipLevel","baseArrayLayer","dimension1","view1","viewsAreSame","skip","end","bgls","storageTextureFormat0","sampleType0","bgl0","push","GPURenderPassEncoder","storageTextureFormat1","sampleType1","bgl1","success","expectValidationError","baseLevel","baseLayer","aspect0","stencil","aspect1","depth","_usageSuccess","beforeAllSubcases","selectDeviceOrSkipTestCase","feature","aspect","view1ResolvedFormat","view1HasDepth","view1HasStencil","depthStencilAttachment","depthLoadOp","depthStoreOp","stencilLoadOp","stencilStoreOp","aspectSampleType","disjointAspects","ShaderStage","VERTEX","readEntry","storageWriteAccess","readVisibility","writeVisibility","secondUseConflicts","view2","bgl","callDrawOrDispatch","sampledView","sampledStorageView","bglEntries0","bgEntries0","usageForType","type","_usage0","_usage1","_sampleCount","binding0TexFormat","binding1TexFormat","bindingsInBundle","i","bundleInPass","isReadOnly","readOnlyUsage","writableUsage","useBindGroup0","useBindGroup1","setBindGroupsOrder","skipIfLanguageFeatureNotSupported","writeAccess","wgslVertex","wgslFragment","_if","_endif","wgslCompute","createComputePipeline","module","createShaderModule","code","entryPoint","createRenderPipeline","vertex","fragment","targets","writeMask","primitive","topology","index0","index1","expand","dispatch","setBindGroup0","setBindGroup1","indirectBuffer","createBufferTracked","GPUBufferUsage","INDIRECT","dispatchWorkgroupsIndirect","paramsSubcasesOnly","splitPass","pipelineUsingBG0","pipelineUsingBG1","attachment"],"sources":["../../../../../../src/webgpu/api/validation/resource_usages/texture/in_pass_encoder.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTexture Usages Validation Tests in Render Pass and Compute Pass.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { pp } from '../../../../../common/util/preprocessor.js';\nimport { assert } from '../../../../../common/util/util.js';\nimport { GPUConst } from '../../../../constants.js';\nimport {\n  kDepthStencilFormats,\n  kDepthStencilFormatResolvedAspect,\n  kTextureFormatInfo } from\n'../../../../format_info.js';\nimport { ValidationTest } from '../../validation_test.js';\n\n\n\n\n\n\n\nconst kTextureBindingTypes = [\n'sampled-texture',\n'multisampled-texture',\n'writeonly-storage-texture',\n'readonly-storage-texture',\n'readwrite-storage-texture'];\n\n\nconst SIZE = 32;\nclass TextureUsageTracking extends ValidationTest {\n  createTestTexture(\n  options =\n\n\n\n\n\n\n\n  {})\n  {\n    const {\n      width = SIZE,\n      height = SIZE,\n      arrayLayerCount = 1,\n      mipLevelCount = 1,\n      sampleCount = 1,\n      format = 'r32float',\n      usage = GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\n    } = options;\n\n    return this.createTextureTracked({\n      size: { width, height, depthOrArrayLayers: arrayLayerCount },\n      mipLevelCount,\n      sampleCount,\n      dimension: '2d',\n      format,\n      usage\n    });\n  }\n\n  createBindGroupLayout(\n  binding,\n  bindingType,\n  viewDimension,\n  options =\n\n\n  {})\n  {\n    const { sampleType, format } = options;\n    let entry;\n    switch (bindingType) {\n      case 'sampled-texture':\n        entry = { texture: { viewDimension, sampleType } };\n        break;\n      case 'multisampled-texture':\n        entry = { texture: { viewDimension, multisampled: true, sampleType } };\n        break;\n      case 'writeonly-storage-texture':\n        assert(format !== undefined);\n        entry = { storageTexture: { access: 'write-only', format, viewDimension } };\n        break;\n      case 'readonly-storage-texture':\n        assert(format !== undefined);\n        entry = { storageTexture: { access: 'read-only', format, viewDimension } };\n        break;\n      case 'readwrite-storage-texture':\n        assert(format !== undefined);\n        entry = { storageTexture: { access: 'read-write', format, viewDimension } };\n        break;\n    }\n\n    return this.device.createBindGroupLayout({\n      entries: [\n      { binding, visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT, ...entry }]\n\n    });\n  }\n\n  createBindGroup(\n  binding,\n  resource,\n  bindingType,\n  viewDimension,\n  options =\n\n\n  {})\n  {\n    return this.device.createBindGroup({\n      entries: [{ binding, resource }],\n      layout: this.createBindGroupLayout(binding, bindingType, viewDimension, options)\n    });\n  }\n\n  createAndExecuteBundle(\n  binding,\n  bindGroup,\n  pass,\n  depthStencilFormat)\n  {\n    const bundleEncoder = this.device.createRenderBundleEncoder({\n      colorFormats: ['r32float'],\n      depthStencilFormat\n    });\n    bundleEncoder.setBindGroup(binding, bindGroup);\n    const bundle = bundleEncoder.finish();\n    pass.executeBundles([bundle]);\n  }\n\n  beginSimpleRenderPass(encoder, view) {\n    return encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view,\n        clearValue: { r: 0.0, g: 1.0, b: 0.0, a: 1.0 },\n        loadOp: 'clear',\n        storeOp: 'store'\n      }]\n\n    });\n  }\n\n  /**\n   * Create two bind groups with one texture view.\n   */\n  makeTwoBindGroupsWithOneTextureView(usage1, usage2) {\n    const view = this.createTestTexture({\n      usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING\n    }).createView();\n    const bindGroupLayouts = [\n    this.createBindGroupLayout(0, usage1, '2d', {\n      sampleType: 'unfilterable-float',\n      format: 'r32float'\n    }),\n    this.createBindGroupLayout(0, usage2, '2d', {\n      sampleType: 'unfilterable-float',\n      format: 'r32float'\n    })];\n\n    return {\n      bindGroupLayouts,\n      bindGroups: [\n      this.device.createBindGroup({\n        layout: bindGroupLayouts[0],\n        entries: [{ binding: 0, resource: view }]\n      }),\n      this.device.createBindGroup({\n        layout: bindGroupLayouts[1],\n        entries: [{ binding: 0, resource: view }]\n      })]\n\n    };\n  }\n\n  testValidationScope(\n  compute,\n  usage1,\n  usage2)\n\n\n\n\n\n\n  {\n    const { bindGroupLayouts, bindGroups } = this.makeTwoBindGroupsWithOneTextureView(\n      usage1,\n      usage2\n    );\n\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", this.device, this.device.createCommandEncoder, [], () => this.device.createCommandEncoder());\n    const pass = compute ?\n    encoder.beginComputePass() :\n    this.beginSimpleRenderPass(encoder, this.createTestTexture().createView());\n\n    // Create pipeline. Note that bindings unused in pipeline should be validated too.\n    const pipelineLayout = this.device.createPipelineLayout({\n      bindGroupLayouts\n    });\n    const pipeline = compute ?\n    this.createNoOpComputePipeline(pipelineLayout) :\n    this.createNoOpRenderPipeline(pipelineLayout, 'r32float');\n    return {\n      bindGroup0: bindGroups[0],\n      bindGroup1: bindGroups[1],\n      encoder,\n      pass,\n      pipeline\n    };\n  }\n\n  setPipeline(\n  pass,\n  pipeline)\n  {\n    if (pass instanceof GPUComputePassEncoder) {\n      pass.setPipeline(pipeline);\n    } else {\n      pass.setPipeline(pipeline);\n    }\n  }\n\n  issueDrawOrDispatch(pass) {\n    if (pass instanceof GPUComputePassEncoder) {\n      pass.dispatchWorkgroups(1);\n    } else {\n      pass.draw(3, 1, 0, 0);\n    }\n  }\n\n  setComputePipelineAndCallDispatch(pass, layout) {\n    const pipeline = this.createNoOpComputePipeline(layout);\n    pass.setPipeline(pipeline);\n    pass.dispatchWorkgroups(1);\n  }\n}\n\nexport const g = makeTestGroup(TextureUsageTracking);\n\nconst BASE_LEVEL = 1;\nconst TOTAL_LEVELS = 6;\nconst BASE_LAYER = 1;\nconst TOTAL_LAYERS = 6;\nconst SLICE_COUNT = 2;\n\ng.test('subresources_and_binding_types_combination_for_color').\ndesc(\n  `\n    Test the resource usage rules by using two views of the same GPUTexture in a usage scope. Tests\n    various combinations of {sampled, storage, render target} usages, mip-level ranges, and\n    array-layer ranges, in {compute pass, render pass, render pass via bundle}.\n      - Error if a subresource (level/layer) is used as read+write or write+write in the scope,\n        except when both usages are writeonly-storage-texture which is allowed.\n  `\n).\nparams((u) =>\nu.\ncombine('compute', [false, true]).\nexpandWithParams(\n  (p) =>\n  [\n  { _usageOK: true, type0: 'sampled-texture', type1: 'sampled-texture' },\n  { _usageOK: false, type0: 'sampled-texture', type1: 'writeonly-storage-texture' },\n  { _usageOK: true, type0: 'sampled-texture', type1: 'readonly-storage-texture' },\n  { _usageOK: false, type0: 'sampled-texture', type1: 'readwrite-storage-texture' },\n  { _usageOK: false, type0: 'sampled-texture', type1: 'render-target' },\n  // Race condition upon multiple writable storage texture is valid.\n  // For p.compute === true, fails at pass.dispatch because aliasing exists.\n  {\n    _usageOK: !p.compute,\n    type0: 'writeonly-storage-texture',\n    type1: 'writeonly-storage-texture'\n  },\n  {\n    _usageOK: true,\n    type0: 'readonly-storage-texture',\n    type1: 'readonly-storage-texture'\n  },\n  {\n    _usageOK: !p.compute,\n    type0: 'readwrite-storage-texture',\n    type1: 'readwrite-storage-texture'\n  },\n  {\n    _usageOK: false,\n    type0: 'readonly-storage-texture',\n    type1: 'writeonly-storage-texture'\n  },\n  {\n    _usageOK: false,\n    type0: 'readonly-storage-texture',\n    type1: 'readwrite-storage-texture'\n  },\n  {\n    _usageOK: false,\n    type0: 'writeonly-storage-texture',\n    type1: 'readwrite-storage-texture'\n  },\n  { _usageOK: false, type0: 'readonly-storage-texture', type1: 'render-target' },\n  { _usageOK: false, type0: 'writeonly-storage-texture', type1: 'render-target' },\n  { _usageOK: false, type0: 'readwrite-storage-texture', type1: 'render-target' },\n  { _usageOK: false, type0: 'render-target', type1: 'render-target' }]\n\n).\nbeginSubcases().\ncombine('binding0InBundle', [false, true]).\ncombine('binding1InBundle', [false, true]).\nunless(\n  (p) =>\n  // We can't set 'render-target' in bundle, so we need to exclude it from bundle.\n  p.binding0InBundle && p.type0 === 'render-target' ||\n  p.binding1InBundle && p.type1 === 'render-target' ||\n  // We can't set 'render-target' or bundle in compute.\n  p.compute && (\n  p.binding0InBundle ||\n  p.binding1InBundle ||\n  p.type0 === 'render-target' ||\n  p.type1 === 'render-target')\n).\ncombineWithParams([\n// Two texture usages are binding to the same texture subresource.\n{\n  levelCount0: 1,\n  layerCount0: 1,\n  baseLevel1: BASE_LEVEL,\n  levelCount1: 1,\n  baseLayer1: BASE_LAYER,\n  layerCount1: 1,\n  _resourceSuccess: false\n},\n\n// Two texture usages are binding to different mip levels of the same texture.\n{\n  levelCount0: 1,\n  layerCount0: 1,\n  baseLevel1: BASE_LEVEL + 1,\n  levelCount1: 1,\n  baseLayer1: BASE_LAYER,\n  layerCount1: 1,\n  _resourceSuccess: true\n},\n\n// Two texture usages are binding to different array layers of the same texture.\n{\n  levelCount0: 1,\n  layerCount0: 1,\n  baseLevel1: BASE_LEVEL,\n  levelCount1: 1,\n  baseLayer1: BASE_LAYER + 1,\n  layerCount1: 1,\n  _resourceSuccess: true\n},\n\n// The second texture usage contains the whole mip chain where the first texture usage is\n// using.\n{\n  levelCount0: 1,\n  layerCount0: 1,\n  baseLevel1: 0,\n  levelCount1: TOTAL_LEVELS,\n  baseLayer1: BASE_LAYER,\n  layerCount1: 1,\n  _resourceSuccess: false\n},\n\n// The second texture usage contains all layers where the first texture usage is using.\n{\n  levelCount0: 1,\n  layerCount0: 1,\n  baseLevel1: BASE_LEVEL,\n  levelCount1: 1,\n  baseLayer1: 0,\n  layerCount1: TOTAL_LAYERS,\n  _resourceSuccess: false\n},\n\n// The second texture usage contains all subresources where the first texture usage is\n// using.\n{\n  levelCount0: 1,\n  layerCount0: 1,\n  baseLevel1: 0,\n  levelCount1: TOTAL_LEVELS,\n  baseLayer1: 0,\n  layerCount1: TOTAL_LAYERS,\n  _resourceSuccess: false\n},\n\n// Both of the two usages access a few mip levels on the same layer but they don't overlap.\n{\n  levelCount0: SLICE_COUNT,\n  layerCount0: 1,\n  baseLevel1: BASE_LEVEL + SLICE_COUNT,\n  levelCount1: 3,\n  baseLayer1: BASE_LAYER,\n  layerCount1: 1,\n  _resourceSuccess: true\n},\n\n// Both of the two usages access a few mip levels on the same layer and they overlap.\n{\n  levelCount0: SLICE_COUNT,\n  layerCount0: 1,\n  baseLevel1: BASE_LEVEL + SLICE_COUNT - 1,\n  levelCount1: 3,\n  baseLayer1: BASE_LAYER,\n  layerCount1: 1,\n  _resourceSuccess: false\n},\n\n// Both of the two usages access a few array layers on the same level but they don't\n// overlap.\n{\n  levelCount0: 1,\n  layerCount0: SLICE_COUNT,\n  baseLevel1: BASE_LEVEL,\n  levelCount1: 1,\n  baseLayer1: BASE_LAYER + SLICE_COUNT,\n  layerCount1: 3,\n  _resourceSuccess: true\n},\n\n// Both of the two usages access a few array layers on the same level and they overlap.\n{\n  levelCount0: 1,\n  layerCount0: SLICE_COUNT,\n  baseLevel1: BASE_LEVEL,\n  levelCount1: 1,\n  baseLayer1: BASE_LAYER + SLICE_COUNT - 1,\n  layerCount1: 3,\n  _resourceSuccess: false\n},\n\n// Both of the two usages access a few array layers and mip levels but they don't overlap.\n{\n  levelCount0: SLICE_COUNT,\n  layerCount0: SLICE_COUNT,\n  baseLevel1: BASE_LEVEL + SLICE_COUNT,\n  levelCount1: 3,\n  baseLayer1: BASE_LAYER + SLICE_COUNT,\n  layerCount1: 3,\n  _resourceSuccess: true\n},\n\n// Both of the two usages access a few array layers and mip levels and they overlap.\n{\n  levelCount0: SLICE_COUNT,\n  layerCount0: SLICE_COUNT,\n  baseLevel1: BASE_LEVEL + SLICE_COUNT - 1,\n  levelCount1: 3,\n  baseLayer1: BASE_LAYER + SLICE_COUNT - 1,\n  layerCount1: 3,\n  _resourceSuccess: false\n}]\n).\nunless(\n  (p) =>\n  // Every color attachment or storage texture can use only one single subresource.\n  p.type0 !== 'sampled-texture' && (p.levelCount0 !== 1 || p.layerCount0 !== 1) ||\n  p.type1 !== 'sampled-texture' && (p.levelCount1 !== 1 || p.layerCount1 !== 1) ||\n  // All color attachments' size should be the same.\n  p.type0 === 'render-target' &&\n  p.type1 === 'render-target' &&\n  p.baseLevel1 !== BASE_LEVEL\n)\n).\nfn((t) => {\n  const {\n    compute,\n    binding0InBundle,\n    binding1InBundle,\n    levelCount0,\n    layerCount0,\n    baseLevel1,\n    baseLayer1,\n    levelCount1,\n    layerCount1,\n    type0,\n    type1,\n    _usageOK,\n    _resourceSuccess\n  } = t.params;\n\n  t.skipIf(\n    t.isCompatibility,\n    'multiple views of the same texture in a single draw/dispatch are not supported in compat, nor are sub ranges of layers'\n  );\n\n  const texture = t.createTestTexture({\n    arrayLayerCount: TOTAL_LAYERS,\n    mipLevelCount: TOTAL_LEVELS,\n    usage:\n    GPUTextureUsage.TEXTURE_BINDING |\n    GPUTextureUsage.STORAGE_BINDING |\n    GPUTextureUsage.RENDER_ATTACHMENT\n  });\n\n  const dimension0 = layerCount0 !== 1 ? '2d-array' : '2d';\n  const view0 = texture.createView({\n    dimension: dimension0,\n    baseMipLevel: BASE_LEVEL,\n    mipLevelCount: levelCount0,\n    baseArrayLayer: BASE_LAYER,\n    arrayLayerCount: layerCount0\n  });\n\n  const dimension1 = layerCount1 !== 1 ? '2d-array' : '2d';\n  const view1 = texture.createView({\n    dimension: dimension1,\n    baseMipLevel: baseLevel1,\n    mipLevelCount: levelCount1,\n    baseArrayLayer: baseLayer1,\n    arrayLayerCount: layerCount1\n  });\n\n  const viewsAreSame =\n  dimension0 === dimension1 &&\n  layerCount0 === layerCount1 &&\n  BASE_LEVEL === baseLevel1 &&\n  levelCount0 === levelCount1 &&\n  BASE_LAYER === baseLayer1 &&\n  layerCount0 === layerCount1;\n  if (!viewsAreSame && t.isCompatibility) {\n    t.skip('different views of same texture are not supported in compatibility mode');\n  }\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  if (type0 === 'render-target') {\n    // Note that type1 is 'render-target' too. So we don't need to create bindings.\n    assert(type1 === 'render-target');\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: view0,\n        clearValue: { r: 0.0, g: 1.0, b: 0.0, a: 1.0 },\n        loadOp: 'clear',\n        storeOp: 'store'\n      },\n      {\n        view: view1,\n        clearValue: { r: 0.0, g: 1.0, b: 0.0, a: 1.0 },\n        loadOp: 'clear',\n        storeOp: 'store'\n      }]\n\n    });\n    pass.end();\n  } else {\n    const pass = compute ?\n    encoder.beginComputePass() :\n    t.beginSimpleRenderPass(\n      encoder,\n      type1 === 'render-target' ? view1 : t.createTestTexture().createView()\n    );\n\n    const bgls = [];\n    // Create bind groups. Set bind groups in pass directly or set bind groups in bundle.\n    const storageTextureFormat0 = type0 === 'sampled-texture' ? undefined : 'r32float';\n    const sampleType0 = type0 === 'sampled-texture' ? 'unfilterable-float' : undefined;\n\n    const bgl0 = t.createBindGroupLayout(0, type0, dimension0, {\n      format: storageTextureFormat0,\n      sampleType: sampleType0\n    });\n    const bindGroup0 = t.device.createBindGroup({\n      layout: bgl0,\n      entries: [{ binding: 0, resource: view0 }]\n    });\n    bgls.push(bgl0);\n\n    if (binding0InBundle) {\n      assert(pass instanceof GPURenderPassEncoder);\n      t.createAndExecuteBundle(0, bindGroup0, pass);\n    } else {\n      pass.setBindGroup(0, bindGroup0);\n    }\n    if (type1 !== 'render-target') {\n      const storageTextureFormat1 = type1 === 'sampled-texture' ? undefined : 'r32float';\n      const sampleType1 = type1 === 'sampled-texture' ? 'unfilterable-float' : undefined;\n      const bgl1 = t.createBindGroupLayout(1, type1, dimension1, {\n        format: storageTextureFormat1,\n        sampleType: sampleType1\n      });\n      const bindGroup1 = t.device.createBindGroup({\n        layout: bgl1,\n        entries: [{ binding: 1, resource: view1 }]\n      });\n      bgls.push(bgl1);\n\n      if (binding1InBundle) {\n        assert(pass instanceof GPURenderPassEncoder);\n        t.createAndExecuteBundle(1, bindGroup1, pass);\n      } else {\n        pass.setBindGroup(1, bindGroup1);\n      }\n    }\n    if (compute) {\n      t.setComputePipelineAndCallDispatch(\n        pass,\n        t.device.createPipelineLayout({ bindGroupLayouts: bgls })\n      );\n    }\n    pass.end();\n  }\n\n  const success = _resourceSuccess || _usageOK;\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('subresources_and_binding_types_combination_for_aspect').\ndesc(\n  `\n    Test the resource usage rules by using two views of the same GPUTexture in a usage scope. Tests\n    various combinations of {sampled, render target} usages, {all, depth-only, stencil-only} aspects\n    that overlap a given subresources in {compute pass, render pass, render pass via bundle}.\n      - Error if a subresource (level/layer/aspect) is used as read+write or write+write in the\n        scope.\n  `\n).\nparams((u) =>\nu.\ncombine('compute', [false, true]).\ncombine('binding0InBundle', [false, true]).\ncombine('binding1InBundle', [false, true]).\ncombine('format', kDepthStencilFormats).\nbeginSubcases().\ncombineWithParams([\n{\n  baseLevel: BASE_LEVEL,\n  baseLayer: BASE_LAYER,\n  _resourceSuccess: false\n},\n{\n  baseLevel: BASE_LEVEL + 1,\n  baseLayer: BASE_LAYER,\n  _resourceSuccess: true\n},\n{\n  baseLevel: BASE_LEVEL,\n  baseLayer: BASE_LAYER + 1,\n  _resourceSuccess: true\n}]\n).\ncombine('aspect0', ['all', 'depth-only', 'stencil-only']).\ncombine('aspect1', ['all', 'depth-only', 'stencil-only']).\nunless(\n  (p) =>\n  p.aspect0 === 'stencil-only' && !kTextureFormatInfo[p.format].stencil ||\n  p.aspect1 === 'stencil-only' && !kTextureFormatInfo[p.format].stencil\n).\nunless(\n  (p) =>\n  p.aspect0 === 'depth-only' && !kTextureFormatInfo[p.format].depth ||\n  p.aspect1 === 'depth-only' && !kTextureFormatInfo[p.format].depth\n).\ncombineWithParams([\n{\n  type0: 'sampled-texture',\n  type1: 'sampled-texture',\n  _usageSuccess: true\n},\n{\n  type0: 'sampled-texture',\n  type1: 'render-target',\n  _usageSuccess: false\n}]\n).\nunless(\n  // Can't sample a multiplanar texture without selecting an aspect.\n  (p) =>\n  !!kTextureFormatInfo[p.format].depth &&\n  !!kTextureFormatInfo[p.format].stencil && (\n  p.aspect0 === 'all' && p.type0 === 'sampled-texture' ||\n  p.aspect1 === 'all' && p.type1 === 'sampled-texture')\n).\nunless(\n  (p) =>\n  // We can't set 'render-target' in bundle, so we need to exclude it from bundle.\n  p.binding1InBundle && p.type1 === 'render-target'\n).\nunless(\n  (p) =>\n  // We can't set 'render-target' or bundle in compute. Note that type0 is definitely not\n  // 'render-target'\n  p.compute && (p.binding0InBundle || p.binding1InBundle || p.type1 === 'render-target')\n).\nunless(\n  (p) =>\n  // Depth-stencil attachment views must encompass all aspects of the texture. Invalid\n  // cases are for depth-stencil textures when the aspect is not 'all'.\n  p.type1 === 'render-target' &&\n  !!kTextureFormatInfo[p.format].depth &&\n  !!kTextureFormatInfo[p.format].stencil &&\n  p.aspect1 !== 'all'\n)\n).\nbeforeAllSubcases((t) => {\n  const { format } = t.params;\n  t.selectDeviceOrSkipTestCase(kTextureFormatInfo[format].feature);\n}).\nfn((t) => {\n  const {\n    compute,\n    binding0InBundle,\n    binding1InBundle,\n    format,\n    baseLevel,\n    baseLayer,\n    aspect0,\n    aspect1,\n    type0,\n    type1,\n    _resourceSuccess,\n    _usageSuccess\n  } = t.params;\n\n  t.skipIf(t.isCompatibility, 'sub ranges of layers are not supported in compat mode');\n\n  const texture = t.createTestTexture({\n    arrayLayerCount: TOTAL_LAYERS,\n    mipLevelCount: TOTAL_LEVELS,\n    format\n  });\n\n  const view0 = texture.createView({\n    dimension: '2d',\n    baseMipLevel: BASE_LEVEL,\n    mipLevelCount: 1,\n    baseArrayLayer: BASE_LAYER,\n    arrayLayerCount: 1,\n    aspect: aspect0\n  });\n\n  const view1 = texture.createView({\n    dimension: '2d',\n    baseMipLevel: baseLevel,\n    mipLevelCount: 1,\n    baseArrayLayer: baseLayer,\n    arrayLayerCount: 1,\n    aspect: aspect1\n  });\n  const view1ResolvedFormat = kDepthStencilFormatResolvedAspect[format][aspect1];\n  const view1HasDepth = kTextureFormatInfo[view1ResolvedFormat].depth;\n  const view1HasStencil = kTextureFormatInfo[view1ResolvedFormat].stencil;\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  // Color attachment's size should match depth/stencil attachment's size. Note that if\n  // type1 !== 'render-target' then there's no depthStencilAttachment to match anyway.\n  const depthStencilFormat = type1 === 'render-target' ? view1ResolvedFormat : undefined;\n\n  const size = SIZE >> baseLevel;\n  const pass = compute ?\n  encoder.beginComputePass() :\n  encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: t.createTestTexture({ width: size, height: size }).createView(),\n      clearValue: { r: 0.0, g: 1.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }],\n\n    depthStencilAttachment: depthStencilFormat ?\n    {\n      view: view1,\n      depthLoadOp: view1HasDepth ? 'load' : undefined,\n      depthStoreOp: view1HasDepth ? 'discard' : undefined,\n      stencilLoadOp: view1HasStencil ? 'load' : undefined,\n      stencilStoreOp: view1HasStencil ? 'discard' : undefined\n    } :\n    undefined\n  });\n\n  const aspectSampleType = (format, aspect) => {\n    switch (aspect) {\n      case 'depth-only':\n        return 'depth';\n      case 'stencil-only':\n        return 'uint';\n      case 'all':\n        assert(kTextureFormatInfo[format].depth !== kTextureFormatInfo[format].stencil);\n        if (kTextureFormatInfo[format].stencil) {\n          return 'uint';\n        }\n        return 'depth';\n    }\n  };\n\n  // Create bind groups. Set bind groups in pass directly or set bind groups in bundle.\n  const bindGroup0 = t.createBindGroup(0, view0, type0, '2d', {\n    sampleType: type0 === 'sampled-texture' ? aspectSampleType(format, aspect0) : undefined\n  });\n  if (binding0InBundle) {\n    assert(pass instanceof GPURenderPassEncoder);\n    t.createAndExecuteBundle(0, bindGroup0, pass, depthStencilFormat);\n  } else {\n    pass.setBindGroup(0, bindGroup0);\n  }\n  if (type1 !== 'render-target') {\n    const bindGroup1 = t.createBindGroup(1, view1, type1, '2d', {\n      sampleType: type1 === 'sampled-texture' ? aspectSampleType(format, aspect1) : undefined\n    });\n    if (binding1InBundle) {\n      assert(pass instanceof GPURenderPassEncoder);\n      t.createAndExecuteBundle(1, bindGroup1, pass, depthStencilFormat);\n    } else {\n      pass.setBindGroup(1, bindGroup1);\n    }\n  }\n  if (compute) t.setComputePipelineAndCallDispatch(pass);\n  pass.end();\n\n  const disjointAspects =\n  aspect0 === 'depth-only' && aspect1 === 'stencil-only' ||\n  aspect0 === 'stencil-only' && aspect1 === 'depth-only';\n\n  // If subresources' mip/array slices has no overlap, or their binding types don't conflict,\n  // it will definitely success no matter what aspects they are binding to.\n  const success = disjointAspects || _resourceSuccess || _usageSuccess;\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('shader_stages_and_visibility,storage_write').\ndesc(\n  `\n    Test that stage visibility doesn't affect resource usage validation.\n    - Use a texture as sampled, with 'readVisibility' {0,VERTEX,FRAGMENT,COMPUTE}\n    - Use a {same,different} texture as storage, with 'writeVisibility' {0,FRAGMENT,COMPUTE}\n\n    There should be a validation error IFF the same texture was used.\n  `\n).\nparams((u) =>\nu.\ncombine('compute', [false, true]).\nbeginSubcases().\ncombine('secondUseConflicts', [false, true]).\ncombine('readVisibility', [\n0,\nGPUConst.ShaderStage.VERTEX,\nGPUConst.ShaderStage.FRAGMENT,\nGPUConst.ShaderStage.COMPUTE]\n).\ncombine('writeVisibility', [0, GPUConst.ShaderStage.FRAGMENT, GPUConst.ShaderStage.COMPUTE]).\ncombine('readEntry', [\n{ texture: { sampleType: 'unfilterable-float' } },\n{ storageTexture: { access: 'read-only', format: 'r32float' } }]\n).\ncombine('storageWriteAccess', ['write-only', 'read-write'])\n).\nfn((t) => {\n  const {\n    compute,\n    readEntry,\n    storageWriteAccess,\n    readVisibility,\n    writeVisibility,\n    secondUseConflicts\n  } = t.params;\n\n  const usage = GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING;\n  const view = t.createTestTexture({ usage }).createView();\n  const view2 = secondUseConflicts ? view : t.createTestTexture({ usage }).createView();\n\n  const bgl = t.device.createBindGroupLayout({\n    entries: [\n    { binding: 0, visibility: readVisibility, ...readEntry },\n    {\n      binding: 1,\n      visibility: writeVisibility,\n      storageTexture: { access: storageWriteAccess, format: 'r32float' }\n    }]\n\n  });\n  const bindGroup = t.device.createBindGroup({\n    layout: bgl,\n    entries: [\n    { binding: 0, resource: view },\n    { binding: 1, resource: view2 }]\n\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  if (compute) {\n    const pass = encoder.beginComputePass();\n    pass.setBindGroup(0, bindGroup);\n\n    t.setComputePipelineAndCallDispatch(\n      pass,\n      t.device.createPipelineLayout({\n        bindGroupLayouts: [bgl]\n      })\n    );\n    pass.end();\n  } else {\n    const pass = t.beginSimpleRenderPass(encoder, t.createTestTexture().createView());\n    pass.setBindGroup(0, bindGroup);\n    pass.end();\n  }\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, secondUseConflicts);\n});\n\ng.test('shader_stages_and_visibility,attachment_write').\ndesc(\n  `\n    Test that stage visibility doesn't affect resource usage validation.\n    - Use a texture as sampled, with 'readVisibility' {0,VERTEX,FRAGMENT,COMPUTE}\n    - Use a {same,different} texture as a render pass attachment\n\n    There should be a validation error IFF the same texture was used.\n  `\n).\nparams((u) =>\nu.\nbeginSubcases().\ncombine('secondUseConflicts', [false, true]).\ncombine('readVisibility', [\n0,\nGPUConst.ShaderStage.VERTEX,\nGPUConst.ShaderStage.FRAGMENT,\nGPUConst.ShaderStage.COMPUTE]\n).\ncombine('readEntry', [\n{ texture: { sampleType: 'unfilterable-float' } },\n{ storageTexture: { access: 'read-only', format: 'r32float' } }]\n)\n).\nfn((t) => {\n  const { readVisibility, readEntry, secondUseConflicts } = t.params;\n\n  const usage =\n  GPUTextureUsage.TEXTURE_BINDING |\n  GPUTextureUsage.RENDER_ATTACHMENT |\n  GPUTextureUsage.STORAGE_BINDING;\n\n  const view = t.createTestTexture({ usage }).createView();\n  const view2 = secondUseConflicts ? view : t.createTestTexture({ usage }).createView();\n  const bgl = t.device.createBindGroupLayout({\n    entries: [{ binding: 0, visibility: readVisibility, ...readEntry }]\n  });\n  const bindGroup = t.device.createBindGroup({\n    layout: bgl,\n    entries: [{ binding: 0, resource: view }]\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = t.beginSimpleRenderPass(encoder, view2);\n  pass.setBindGroup(0, bindGroup);\n  pass.end();\n\n  // Texture usages in bindings with invisible shader stages should be validated. Invisible shader\n  // stages include shader stage with visibility none, compute shader stage in render pass, and\n  // vertex/fragment shader stage in compute pass.\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, secondUseConflicts);\n});\n\ng.test('replaced_binding').\ndesc(\n  `\n    Test whether a binding that's been replaced by another setBindGroup call can still\n    cause validation to fail (with a write/write conflict).\n      - In render pass, all setBindGroup calls contribute to the validation even if they're\n        shadowed.\n      - In compute pass, only the bindings visible at dispatchWorkgroups() contribute to validation.\n  `\n).\nparams((u) =>\nu.\ncombine('compute', [false, true]).\ncombine('callDrawOrDispatch', [false, true]).\ncombine('entry', [\n{ texture: { sampleType: 'unfilterable-float' } },\n{ storageTexture: { access: 'read-only', format: 'r32float' } },\n{ storageTexture: { access: 'write-only', format: 'r32float' } },\n{ storageTexture: { access: 'read-write', format: 'r32float' } }]\n)\n).\nfn((t) => {\n  const { compute, callDrawOrDispatch, entry } = t.params;\n\n  const sampledView = t.createTestTexture().createView();\n  const sampledStorageView = t.\n  createTestTexture({\n    usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING\n  }).\n  createView();\n\n  // Create bindGroup0. It has two bindings. These two bindings use different views/subresources.\n  const bglEntries0 = [\n  {\n    binding: 0,\n    visibility: GPUShaderStage.FRAGMENT,\n    texture: { sampleType: 'unfilterable-float' }\n  },\n  {\n    binding: 1,\n    visibility: GPUShaderStage.FRAGMENT,\n    ...entry\n  }];\n\n  const bgEntries0 = [\n  { binding: 0, resource: sampledView },\n  { binding: 1, resource: sampledStorageView }];\n\n  const bindGroup0 = t.device.createBindGroup({\n    entries: bgEntries0,\n    layout: t.device.createBindGroupLayout({ entries: bglEntries0 })\n  });\n\n  // Create bindGroup1. It has one binding, which use the same view/subresource of a binding in\n  // bindGroup0. So it may or may not conflicts with that binding in bindGroup0.\n  const bindGroup1 = t.createBindGroup(0, sampledStorageView, 'sampled-texture', '2d', {\n    sampleType: 'unfilterable-float'\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = compute ?\n  encoder.beginComputePass() :\n  t.beginSimpleRenderPass(encoder, t.createTestTexture().createView());\n\n  // Set bindGroup0 and bindGroup1. bindGroup0 is replaced by bindGroup1 in the current pass.\n  // But bindings in bindGroup0 should be validated too.\n  pass.setBindGroup(0, bindGroup0);\n  if (callDrawOrDispatch) {\n    const pipeline = compute ?\n    t.createNoOpComputePipeline() :\n    t.createNoOpRenderPipeline('auto', 'r32float');\n    t.setPipeline(pass, pipeline);\n    t.issueDrawOrDispatch(pass);\n  }\n  pass.setBindGroup(0, bindGroup1);\n  pass.end();\n\n  // MAINTENANCE_TODO: If the Compatible Usage List\n  // (https://gpuweb.github.io/gpuweb/#compatible-usage-list) gets programmatically defined in\n  // capability_info, use it here, instead of this logic, for clarity.\n  let success =\n  entry.storageTexture?.access !== 'write-only' &&\n  entry.storageTexture?.access !== 'read-write';\n  // Replaced bindings should not be validated in compute pass, because validation only occurs\n  // inside dispatchWorkgroups() which only looks at the current resource usages.\n  success ||= compute;\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('bindings_in_bundle').\ndesc(\n  `\n    Test the texture usages in bundles by using two bindings of the same texture with various\n    combination of {sampled, storage, render target} usages.\n  `\n).\nparams((u) =>\nu.\ncombine('type0', ['render-target', ...kTextureBindingTypes]).\ncombine('type1', ['render-target', ...kTextureBindingTypes]).\nbeginSubcases().\ncombine('binding0InBundle', [false, true]).\ncombine('binding1InBundle', [false, true]).\nexpandWithParams(function* ({ type0, type1 }) {\n  const usageForType = (type) => {\n    switch (type) {\n      case 'multisampled-texture':\n      case 'sampled-texture':\n        return 'TEXTURE_BINDING';\n      case 'readonly-storage-texture':\n      case 'writeonly-storage-texture':\n      case 'readwrite-storage-texture':\n        return 'STORAGE_BINDING';\n      case 'render-target':\n        return 'RENDER_ATTACHMENT';\n    }\n  };\n\n  yield {\n    _usage0: usageForType(type0),\n    _usage1: usageForType(type1),\n    _sampleCount:\n    type0 === 'multisampled-texture' || type1 === 'multisampled-texture' ?\n    4 :\n    undefined\n  };\n}).\nunless(\n  (p) =>\n  // We can't set 'render-target' in bundle, so we need to exclude it from bundle.\n  // In addition, if both bindings are non-bundle, there is no need to test it because\n  // we have far more comprehensive test cases for that situation in this file.\n  p.binding0InBundle && p.type0 === 'render-target' ||\n  p.binding1InBundle && p.type1 === 'render-target' ||\n  !p.binding0InBundle && !p.binding1InBundle ||\n  // Storage textures can't be multisampled.\n  p._sampleCount !== undefined &&\n  p._sampleCount > 1 && (\n  p._usage0 === 'STORAGE_BINDING' || p._usage1 === 'STORAGE_BINDING') ||\n  // If both are sampled, we create two views of the same texture, so both must be\n  // multisampled.\n  p.type0 === 'multisampled-texture' && p.type1 === 'sampled-texture' ||\n  p.type0 === 'sampled-texture' && p.type1 === 'multisampled-texture'\n)\n).\nfn((t) => {\n  const { binding0InBundle, binding1InBundle, type0, type1, _usage0, _usage1, _sampleCount } =\n  t.params;\n\n  // Two bindings are attached to the same texture view.\n  const usage =\n  _sampleCount === 4 ?\n  GPUTextureUsage[_usage0] | GPUTextureUsage[_usage1] | GPUTextureUsage.RENDER_ATTACHMENT :\n  GPUTextureUsage[_usage0] | GPUTextureUsage[_usage1];\n  const view = t.\n  createTestTexture({\n    usage,\n    sampleCount: _sampleCount\n  }).\n  createView();\n\n  const bindGroups = [];\n  if (type0 !== 'render-target') {\n    const binding0TexFormat = type0 === 'sampled-texture' ? undefined : 'r32float';\n    bindGroups[0] = t.createBindGroup(0, view, type0, '2d', {\n      format: binding0TexFormat,\n      sampleType: 'unfilterable-float'\n    });\n  }\n  if (type1 !== 'render-target') {\n    const binding1TexFormat = type1 === 'sampled-texture' ? undefined : 'r32float';\n    bindGroups[1] = t.createBindGroup(1, view, type1, '2d', {\n      format: binding1TexFormat,\n      sampleType: 'unfilterable-float'\n    });\n  }\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  // At least one binding is in bundle, which means that its type is not 'render-target'.\n  // As a result, only one binding's type is 'render-target' at most.\n  const pass = t.beginSimpleRenderPass(\n    encoder,\n    type0 === 'render-target' || type1 === 'render-target' ?\n    view :\n    t.createTestTexture().createView()\n  );\n\n  const bindingsInBundle = [binding0InBundle, binding1InBundle];\n  for (let i = 0; i < 2; i++) {\n    // Create a bundle for each bind group if its bindings is required to be in bundle on purpose.\n    // Otherwise, call setBindGroup directly in pass if needed (when its binding is not\n    // 'render-target').\n    if (bindingsInBundle[i]) {\n      const bundleEncoder = t.device.createRenderBundleEncoder({\n        colorFormats: ['r32float']\n      });\n      bundleEncoder.setBindGroup(i, bindGroups[i]);\n      const bundleInPass = bundleEncoder.finish();\n      pass.executeBundles([bundleInPass]);\n    } else if (bindGroups[i] !== undefined) {\n      pass.setBindGroup(i, bindGroups[i]);\n    }\n  }\n\n  pass.end();\n\n  const isReadOnly = (t) => {\n    switch (t) {\n      case 'sampled-texture':\n      case 'multisampled-texture':\n      case 'readonly-storage-texture':\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  let success = false;\n  if (isReadOnly(type0) && isReadOnly(type1)) {\n    success = true;\n  }\n\n  // Writable storage textures (write-only and read-write storage textures) cannot be aliased.\n  if (type0 === type1) {\n    success = true;\n  }\n\n  // Resource usages in bundle should be validated.\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('unused_bindings_in_pipeline').\ndesc(\n  `\n    Test that for compute pipelines with 'auto' layout, only bindings used by the pipeline count\n    toward the usage scope. For render passes, test the pipeline doesn't matter because only the\n    calls to setBindGroup count toward the usage scope.\n  `\n).\nparams((u) =>\nu.\ncombine('compute', [false, true]).\ncombine('readOnlyUsage', ['sampled-texture', 'readonly-storage-texture']).\ncombine('writableUsage', ['writeonly-storage-texture', 'readwrite-storage-texture']).\ncombine('useBindGroup0', [false, true]).\ncombine('useBindGroup1', [false, true]).\ncombine('setBindGroupsOrder', ['common', 'reversed']).\ncombine('setPipeline', ['before', 'middle', 'after', 'none']).\ncombine('callDrawOrDispatch', [false, true])\n).\nfn((t) => {\n  const {\n    compute,\n    readOnlyUsage,\n    writableUsage,\n    useBindGroup0,\n    useBindGroup1,\n    setBindGroupsOrder,\n    setPipeline,\n    callDrawOrDispatch\n  } = t.params;\n  if (writableUsage === 'readwrite-storage-texture') {\n    t.skipIfLanguageFeatureNotSupported('readonly_and_readwrite_storage_textures');\n  }\n\n  const view = t.\n  createTestTexture({\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING\n  }).\n  createView();\n  const bindGroup0 = t.createBindGroup(0, view, readOnlyUsage, '2d', {\n    sampleType: 'unfilterable-float',\n    format: 'r32float'\n  });\n  const bindGroup1 = t.createBindGroup(0, view, writableUsage, '2d', {\n    format: 'r32float'\n  });\n\n  const writeAccess = writableUsage === 'writeonly-storage-texture' ? 'write' : 'read_write';\n  const wgslVertex = `@vertex fn main() -> @builtin(position) vec4<f32> {\n  return vec4<f32>();\n}`;\n  const wgslFragment = pp`\n      ${pp._if(useBindGroup0)}\n      @group(0) @binding(0) var image0 : texture_storage_2d<r32float, ${writeAccess}>;\n      ${pp._endif}\n      ${pp._if(useBindGroup1)}\n      @group(1) @binding(0) var image1 : texture_storage_2d<r32float, ${writeAccess}>;\n      ${pp._endif}\n      @fragment fn main() {}\n    `;\n\n  const wgslCompute = pp`\n      ${pp._if(useBindGroup0)}\n      @group(0) @binding(0) var image0 : texture_storage_2d<r32float, ${writeAccess}>;\n      ${pp._endif}\n      ${pp._if(useBindGroup1)}\n      @group(1) @binding(0) var image1 : texture_storage_2d<r32float, ${writeAccess}>;\n      ${pp._endif}\n      @compute @workgroup_size(1) fn main() {}\n    `;\n\n  const pipeline = compute ?\n  t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code: wgslCompute\n      }),\n      entryPoint: 'main'\n    }\n  }) :\n  t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: wgslVertex\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: wgslFragment\n      }),\n      entryPoint: 'main',\n      targets: [{ format: 'r32float', writeMask: 0 }]\n    },\n    primitive: { topology: 'triangle-list' }\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = compute ?\n  encoder.beginComputePass() :\n  encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: t.createTestTexture().createView(),\n      clearValue: { r: 0.0, g: 1.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  const index0 = setBindGroupsOrder === 'common' ? 0 : 1;\n  const index1 = setBindGroupsOrder === 'common' ? 1 : 0;\n  if (setPipeline === 'before') t.setPipeline(pass, pipeline);\n  pass.setBindGroup(index0, bindGroup0);\n  if (setPipeline === 'middle') t.setPipeline(pass, pipeline);\n  pass.setBindGroup(index1, bindGroup1);\n  if (setPipeline === 'after') t.setPipeline(pass, pipeline);\n  if (callDrawOrDispatch) t.issueDrawOrDispatch(pass);\n  pass.end();\n\n  // Resource usage validation scope is defined by the whole render pass or by dispatch calls.\n  // Regardless of whether or not dispatch is called, in a compute pass, we always succeed\n  // because in this test, none of the bindings are used by the pipeline.\n  // In a render pass, we always fail because usage is based on any bindings used in the\n  // render pass, regardless of whether the pipeline uses them.\n  let success = compute;\n\n  // Also fails if we try to draw/dispatch without a pipeline.\n  if (callDrawOrDispatch && setPipeline === 'none') {\n    success = false;\n  }\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('scope,dispatch').\ndesc(\n  `\n    Tests that in a compute pass, no usage validation occurs without a dispatch call.\n    {Sets,skips} each of two conflicting bind groups in a pass {with,without} a dispatch call.\n    If both are set, AND there is a dispatch call, validation should fail.\n  `\n).\nparams((u) =>\nu.\ncombine('dispatch', ['none', 'direct', 'indirect']).\nexpandWithParams(\n  (p) =>\n  [\n  { usage1: 'sampled-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'sampled-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'writeonly-storage-texture', usage2: 'readwrite-storage-texture' }]\n\n).\nbeginSubcases().\nexpand('setBindGroup0', (p) => p.dispatch ? [true] : [false, true]).\nexpand('setBindGroup1', (p) => p.dispatch ? [true] : [false, true])\n).\nfn((t) => {\n  const { dispatch, usage1, usage2, setBindGroup0, setBindGroup1 } = t.params;\n\n  const { bindGroup0, bindGroup1, encoder, pass, pipeline } = t.testValidationScope(\n    true,\n    usage1,\n    usage2\n  );\n  assert(pass instanceof GPUComputePassEncoder);\n  t.setPipeline(pass, pipeline);\n\n  if (setBindGroup0) pass.setBindGroup(0, bindGroup0);\n  if (setBindGroup1) pass.setBindGroup(1, bindGroup1);\n\n  switch (dispatch) {\n    case 'direct':\n      pass.dispatchWorkgroups(1);\n      break;\n    case 'indirect':\n      {\n        const indirectBuffer = t.createBufferTracked({ size: 4, usage: GPUBufferUsage.INDIRECT });\n        pass.dispatchWorkgroupsIndirect(indirectBuffer, 0);\n      }\n      break;\n  }\n\n  pass.end();\n\n  t.expectValidationError(\n    () => {\n      encoder.finish();\n    },\n    dispatch !== 'none' && setBindGroup0 && setBindGroup1\n  );\n});\n\ng.test('scope,basic,render').\ndesc(\n  `\n    Tests that in a render pass, validation occurs even without a pipeline or draw call.\n    {Set,skip} each of two conflicting bind groups. If both are set, validation should fail.\n  `\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('setBindGroup0', [false, true]).\ncombine('setBindGroup1', [false, true]).\nexpandWithParams(\n  (p) =>\n  [\n  { usage1: 'sampled-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'sampled-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'writeonly-storage-texture', usage2: 'readwrite-storage-texture' }]\n\n)\n).\nfn((t) => {\n  const { setBindGroup0, setBindGroup1, usage1, usage2 } = t.params;\n\n  const { bindGroup0, bindGroup1, encoder, pass } = t.testValidationScope(false, usage1, usage2);\n  assert(pass instanceof GPURenderPassEncoder);\n\n  if (setBindGroup0) pass.setBindGroup(0, bindGroup0);\n  if (setBindGroup1) pass.setBindGroup(1, bindGroup1);\n\n  pass.end();\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, setBindGroup0 && setBindGroup1);\n});\n\ng.test('scope,pass_boundary,compute').\ndesc(\n  `\n    Test using two conflicting bind groups in separate dispatch calls, {with,without} a pass\n    boundary in between. This should always be valid.\n    `\n).\nparamsSubcasesOnly((u) =>\nu.combine('splitPass', [false, true]).expandWithParams(\n  (p) =>\n  [\n  { usage1: 'sampled-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'sampled-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'writeonly-storage-texture', usage2: 'readwrite-storage-texture' }]\n\n)\n).\nfn((t) => {\n  const { splitPass, usage1, usage2 } = t.params;\n\n  const { bindGroupLayouts, bindGroups } = t.makeTwoBindGroupsWithOneTextureView(usage1, usage2);\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n\n  const pipelineUsingBG0 = t.createNoOpComputePipeline(\n    t.device.createPipelineLayout({\n      bindGroupLayouts: [bindGroupLayouts[0]]\n    })\n  );\n  const pipelineUsingBG1 = t.createNoOpComputePipeline(\n    t.device.createPipelineLayout({\n      bindGroupLayouts: [bindGroupLayouts[1]]\n    })\n  );\n\n  let pass = encoder.beginComputePass();\n  pass.setPipeline(pipelineUsingBG0);\n  pass.setBindGroup(0, bindGroups[0]);\n  pass.dispatchWorkgroups(1);\n  if (splitPass) {\n    pass.end();\n    pass = encoder.beginComputePass();\n  }\n  pass.setPipeline(pipelineUsingBG1);\n  pass.setBindGroup(0, bindGroups[1]);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n\n  // Always valid\n  encoder.finish();\n});\n\ng.test('scope,pass_boundary,render').\ndesc(\n  `\n    Test using two conflicting bind groups in separate draw calls, {with,without} a pass\n    boundary in between. This should be valid only if there is a pass boundary.\n    `\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('splitPass', [false, true]).\ncombine('draw', [false, true]).\nexpandWithParams(\n  (p) =>\n  [\n  { usage1: 'sampled-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'sampled-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'writeonly-storage-texture' },\n  { usage1: 'readonly-storage-texture', usage2: 'readwrite-storage-texture' },\n  { usage1: 'writeonly-storage-texture', usage2: 'readwrite-storage-texture' }]\n\n)\n).\nfn((t) => {\n  const { splitPass, draw, usage1, usage2 } = t.params;\n\n  const { bindGroupLayouts, bindGroups } = t.makeTwoBindGroupsWithOneTextureView(usage1, usage2);\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n\n  const pipelineUsingBG0 = t.createNoOpRenderPipeline(\n    t.device.createPipelineLayout({\n      bindGroupLayouts: [bindGroupLayouts[0]]\n    }),\n    'r32float'\n  );\n  const pipelineUsingBG1 = t.createNoOpRenderPipeline(\n    t.device.createPipelineLayout({\n      bindGroupLayouts: [bindGroupLayouts[1]]\n    }),\n    'r32float'\n  );\n\n  const attachment = t.createTestTexture().createView();\n\n  let pass = t.beginSimpleRenderPass(encoder, attachment);\n  pass.setPipeline(pipelineUsingBG0);\n  pass.setBindGroup(0, bindGroups[0]);\n  if (draw) pass.draw(3);\n  if (splitPass) {\n    pass.end();\n    pass = t.beginSimpleRenderPass(encoder, attachment);\n  }\n  pass.setPipeline(pipelineUsingBG1);\n  pass.setBindGroup(0, bindGroups[1]);\n  if (draw) pass.draw(3);\n  pass.end();\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !splitPass);\n});"],"mappings":"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","ignoreList":[]}