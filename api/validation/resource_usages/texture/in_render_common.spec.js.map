{"version":3,"file":"in_render_common.spec.js","names":["description","makeTestGroup","assert","unreachable","ValidationTest","kTextureBindingTypes","IsReadOnlyTextureBindingType","t","F","getColorAttachment","texture","textureViewDescriptor","view","createView","clearValue","r","g","b","a","loadOp","storeOp","createBindGroupForTest","textureView","textureUsage","sampleType","bindGroupLayoutEntry","binding","visibility","GPUShaderStage","FRAGMENT","viewDimension","storageTexture","access","format","layout","device","createBindGroupLayout","entries","createBindGroup","resource","isRangeNotOverlapped","start0","end0","start1","end1","kTextureSize","kTextureLevels","kTextureLayers","test","desc","params","u","combine","unless","inSamePass","level0","level1","fn","layer0","layer1","createTextureTracked","usage","GPUTextureUsage","RENDER_ATTACHMENT","size","mipLevelCount","colorAttachment1","dimension","baseArrayLayer","arrayLayerCount","baseMipLevel","colorAttachment2","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","renderPass","beginRenderPass","colorAttachments","end","renderPass1","renderPass2","success","expectValidationError","finish","combineWithParams","bgLevel","bgLevelCount","bgLayer","bgLayerCount","bgUsage","beforeAllSubcases","isCompatibility","skipIf","colorAttachmentLevel","colorAttachmentLayer","TEXTURE_BINDING","STORAGE_BINDING","bindGroupView","bindGroup","colorAttachment","setBindGroup","texture2","isMipLevelNotOverlapped","isArrayLayerNotOverlapped","isNotOverlapped","beginSubcases","dsLevel","dsLayer","depthReadOnly","stencilReadOnly","bgAspect","aspect","attachmentView","depthStencilAttachment","depthLoadOp","undefined","depthStoreOp","stencilLoadOp","stencilStoreOp","readonly","base","count","bgUsage0","bg0Levels","bgUsage1","bg1Levels","bg0Layers","bg1Layers","bg0","bg1","bindGroup0","bindGroup1","colorTexture","bothReadOnly","view0Layers","view1Layers","view0Levels","view1Levels","aspect0","aspect1","bindGroupView0","bindGroupView1","sampleType0","sampleType1"],"sources":["../../../../../../src/webgpu/api/validation/resource_usages/texture/in_render_common.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTexture Usages Validation Tests in Same or Different Render Pass Encoders.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { assert, unreachable } from '../../../../../common/util/util.js';\nimport { ValidationTest } from '../../validation_test.js';\n\n\n\n\n\n\nexport const kTextureBindingTypes = [\n'sampled-texture',\n'writeonly-storage-texture',\n'readonly-storage-texture',\n'readwrite-storage-texture'];\n\nexport function IsReadOnlyTextureBindingType(t) {\n  return t === 'sampled-texture' || t === 'readonly-storage-texture';\n}\n\nclass F extends ValidationTest {\n  getColorAttachment(\n  texture,\n  textureViewDescriptor)\n  {\n    const view = texture.createView(textureViewDescriptor);\n\n    return {\n      view,\n      clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    };\n  }\n\n  createBindGroupForTest(\n  textureView,\n  textureUsage,\n  sampleType)\n  {\n    const bindGroupLayoutEntry = {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT\n    };\n    switch (textureUsage) {\n      case 'sampled-texture':\n        bindGroupLayoutEntry.texture = { viewDimension: '2d-array', sampleType };\n        break;\n      case 'readonly-storage-texture':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'read-only',\n          format: 'r32float',\n          viewDimension: '2d-array'\n        };\n        break;\n      case 'readwrite-storage-texture':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'read-write',\n          format: 'r32float',\n          viewDimension: '2d-array'\n        };\n        break;\n      case 'writeonly-storage-texture':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'write-only',\n          format: 'r32float',\n          viewDimension: '2d-array'\n        };\n        break;\n      default:\n        unreachable();\n        break;\n    }\n    const layout = this.device.createBindGroupLayout({\n      entries: [bindGroupLayoutEntry]\n    });\n    return this.device.createBindGroup({\n      layout,\n      entries: [{ binding: 0, resource: textureView }]\n    });\n  }\n\n  isRangeNotOverlapped(start0, end0, start1, end1) {\n    assert(start0 <= end0 && start1 <= end1);\n    // There are only two possibilities for two non-overlapped ranges:\n    // [start0, end0] [start1, end1] or\n    // [start1, end1] [start0, end0]\n    return end0 < start1 || end1 < start0;\n  }\n}\n\nexport const g = makeTestGroup(F);\n\nconst kTextureSize = 16;\nconst kTextureLevels = 3;\nconst kTextureLayers = 3;\n\ng.test('subresources,color_attachments').\ndesc(\n  `\n  Test that the different subresource of the same texture are allowed to be used as color\n  attachments in same / different render pass encoder, while the same subresource is only allowed\n  to be used as different color attachments in different render pass encoders.`\n).\nparams((u) =>\nu.\ncombine('layer0', [0, 1]).\ncombine('level0', [0, 1]).\ncombine('layer1', [0, 1]).\ncombine('level1', [0, 1]).\ncombine('inSamePass', [true, false]).\nunless((t) => t.inSamePass && t.level0 !== t.level1)\n).\nfn((t) => {\n  const { layer0, level0, layer1, level1, inSamePass } = t.params;\n\n  const texture = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, kTextureLayers],\n    mipLevelCount: kTextureLevels\n  });\n\n  const colorAttachment1 = t.getColorAttachment(texture, {\n    dimension: '2d',\n    baseArrayLayer: layer0,\n    arrayLayerCount: 1,\n    baseMipLevel: level0,\n    mipLevelCount: 1\n  });\n  const colorAttachment2 = t.getColorAttachment(texture, {\n    dimension: '2d',\n    baseArrayLayer: layer1,\n    baseMipLevel: level1,\n    mipLevelCount: 1\n  });\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  if (inSamePass) {\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment1, colorAttachment2]\n    });\n    renderPass.end();\n  } else {\n    const renderPass1 = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment1]\n    });\n    renderPass1.end();\n    const renderPass2 = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment2]\n    });\n    renderPass2.end();\n  }\n\n  const success = inSamePass ? layer0 !== layer1 : true;\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('subresources,color_attachment_and_bind_group').\ndesc(\n  `\n  Test that when one subresource of a texture is used as a color attachment, it cannot be used in a\n  bind group simultaneously in the same render pass encoder. It is allowed when the bind group is\n  used in another render pass encoder instead of the same one.`\n).\nparams((u) =>\nu.\ncombine('colorAttachmentLevel', [0, 1]).\ncombine('colorAttachmentLayer', [0, 1]).\ncombineWithParams([\n{ bgLevel: 0, bgLevelCount: 1 },\n{ bgLevel: 1, bgLevelCount: 1 },\n{ bgLevel: 1, bgLevelCount: 2 }]\n).\ncombineWithParams([\n{ bgLayer: 0, bgLayerCount: 1 },\n{ bgLayer: 1, bgLayerCount: 1 },\n{ bgLayer: 1, bgLayerCount: 2 },\n{ bgLayer: 0, bgLayerCount: kTextureLayers }]\n).\ncombine('bgUsage', kTextureBindingTypes).\nunless((t) => t.bgUsage !== 'sampled-texture' && t.bgLevelCount > 1).\ncombine('inSamePass', [true, false])\n).\nbeforeAllSubcases((t) => {\n  if (t.isCompatibility) {\n    t.skipIf(t.params.bgLayer !== 0, 'view base array layer must equal 0 in compatibility mode');\n    t.skipIf(\n      t.params.bgLayerCount !== kTextureLayers,\n      'view array layers must equal texture array layers in compatibility mode'\n    );\n  }\n}).\nfn((t) => {\n  const {\n    colorAttachmentLevel,\n    colorAttachmentLayer,\n    bgLevel,\n    bgLevelCount,\n    bgLayer,\n    bgLayerCount,\n    bgUsage,\n    inSamePass\n  } = t.params;\n\n  const texture = t.createTextureTracked({\n    format: 'r32float',\n    usage:\n    GPUTextureUsage.RENDER_ATTACHMENT |\n    GPUTextureUsage.TEXTURE_BINDING |\n    GPUTextureUsage.STORAGE_BINDING,\n    size: [kTextureSize, kTextureSize, kTextureLayers],\n    mipLevelCount: kTextureLevels\n  });\n  const bindGroupView = texture.createView({\n    dimension: '2d-array',\n    baseArrayLayer: bgLayer,\n    arrayLayerCount: bgLayerCount,\n    baseMipLevel: bgLevel,\n    mipLevelCount: bgLevelCount\n  });\n  const bindGroup = t.createBindGroupForTest(bindGroupView, bgUsage, 'unfilterable-float');\n\n  const colorAttachment = t.getColorAttachment(texture, {\n    dimension: '2d',\n    baseArrayLayer: colorAttachmentLayer,\n    arrayLayerCount: 1,\n    baseMipLevel: colorAttachmentLevel,\n    mipLevelCount: 1\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPass = encoder.beginRenderPass({\n    colorAttachments: [colorAttachment]\n  });\n  if (inSamePass) {\n    renderPass.setBindGroup(0, bindGroup);\n    renderPass.end();\n  } else {\n    renderPass.end();\n\n    const texture2 = t.createTextureTracked({\n      format: 'r32float',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n      mipLevelCount: 1\n    });\n    const colorAttachment2 = t.getColorAttachment(texture2);\n    const renderPass2 = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment2]\n    });\n    renderPass2.setBindGroup(0, bindGroup);\n    renderPass2.end();\n  }\n\n  const isMipLevelNotOverlapped = t.isRangeNotOverlapped(\n    colorAttachmentLevel,\n    colorAttachmentLevel,\n    bgLevel,\n    bgLevel + bgLevelCount - 1\n  );\n  const isArrayLayerNotOverlapped = t.isRangeNotOverlapped(\n    colorAttachmentLayer,\n    colorAttachmentLayer,\n    bgLayer,\n    bgLayer + bgLayerCount - 1\n  );\n  const isNotOverlapped = isMipLevelNotOverlapped || isArrayLayerNotOverlapped;\n\n  const success = inSamePass ? isNotOverlapped : true;\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('subresources,depth_stencil_attachment_and_bind_group').\ndesc(\n  `\n  Test that when one subresource of a texture is used as a depth stencil attachment, it cannot be\n  used in a bind group simultaneously in the same render pass encoder. It is allowed when the bind\n  group is used in another render pass encoder instead of the same one, or the subresource is used\n  as a read-only depth stencil attachment.`\n).\nparams((u) =>\nu.\ncombine('dsLevel', [0, 1]).\ncombine('dsLayer', [0, 1]).\ncombineWithParams([\n{ bgLevel: 0, bgLevelCount: 1 },\n{ bgLevel: 1, bgLevelCount: 1 },\n{ bgLevel: 1, bgLevelCount: 2 }]\n).\ncombineWithParams([\n{ bgLayer: 0, bgLayerCount: 1 },\n{ bgLayer: 1, bgLayerCount: 1 },\n{ bgLayer: 1, bgLayerCount: 2 },\n{ bgLayer: 0, bgLayerCount: kTextureLayers }]\n).\nbeginSubcases().\ncombine('depthReadOnly', [true, false]).\ncombine('stencilReadOnly', [true, false]).\ncombine('bgAspect', ['depth-only', 'stencil-only']).\ncombine('inSamePass', [true, false])\n).\nbeforeAllSubcases((t) => {\n  if (t.isCompatibility) {\n    t.skipIf(t.params.bgLayer !== 0, 'view base array layer must equal 0 in compatibility mode');\n    t.skipIf(\n      t.params.bgLayerCount !== kTextureLayers,\n      'view array layers must equal texture array layers in compatibility mode'\n    );\n  }\n}).\nfn((t) => {\n  const {\n    dsLevel,\n    dsLayer,\n    bgLevel,\n    bgLevelCount,\n    bgLayer,\n    bgLayerCount,\n    depthReadOnly,\n    stencilReadOnly,\n    bgAspect,\n    inSamePass\n  } = t.params;\n\n  const texture = t.createTextureTracked({\n    format: 'depth24plus-stencil8',\n    usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n    size: [kTextureSize, kTextureSize, kTextureLayers],\n    mipLevelCount: kTextureLevels\n  });\n  const bindGroupView = texture.createView({\n    dimension: '2d-array',\n    baseArrayLayer: bgLayer,\n    arrayLayerCount: bgLayerCount,\n    baseMipLevel: bgLevel,\n    mipLevelCount: bgLevelCount,\n    aspect: bgAspect\n  });\n  const sampleType = bgAspect === 'depth-only' ? 'depth' : 'uint';\n  const bindGroup = t.createBindGroupForTest(bindGroupView, 'sampled-texture', sampleType);\n\n  const attachmentView = texture.createView({\n    dimension: '2d',\n    baseArrayLayer: dsLayer,\n    arrayLayerCount: 1,\n    baseMipLevel: dsLevel,\n    mipLevelCount: 1\n  });\n  const depthStencilAttachment = {\n    view: attachmentView,\n    depthReadOnly,\n    depthLoadOp: depthReadOnly ? undefined : 'load',\n    depthStoreOp: depthReadOnly ? undefined : 'store',\n    stencilReadOnly,\n    stencilLoadOp: stencilReadOnly ? undefined : 'load',\n    stencilStoreOp: stencilReadOnly ? undefined : 'store'\n  };\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPass = encoder.beginRenderPass({\n    colorAttachments: [],\n    depthStencilAttachment\n  });\n  if (inSamePass) {\n    renderPass.setBindGroup(0, bindGroup);\n    renderPass.end();\n  } else {\n    renderPass.end();\n\n    const texture2 = t.createTextureTracked({\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      size: [kTextureSize, kTextureSize, 1],\n      mipLevelCount: 1\n    });\n    const colorAttachment2 = t.getColorAttachment(texture2);\n    const renderPass2 = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment2]\n    });\n    renderPass2.setBindGroup(0, bindGroup);\n    renderPass2.end();\n  }\n\n  const isMipLevelNotOverlapped = t.isRangeNotOverlapped(\n    dsLevel,\n    dsLevel,\n    bgLevel,\n    bgLevel + bgLevelCount - 1\n  );\n  const isArrayLayerNotOverlapped = t.isRangeNotOverlapped(\n    dsLayer,\n    dsLayer,\n    bgLayer,\n    bgLayer + bgLayerCount - 1\n  );\n  const isNotOverlapped = isMipLevelNotOverlapped || isArrayLayerNotOverlapped;\n  const readonly =\n  bgAspect === 'stencil-only' && stencilReadOnly ||\n  bgAspect === 'depth-only' && depthReadOnly;\n\n  const success = !inSamePass || isNotOverlapped || readonly;\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('subresources,multiple_bind_groups').\ndesc(\n  `\n  Test that when one color texture subresource is bound to different bind groups, its list of\n  internal usages within one usage scope can only be a compatible usage list. For texture\n  subresources in bind groups, the compatible usage lists are {TEXTURE_BINDING} and\n  {STORAGE_BINDING}, which means it can only be bound as both TEXTURE_BINDING and STORAGE_BINDING in\n  different render pass encoders, otherwise a validation error will occur.`\n).\nparams((u) =>\nu.\ncombine('bg0Levels', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 }]\n).\ncombine('bg0Layers', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 },\n{ base: 0, count: kTextureLayers }]\n).\ncombine('bg1Levels', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 }]\n).\ncombine('bg1Layers', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 },\n{ base: 0, count: kTextureLayers }]\n).\ncombine('bgUsage0', kTextureBindingTypes).\ncombine('bgUsage1', kTextureBindingTypes).\nunless(\n  (t) =>\n  t.bgUsage0 !== 'sampled-texture' && t.bg0Levels.count > 1 ||\n  t.bgUsage1 !== 'sampled-texture' && t.bg1Levels.count > 1\n).\nbeginSubcases().\ncombine('inSamePass', [true, false])\n).\nbeforeAllSubcases((t) => {\n  if (t.isCompatibility) {\n    t.skipIf(\n      t.params.bg0Layers.base !== 0 || t.params.bg1Layers.base !== 0,\n      'view base array layer must equal 0 in compatibility mode'\n    );\n    t.skipIf(\n      t.params.bg0Layers.count !== kTextureLayers || t.params.bg1Layers.count !== kTextureLayers,\n      'view array layers must equal texture array layers in compatibility mode'\n    );\n  }\n}).\nfn((t) => {\n  const { bg0Levels, bg0Layers, bg1Levels, bg1Layers, bgUsage0, bgUsage1, inSamePass } = t.params;\n\n  const texture = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.STORAGE_BINDING | GPUTextureUsage.TEXTURE_BINDING,\n    size: [kTextureSize, kTextureSize, kTextureLayers],\n    mipLevelCount: kTextureLevels\n  });\n  const bg0 = texture.createView({\n    dimension: '2d-array',\n    baseArrayLayer: bg0Layers.base,\n    arrayLayerCount: bg0Layers.count,\n    baseMipLevel: bg0Levels.base,\n    mipLevelCount: bg0Levels.count\n  });\n  const bg1 = texture.createView({\n    dimension: '2d-array',\n    baseArrayLayer: bg1Layers.base,\n    arrayLayerCount: bg1Layers.count,\n    baseMipLevel: bg1Levels.base,\n    mipLevelCount: bg1Levels.count\n  });\n  const bindGroup0 = t.createBindGroupForTest(bg0, bgUsage0, 'unfilterable-float');\n  const bindGroup1 = t.createBindGroupForTest(bg1, bgUsage1, 'unfilterable-float');\n\n  const colorTexture = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, 1],\n    mipLevelCount: 1\n  });\n  const colorAttachment = t.getColorAttachment(colorTexture);\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPass = encoder.beginRenderPass({\n    colorAttachments: [colorAttachment]\n  });\n  if (inSamePass) {\n    renderPass.setBindGroup(0, bindGroup0);\n    renderPass.setBindGroup(1, bindGroup1);\n    renderPass.end();\n  } else {\n    renderPass.setBindGroup(0, bindGroup0);\n    renderPass.end();\n\n    const renderPass2 = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment]\n    });\n    renderPass2.setBindGroup(1, bindGroup1);\n    renderPass2.end();\n  }\n\n  const bothReadOnly =\n  IsReadOnlyTextureBindingType(bgUsage0) && IsReadOnlyTextureBindingType(bgUsage1);\n  const isMipLevelNotOverlapped = t.isRangeNotOverlapped(\n    bg0Levels.base,\n    bg0Levels.base + bg0Levels.count - 1,\n    bg1Levels.base,\n    bg1Levels.base + bg1Levels.count - 1\n  );\n  const isArrayLayerNotOverlapped = t.isRangeNotOverlapped(\n    bg0Layers.base,\n    bg0Layers.base + bg0Layers.count - 1,\n    bg1Layers.base,\n    bg1Layers.base + bg1Layers.count - 1\n  );\n  const isNotOverlapped = isMipLevelNotOverlapped || isArrayLayerNotOverlapped;\n\n  const success = !inSamePass || bothReadOnly || isNotOverlapped || bgUsage0 === bgUsage1;\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('subresources,depth_stencil_texture_in_bind_groups').\ndesc(\n  `\n  Test that when one depth stencil texture subresource is bound to different bind groups, we can\n  always bind these two bind groups in either the same or different render pass encoder as the depth\n  stencil texture can only be bound as TEXTURE_BINDING in the bind group.`\n).\nparams((u) =>\nu.\ncombine('view0Levels', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 }]\n).\ncombine('view0Layers', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 },\n{ base: 0, count: kTextureLayers }]\n).\ncombine('view1Levels', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 }]\n).\ncombine('view1Layers', [\n{ base: 0, count: 1 },\n{ base: 1, count: 1 },\n{ base: 1, count: 2 },\n{ base: 0, count: kTextureLayers }]\n).\ncombine('aspect0', ['depth-only', 'stencil-only']).\ncombine('aspect1', ['depth-only', 'stencil-only']).\ncombine('inSamePass', [true, false])\n).\nbeforeAllSubcases((t) => {\n  if (t.isCompatibility) {\n    t.skipIf(\n      t.params.view0Layers.base !== 0 || t.params.view1Layers.base !== 0,\n      'view base array layer must equal 0 in compatibility mode'\n    );\n    t.skipIf(\n      t.params.view0Layers.count !== kTextureLayers ||\n      t.params.view1Layers.count !== kTextureLayers,\n      'view array layers must equal texture array layers in compatibility mode'\n    );\n  }\n}).\nfn((t) => {\n  const { view0Levels, view0Layers, view1Levels, view1Layers, aspect0, aspect1, inSamePass } =\n  t.params;\n\n  const texture = t.createTextureTracked({\n    format: 'depth24plus-stencil8',\n    usage: GPUTextureUsage.TEXTURE_BINDING,\n    size: [kTextureSize, kTextureSize, kTextureLayers],\n    mipLevelCount: kTextureLevels\n  });\n  const bindGroupView0 = texture.createView({\n    dimension: '2d-array',\n    baseArrayLayer: view0Layers.base,\n    arrayLayerCount: view0Layers.count,\n    baseMipLevel: view0Levels.base,\n    mipLevelCount: view0Levels.count,\n    aspect: aspect0\n  });\n  const bindGroupView1 = texture.createView({\n    dimension: '2d-array',\n    baseArrayLayer: view1Layers.base,\n    arrayLayerCount: view1Layers.count,\n    baseMipLevel: view1Levels.base,\n    mipLevelCount: view1Levels.count,\n    aspect: aspect1\n  });\n\n  const sampleType0 = aspect0 === 'depth-only' ? 'depth' : 'uint';\n  const sampleType1 = aspect1 === 'depth-only' ? 'depth' : 'uint';\n  const bindGroup0 = t.createBindGroupForTest(bindGroupView0, 'sampled-texture', sampleType0);\n  const bindGroup1 = t.createBindGroupForTest(bindGroupView1, 'sampled-texture', sampleType1);\n\n  const colorTexture = t.createTextureTracked({\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, 1],\n    mipLevelCount: 1\n  });\n  const colorAttachment = t.getColorAttachment(colorTexture);\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPass = encoder.beginRenderPass({\n    colorAttachments: [colorAttachment]\n  });\n  if (inSamePass) {\n    renderPass.setBindGroup(0, bindGroup0);\n    renderPass.setBindGroup(1, bindGroup1);\n    renderPass.end();\n  } else {\n    renderPass.setBindGroup(0, bindGroup0);\n    renderPass.end();\n\n    const renderPass2 = encoder.beginRenderPass({\n      colorAttachments: [colorAttachment]\n    });\n    renderPass2.setBindGroup(1, bindGroup1);\n    renderPass2.end();\n  }\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, false);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,+CAA+C,CAC/E,SAASC,MAAM,EAAEC,WAAW,QAAQ,oCAAoC,CACxE,SAASC,cAAc,QAAQ,0BAA0B;;;;;;;AAOzD,OAAO,MAAMC,oBAAoB,GAAG;AACpC,iBAAiB;AACjB,2BAA2B;AAC3B,0BAA0B;AAC1B,2BAA2B,CAAC;;AAE5B,OAAO,SAASC,4BAA4BA,CAACC,CAAC,EAAE;EAC9C,OAAOA,CAAC,KAAK,iBAAiB,IAAIA,CAAC,KAAK,0BAA0B;AACpE;;AAEA,MAAMC,CAAC,SAASJ,cAAc,CAAC;EAC7BK,kBAAkBA;EAClBC,OAAO;EACPC,qBAAqB;EACrB;IACE,MAAMC,IAAI,GAAGF,OAAO,CAACG,UAAU,CAACF,qBAAqB,CAAC;;IAEtD,OAAO;MACLC,IAAI;MACJE,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9CC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC;EACH;;EAEAC,sBAAsBA;EACtBC,WAAW;EACXC,YAAY;EACZC,UAAU;EACV;IACE,MAAMC,oBAAoB,GAAG;MAC3BC,OAAO,EAAE,CAAC;MACVC,UAAU,EAAEC,cAAc,CAACC;IAC7B,CAAC;IACD,QAAQN,YAAY;MAClB,KAAK,iBAAiB;QACpBE,oBAAoB,CAACf,OAAO,GAAG,EAAEoB,aAAa,EAAE,UAAU,EAAEN,UAAU,CAAC,CAAC;QACxE;MACF,KAAK,0BAA0B;QAC7BC,oBAAoB,CAACM,cAAc,GAAG;UACpCC,MAAM,EAAE,WAAW;UACnBC,MAAM,EAAE,UAAU;UAClBH,aAAa,EAAE;QACjB,CAAC;QACD;MACF,KAAK,2BAA2B;QAC9BL,oBAAoB,CAACM,cAAc,GAAG;UACpCC,MAAM,EAAE,YAAY;UACpBC,MAAM,EAAE,UAAU;UAClBH,aAAa,EAAE;QACjB,CAAC;QACD;MACF,KAAK,2BAA2B;QAC9BL,oBAAoB,CAACM,cAAc,GAAG;UACpCC,MAAM,EAAE,YAAY;UACpBC,MAAM,EAAE,UAAU;UAClBH,aAAa,EAAE;QACjB,CAAC;QACD;MACF;QACE3B,WAAW,CAAC,CAAC;QACb;IACJ;IACA,MAAM+B,MAAM,GAAG,IAAI,CAACC,MAAM,CAACC,qBAAqB,CAAC;MAC/CC,OAAO,EAAE,CAACZ,oBAAoB;IAChC,CAAC,CAAC;IACF,OAAO,IAAI,CAACU,MAAM,CAACG,eAAe,CAAC;MACjCJ,MAAM;MACNG,OAAO,EAAE,CAAC,EAAEX,OAAO,EAAE,CAAC,EAAEa,QAAQ,EAAEjB,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ;;EAEAkB,oBAAoBA,CAACC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC/C1C,MAAM,CAACuC,MAAM,IAAIC,IAAI,IAAIC,MAAM,IAAIC,IAAI,CAAC;IACxC;IACA;IACA;IACA,OAAOF,IAAI,GAAGC,MAAM,IAAIC,IAAI,GAAGH,MAAM;EACvC;AACF;;AAEA,OAAO,MAAMzB,CAAC,GAAGf,aAAa,CAACO,CAAC,CAAC;;AAEjC,MAAMqC,YAAY,GAAG,EAAE;AACvB,MAAMC,cAAc,GAAG,CAAC;AACxB,MAAMC,cAAc,GAAG,CAAC;;AAExB/B,CAAC,CAACgC,IAAI,CAAC,gCAAgC,CAAC;AACxCC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzBA,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpCC,MAAM,CAAC,CAAC9C,CAAC,KAAKA,CAAC,CAAC+C,UAAU,IAAI/C,CAAC,CAACgD,MAAM,KAAKhD,CAAC,CAACiD,MAAM;AACnD,CAAC;AACDC,EAAE,CAAC,CAAClD,CAAC,KAAK;EACR,MAAM,EAAEmD,MAAM,EAAEH,MAAM,EAAEI,MAAM,EAAEH,MAAM,EAAEF,UAAU,CAAC,CAAC,GAAG/C,CAAC,CAAC2C,MAAM;;EAE/D,MAAMxC,OAAO,GAAGH,CAAC,CAACqD,oBAAoB,CAAC;IACrC3B,MAAM,EAAE,UAAU;IAClB4B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;IACxCC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDkB,aAAa,EAAEnB;EACjB,CAAC,CAAC;;EAEF,MAAMoB,gBAAgB,GAAG3D,CAAC,CAACE,kBAAkB,CAACC,OAAO,EAAE;IACrDyD,SAAS,EAAE,IAAI;IACfC,cAAc,EAAEV,MAAM;IACtBW,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAEf,MAAM;IACpBU,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAMM,gBAAgB,GAAGhE,CAAC,CAACE,kBAAkB,CAACC,OAAO,EAAE;IACrDyD,SAAS,EAAE,IAAI;IACfC,cAAc,EAAET,MAAM;IACtBW,YAAY,EAAEd,MAAM;IACpBS,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAMO,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEnE,CAAC,CAAC4B,MAAM,EAAE5B,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAMnE,CAAC,CAAC4B,MAAM,EAAR5B,CAAC,CAAC4B,MAAM,CAAAwC,oBAAA,YAARpE,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,GAAE,CAAC;EACnJ,IAAIrB,UAAU,EAAE;IACd,MAAMsB,UAAU,GAAGJ,OAAO,CAACK,eAAe,CAAC;MACzCC,gBAAgB,EAAE,CAACZ,gBAAgB,EAAEK,gBAAgB;IACvD,CAAC,CAAC;IACFK,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACL,MAAMC,WAAW,GAAGR,OAAO,CAACK,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACZ,gBAAgB;IACrC,CAAC,CAAC;IACFc,WAAW,CAACD,GAAG,CAAC,CAAC;IACjB,MAAME,WAAW,GAAGT,OAAO,CAACK,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACP,gBAAgB;IACrC,CAAC,CAAC;IACFU,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMG,OAAO,GAAG5B,UAAU,GAAGI,MAAM,KAAKC,MAAM,GAAG,IAAI;EACrDpD,CAAC,CAAC4E,qBAAqB,CAAC,MAAM;IAC5BX,OAAO,CAACY,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEFlE,CAAC,CAACgC,IAAI,CAAC,8CAA8C,CAAC;AACtDC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvCA,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvCiC,iBAAiB,CAAC;AAClB,EAAEC,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,CAAC;AACDF,iBAAiB,CAAC;AAClB,EAAEG,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE1C,cAAc,CAAC,CAAC;AAC5C,CAAC;AACDK,OAAO,CAAC,SAAS,EAAE/C,oBAAoB,CAAC;AACxCgD,MAAM,CAAC,CAAC9C,CAAC,KAAKA,CAAC,CAACmF,OAAO,KAAK,iBAAiB,IAAInF,CAAC,CAACgF,YAAY,GAAG,CAAC,CAAC;AACpEnC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACnC,CAAC;AACDuC,iBAAiB,CAAC,CAACpF,CAAC,KAAK;EACvB,IAAIA,CAAC,CAACqF,eAAe,EAAE;IACrBrF,CAAC,CAACsF,MAAM,CAACtF,CAAC,CAAC2C,MAAM,CAACsC,OAAO,KAAK,CAAC,EAAE,0DAA0D,CAAC;IAC5FjF,CAAC,CAACsF,MAAM;MACNtF,CAAC,CAAC2C,MAAM,CAACuC,YAAY,KAAK1C,cAAc;MACxC;IACF,CAAC;EACH;AACF,CAAC,CAAC;AACFU,EAAE,CAAC,CAAClD,CAAC,KAAK;EACR,MAAM;IACJuF,oBAAoB;IACpBC,oBAAoB;IACpBT,OAAO;IACPC,YAAY;IACZC,OAAO;IACPC,YAAY;IACZC,OAAO;IACPpC;EACF,CAAC,GAAG/C,CAAC,CAAC2C,MAAM;;EAEZ,MAAMxC,OAAO,GAAGH,CAAC,CAACqD,oBAAoB,CAAC;IACrC3B,MAAM,EAAE,UAAU;IAClB4B,KAAK;IACLC,eAAe,CAACC,iBAAiB;IACjCD,eAAe,CAACkC,eAAe;IAC/BlC,eAAe,CAACmC,eAAe;IAC/BjC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDkB,aAAa,EAAEnB;EACjB,CAAC,CAAC;EACF,MAAMoD,aAAa,GAAGxF,OAAO,CAACG,UAAU,CAAC;IACvCsD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEoB,OAAO;IACvBnB,eAAe,EAAEoB,YAAY;IAC7BnB,YAAY,EAAEgB,OAAO;IACrBrB,aAAa,EAAEsB;EACjB,CAAC,CAAC;EACF,MAAMY,SAAS,GAAG5F,CAAC,CAACc,sBAAsB,CAAC6E,aAAa,EAAER,OAAO,EAAE,oBAAoB,CAAC;;EAExF,MAAMU,eAAe,GAAG7F,CAAC,CAACE,kBAAkB,CAACC,OAAO,EAAE;IACpDyD,SAAS,EAAE,IAAI;IACfC,cAAc,EAAE2B,oBAAoB;IACpC1B,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAEwB,oBAAoB;IAClC7B,aAAa,EAAE;EACjB,CAAC,CAAC;;EAEF,MAAMO,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEnE,CAAC,CAAC4B,MAAM,EAAE5B,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAMnE,CAAC,CAAC4B,MAAM,EAAR5B,CAAC,CAAC4B,MAAM,CAAAwC,oBAAA,YAARpE,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,GAAE,CAAC;EACnJ,MAAMC,UAAU,GAAGJ,OAAO,CAACK,eAAe,CAAC;IACzCC,gBAAgB,EAAE,CAACsB,eAAe;EACpC,CAAC,CAAC;EACF,IAAI9C,UAAU,EAAE;IACdsB,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACrCvB,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAMuB,QAAQ,GAAG/F,CAAC,CAACqD,oBAAoB,CAAC;MACtC3B,MAAM,EAAE,UAAU;MAClB4B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;MACxCC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;MACrCoB,aAAa,EAAE;IACjB,CAAC,CAAC;IACF,MAAMM,gBAAgB,GAAGhE,CAAC,CAACE,kBAAkB,CAAC6F,QAAQ,CAAC;IACvD,MAAMrB,WAAW,GAAGT,OAAO,CAACK,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACP,gBAAgB;IACrC,CAAC,CAAC;IACFU,WAAW,CAACoB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACtClB,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMwB,uBAAuB,GAAGhG,CAAC,CAACiC,oBAAoB;IACpDsD,oBAAoB;IACpBA,oBAAoB;IACpBR,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMiB,yBAAyB,GAAGjG,CAAC,CAACiC,oBAAoB;IACtDuD,oBAAoB;IACpBA,oBAAoB;IACpBP,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMgB,eAAe,GAAGF,uBAAuB,IAAIC,yBAAyB;;EAE5E,MAAMtB,OAAO,GAAG5B,UAAU,GAAGmD,eAAe,GAAG,IAAI;EACnDlG,CAAC,CAAC4E,qBAAqB,CAAC,MAAM;IAC5BX,OAAO,CAACY,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEFlE,CAAC,CAACgC,IAAI,CAAC,sDAAsD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1BA,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1BiC,iBAAiB,CAAC;AAClB,EAAEC,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,CAAC;AACDF,iBAAiB,CAAC;AAClB,EAAEG,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/B,EAAED,OAAO,EAAE,CAAC,EAAEC,YAAY,EAAE1C,cAAc,CAAC,CAAC;AAC5C,CAAC;AACD2D,aAAa,CAAC,CAAC;AACftD,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACvCA,OAAO,CAAC,iBAAiB,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACzCA,OAAO,CAAC,UAAU,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AACnDA,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACnC,CAAC;AACDuC,iBAAiB,CAAC,CAACpF,CAAC,KAAK;EACvB,IAAIA,CAAC,CAACqF,eAAe,EAAE;IACrBrF,CAAC,CAACsF,MAAM,CAACtF,CAAC,CAAC2C,MAAM,CAACsC,OAAO,KAAK,CAAC,EAAE,0DAA0D,CAAC;IAC5FjF,CAAC,CAACsF,MAAM;MACNtF,CAAC,CAAC2C,MAAM,CAACuC,YAAY,KAAK1C,cAAc;MACxC;IACF,CAAC;EACH;AACF,CAAC,CAAC;AACFU,EAAE,CAAC,CAAClD,CAAC,KAAK;EACR,MAAM;IACJoG,OAAO;IACPC,OAAO;IACPtB,OAAO;IACPC,YAAY;IACZC,OAAO;IACPC,YAAY;IACZoB,aAAa;IACbC,eAAe;IACfC,QAAQ;IACRzD;EACF,CAAC,GAAG/C,CAAC,CAAC2C,MAAM;;EAEZ,MAAMxC,OAAO,GAAGH,CAAC,CAACqD,oBAAoB,CAAC;IACrC3B,MAAM,EAAE,sBAAsB;IAC9B4B,KAAK,EAAEC,eAAe,CAACC,iBAAiB,GAAGD,eAAe,CAACkC,eAAe;IAC1EhC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDkB,aAAa,EAAEnB;EACjB,CAAC,CAAC;EACF,MAAMoD,aAAa,GAAGxF,OAAO,CAACG,UAAU,CAAC;IACvCsD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEoB,OAAO;IACvBnB,eAAe,EAAEoB,YAAY;IAC7BnB,YAAY,EAAEgB,OAAO;IACrBrB,aAAa,EAAEsB,YAAY;IAC3ByB,MAAM,EAAED;EACV,CAAC,CAAC;EACF,MAAMvF,UAAU,GAAGuF,QAAQ,KAAK,YAAY,GAAG,OAAO,GAAG,MAAM;EAC/D,MAAMZ,SAAS,GAAG5F,CAAC,CAACc,sBAAsB,CAAC6E,aAAa,EAAE,iBAAiB,EAAE1E,UAAU,CAAC;;EAExF,MAAMyF,cAAc,GAAGvG,OAAO,CAACG,UAAU,CAAC;IACxCsD,SAAS,EAAE,IAAI;IACfC,cAAc,EAAEwC,OAAO;IACvBvC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAEqC,OAAO;IACrB1C,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAMiD,sBAAsB,GAAG;IAC7BtG,IAAI,EAAEqG,cAAc;IACpBJ,aAAa;IACbM,WAAW,EAAEN,aAAa,GAAGO,SAAS,GAAG,MAAM;IAC/CC,YAAY,EAAER,aAAa,GAAGO,SAAS,GAAG,OAAO;IACjDN,eAAe;IACfQ,aAAa,EAAER,eAAe,GAAGM,SAAS,GAAG,MAAM;IACnDG,cAAc,EAAET,eAAe,GAAGM,SAAS,GAAG;EAChD,CAAC;;EAED,MAAM5C,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEnE,CAAC,CAAC4B,MAAM,EAAE5B,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAMnE,CAAC,CAAC4B,MAAM,EAAR5B,CAAC,CAAC4B,MAAM,CAAAwC,oBAAA,YAARpE,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,GAAE,CAAC;EACnJ,MAAMC,UAAU,GAAGJ,OAAO,CAACK,eAAe,CAAC;IACzCC,gBAAgB,EAAE,EAAE;IACpBoC;EACF,CAAC,CAAC;EACF,IAAI5D,UAAU,EAAE;IACdsB,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACrCvB,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAMuB,QAAQ,GAAG/F,CAAC,CAACqD,oBAAoB,CAAC;MACtC3B,MAAM,EAAE,YAAY;MACpB4B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;MACxCC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;MACrCoB,aAAa,EAAE;IACjB,CAAC,CAAC;IACF,MAAMM,gBAAgB,GAAGhE,CAAC,CAACE,kBAAkB,CAAC6F,QAAQ,CAAC;IACvD,MAAMrB,WAAW,GAAGT,OAAO,CAACK,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACP,gBAAgB;IACrC,CAAC,CAAC;IACFU,WAAW,CAACoB,YAAY,CAAC,CAAC,EAAEF,SAAS,CAAC;IACtClB,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMwB,uBAAuB,GAAGhG,CAAC,CAACiC,oBAAoB;IACpDmE,OAAO;IACPA,OAAO;IACPrB,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMiB,yBAAyB,GAAGjG,CAAC,CAACiC,oBAAoB;IACtDoE,OAAO;IACPA,OAAO;IACPpB,OAAO;IACPA,OAAO,GAAGC,YAAY,GAAG;EAC3B,CAAC;EACD,MAAMgB,eAAe,GAAGF,uBAAuB,IAAIC,yBAAyB;EAC5E,MAAMgB,QAAQ;EACdT,QAAQ,KAAK,cAAc,IAAID,eAAe;EAC9CC,QAAQ,KAAK,YAAY,IAAIF,aAAa;;EAE1C,MAAM3B,OAAO,GAAG,CAAC5B,UAAU,IAAImD,eAAe,IAAIe,QAAQ;EAC1DjH,CAAC,CAAC4E,qBAAqB,CAAC,MAAM;IAC5BX,OAAO,CAACY,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEFlE,CAAC,CAACgC,IAAI,CAAC,mCAAmC,CAAC;AAC3CC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,WAAW,EAAE;AACrB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,CAAC;AACDtE,OAAO,CAAC,WAAW,EAAE;AACrB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE3E,cAAc,CAAC,CAAC;AAClC,CAAC;AACDK,OAAO,CAAC,WAAW,EAAE;AACrB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,CAAC;AACDtE,OAAO,CAAC,WAAW,EAAE;AACrB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE3E,cAAc,CAAC,CAAC;AAClC,CAAC;AACDK,OAAO,CAAC,UAAU,EAAE/C,oBAAoB,CAAC;AACzC+C,OAAO,CAAC,UAAU,EAAE/C,oBAAoB,CAAC;AACzCgD,MAAM;EACJ,CAAC9C,CAAC;EACFA,CAAC,CAACoH,QAAQ,KAAK,iBAAiB,IAAIpH,CAAC,CAACqH,SAAS,CAACF,KAAK,GAAG,CAAC;EACzDnH,CAAC,CAACsH,QAAQ,KAAK,iBAAiB,IAAItH,CAAC,CAACuH,SAAS,CAACJ,KAAK,GAAG;AAC1D,CAAC;AACDhB,aAAa,CAAC,CAAC;AACftD,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACnC,CAAC;AACDuC,iBAAiB,CAAC,CAACpF,CAAC,KAAK;EACvB,IAAIA,CAAC,CAACqF,eAAe,EAAE;IACrBrF,CAAC,CAACsF,MAAM;MACNtF,CAAC,CAAC2C,MAAM,CAAC6E,SAAS,CAACN,IAAI,KAAK,CAAC,IAAIlH,CAAC,CAAC2C,MAAM,CAAC8E,SAAS,CAACP,IAAI,KAAK,CAAC;MAC9D;IACF,CAAC;IACDlH,CAAC,CAACsF,MAAM;MACNtF,CAAC,CAAC2C,MAAM,CAAC6E,SAAS,CAACL,KAAK,KAAK3E,cAAc,IAAIxC,CAAC,CAAC2C,MAAM,CAAC8E,SAAS,CAACN,KAAK,KAAK3E,cAAc;MAC1F;IACF,CAAC;EACH;AACF,CAAC,CAAC;AACFU,EAAE,CAAC,CAAClD,CAAC,KAAK;EACR,MAAM,EAAEqH,SAAS,EAAEG,SAAS,EAAED,SAAS,EAAEE,SAAS,EAAEL,QAAQ,EAAEE,QAAQ,EAAEvE,UAAU,CAAC,CAAC,GAAG/C,CAAC,CAAC2C,MAAM;;EAE/F,MAAMxC,OAAO,GAAGH,CAAC,CAACqD,oBAAoB,CAAC;IACrC3B,MAAM,EAAE,UAAU;IAClB4B,KAAK,EAAEC,eAAe,CAACmC,eAAe,GAAGnC,eAAe,CAACkC,eAAe;IACxEhC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDkB,aAAa,EAAEnB;EACjB,CAAC,CAAC;EACF,MAAMmF,GAAG,GAAGvH,OAAO,CAACG,UAAU,CAAC;IAC7BsD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAE2D,SAAS,CAACN,IAAI;IAC9BpD,eAAe,EAAE0D,SAAS,CAACL,KAAK;IAChCpD,YAAY,EAAEsD,SAAS,CAACH,IAAI;IAC5BxD,aAAa,EAAE2D,SAAS,CAACF;EAC3B,CAAC,CAAC;EACF,MAAMQ,GAAG,GAAGxH,OAAO,CAACG,UAAU,CAAC;IAC7BsD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAE4D,SAAS,CAACP,IAAI;IAC9BpD,eAAe,EAAE2D,SAAS,CAACN,KAAK;IAChCpD,YAAY,EAAEwD,SAAS,CAACL,IAAI;IAC5BxD,aAAa,EAAE6D,SAAS,CAACJ;EAC3B,CAAC,CAAC;EACF,MAAMS,UAAU,GAAG5H,CAAC,CAACc,sBAAsB,CAAC4G,GAAG,EAAEN,QAAQ,EAAE,oBAAoB,CAAC;EAChF,MAAMS,UAAU,GAAG7H,CAAC,CAACc,sBAAsB,CAAC6G,GAAG,EAAEL,QAAQ,EAAE,oBAAoB,CAAC;;EAEhF,MAAMQ,YAAY,GAAG9H,CAAC,CAACqD,oBAAoB,CAAC;IAC1C3B,MAAM,EAAE,UAAU;IAClB4B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;IACxCC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;IACrCoB,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAMmC,eAAe,GAAG7F,CAAC,CAACE,kBAAkB,CAAC4H,YAAY,CAAC;EAC1D,MAAM7D,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEnE,CAAC,CAAC4B,MAAM,EAAE5B,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAMnE,CAAC,CAAC4B,MAAM,EAAR5B,CAAC,CAAC4B,MAAM,CAAAwC,oBAAA,YAARpE,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,GAAE,CAAC;EACnJ,MAAMC,UAAU,GAAGJ,OAAO,CAACK,eAAe,CAAC;IACzCC,gBAAgB,EAAE,CAACsB,eAAe;EACpC,CAAC,CAAC;EACF,IAAI9C,UAAU,EAAE;IACdsB,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCvD,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACtCxD,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCvD,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAME,WAAW,GAAGT,OAAO,CAACK,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACsB,eAAe;IACpC,CAAC,CAAC;IACFnB,WAAW,CAACoB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACvCnD,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEA,MAAMuD,YAAY;EAClBhI,4BAA4B,CAACqH,QAAQ,CAAC,IAAIrH,4BAA4B,CAACuH,QAAQ,CAAC;EAChF,MAAMtB,uBAAuB,GAAGhG,CAAC,CAACiC,oBAAoB;IACpDoF,SAAS,CAACH,IAAI;IACdG,SAAS,CAACH,IAAI,GAAGG,SAAS,CAACF,KAAK,GAAG,CAAC;IACpCI,SAAS,CAACL,IAAI;IACdK,SAAS,CAACL,IAAI,GAAGK,SAAS,CAACJ,KAAK,GAAG;EACrC,CAAC;EACD,MAAMlB,yBAAyB,GAAGjG,CAAC,CAACiC,oBAAoB;IACtDuF,SAAS,CAACN,IAAI;IACdM,SAAS,CAACN,IAAI,GAAGM,SAAS,CAACL,KAAK,GAAG,CAAC;IACpCM,SAAS,CAACP,IAAI;IACdO,SAAS,CAACP,IAAI,GAAGO,SAAS,CAACN,KAAK,GAAG;EACrC,CAAC;EACD,MAAMjB,eAAe,GAAGF,uBAAuB,IAAIC,yBAAyB;;EAE5E,MAAMtB,OAAO,GAAG,CAAC5B,UAAU,IAAIgF,YAAY,IAAI7B,eAAe,IAAIkB,QAAQ,KAAKE,QAAQ;EACvFtH,CAAC,CAAC4E,qBAAqB,CAAC,MAAM;IAC5BX,OAAO,CAACY,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,OAAO,CAAC;AACd,CAAC,CAAC;;AAEFlE,CAAC,CAACgC,IAAI,CAAC,mDAAmD,CAAC;AAC3DC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE;AACvB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,CAAC;AACDtE,OAAO,CAAC,aAAa,EAAE;AACvB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE3E,cAAc,CAAC,CAAC;AAClC,CAAC;AACDK,OAAO,CAAC,aAAa,EAAE;AACvB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,CAAC;AACDtE,OAAO,CAAC,aAAa,EAAE;AACvB,EAAEqE,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrB,EAAED,IAAI,EAAE,CAAC,EAAEC,KAAK,EAAE3E,cAAc,CAAC,CAAC;AAClC,CAAC;AACDK,OAAO,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AAClDA,OAAO,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AAClDA,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AACnC,CAAC;AACDuC,iBAAiB,CAAC,CAACpF,CAAC,KAAK;EACvB,IAAIA,CAAC,CAACqF,eAAe,EAAE;IACrBrF,CAAC,CAACsF,MAAM;MACNtF,CAAC,CAAC2C,MAAM,CAACqF,WAAW,CAACd,IAAI,KAAK,CAAC,IAAIlH,CAAC,CAAC2C,MAAM,CAACsF,WAAW,CAACf,IAAI,KAAK,CAAC;MAClE;IACF,CAAC;IACDlH,CAAC,CAACsF,MAAM;MACNtF,CAAC,CAAC2C,MAAM,CAACqF,WAAW,CAACb,KAAK,KAAK3E,cAAc;MAC7CxC,CAAC,CAAC2C,MAAM,CAACsF,WAAW,CAACd,KAAK,KAAK3E,cAAc;MAC7C;IACF,CAAC;EACH;AACF,CAAC,CAAC;AACFU,EAAE,CAAC,CAAClD,CAAC,KAAK;EACR,MAAM,EAAEkI,WAAW,EAAEF,WAAW,EAAEG,WAAW,EAAEF,WAAW,EAAEG,OAAO,EAAEC,OAAO,EAAEtF,UAAU,CAAC,CAAC;EAC1F/C,CAAC,CAAC2C,MAAM;;EAER,MAAMxC,OAAO,GAAGH,CAAC,CAACqD,oBAAoB,CAAC;IACrC3B,MAAM,EAAE,sBAAsB;IAC9B4B,KAAK,EAAEC,eAAe,CAACkC,eAAe;IACtChC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAEE,cAAc,CAAC;IAClDkB,aAAa,EAAEnB;EACjB,CAAC,CAAC;EACF,MAAM+F,cAAc,GAAGnI,OAAO,CAACG,UAAU,CAAC;IACxCsD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEmE,WAAW,CAACd,IAAI;IAChCpD,eAAe,EAAEkE,WAAW,CAACb,KAAK;IAClCpD,YAAY,EAAEmE,WAAW,CAAChB,IAAI;IAC9BxD,aAAa,EAAEwE,WAAW,CAACf,KAAK;IAChCV,MAAM,EAAE2B;EACV,CAAC,CAAC;EACF,MAAMG,cAAc,GAAGpI,OAAO,CAACG,UAAU,CAAC;IACxCsD,SAAS,EAAE,UAAU;IACrBC,cAAc,EAAEoE,WAAW,CAACf,IAAI;IAChCpD,eAAe,EAAEmE,WAAW,CAACd,KAAK;IAClCpD,YAAY,EAAEoE,WAAW,CAACjB,IAAI;IAC9BxD,aAAa,EAAEyE,WAAW,CAAChB,KAAK;IAChCV,MAAM,EAAE4B;EACV,CAAC,CAAC;;EAEF,MAAMG,WAAW,GAAGJ,OAAO,KAAK,YAAY,GAAG,OAAO,GAAG,MAAM;EAC/D,MAAMK,WAAW,GAAGJ,OAAO,KAAK,YAAY,GAAG,OAAO,GAAG,MAAM;EAC/D,MAAMT,UAAU,GAAG5H,CAAC,CAACc,sBAAsB,CAACwH,cAAc,EAAE,iBAAiB,EAAEE,WAAW,CAAC;EAC3F,MAAMX,UAAU,GAAG7H,CAAC,CAACc,sBAAsB,CAACyH,cAAc,EAAE,iBAAiB,EAAEE,WAAW,CAAC;;EAE3F,MAAMX,YAAY,GAAG9H,CAAC,CAACqD,oBAAoB,CAAC;IAC1C3B,MAAM,EAAE,YAAY;IACpB4B,KAAK,EAAEC,eAAe,CAACC,iBAAiB;IACxCC,IAAI,EAAE,CAACnB,YAAY,EAAEA,YAAY,EAAE,CAAC,CAAC;IACrCoB,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAMmC,eAAe,GAAG7F,CAAC,CAACE,kBAAkB,CAAC4H,YAAY,CAAC;EAC1D,MAAM7D,OAAO,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAEnE,CAAC,CAAC4B,MAAM,EAAE5B,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAMnE,CAAC,CAAC4B,MAAM,EAAR5B,CAAC,CAAC4B,MAAM,CAAAwC,oBAAA,YAARpE,CAAC,CAAC4B,MAAM,CAACwC,oBAAoB,GAAE,CAAC;EACnJ,MAAMC,UAAU,GAAGJ,OAAO,CAACK,eAAe,CAAC;IACzCC,gBAAgB,EAAE,CAACsB,eAAe;EACpC,CAAC,CAAC;EACF,IAAI9C,UAAU,EAAE;IACdsB,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCvD,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACtCxD,UAAU,CAACG,GAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACLH,UAAU,CAACyB,YAAY,CAAC,CAAC,EAAE8B,UAAU,CAAC;IACtCvD,UAAU,CAACG,GAAG,CAAC,CAAC;;IAEhB,MAAME,WAAW,GAAGT,OAAO,CAACK,eAAe,CAAC;MAC1CC,gBAAgB,EAAE,CAACsB,eAAe;IACpC,CAAC,CAAC;IACFnB,WAAW,CAACoB,YAAY,CAAC,CAAC,EAAE+B,UAAU,CAAC;IACvCnD,WAAW,CAACF,GAAG,CAAC,CAAC;EACnB;;EAEAxE,CAAC,CAAC4E,qBAAqB,CAAC,MAAM;IAC5BX,OAAO,CAACY,MAAM,CAAC,CAAC;EAClB,CAAC,EAAE,KAAK,CAAC;AACX,CAAC,CAAC","ignoreList":[]}