{"version":3,"file":"in_render_misc.spec.js","names":["description","makeTestGroup","unreachable","kTextureUsages","ValidationTest","kTextureBindingTypes","IsReadOnlyTextureBindingType","F","createBindGroupLayoutForTest","textureUsage","sampleType","visibility","GPUShaderStage","FRAGMENT","bindGroupLayoutEntry","binding","texture","viewDimension","storageTexture","access","format","device","createBindGroupLayout","entries","createBindGroupForTest","textureView","createBindGroup","layout","resource","g","kTextureSize","kTextureLayers","test","desc","params","u","combine","beforeAllSubcases","t","skipIf","isCompatibility","fn","useDifferentTextureAsTexture2","baseLayer2","view1Binding","view2Binding","texture0","createTextureTracked","usage","GPUTextureUsage","TEXTURE_BINDING","STORAGE_BINDING","size","textureView0","createView","dimension","baseArrayLayer","arrayLayerCount","bindGroup0","bindGroup1","texture2","textureView2","validBindGroup2","unusedColorTexture","RENDER_ATTACHMENT","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","renderPassEncoder","beginRenderPass","colorAttachments","view","loadOp","storeOp","setBindGroup","end","noConflict","expectValidationError","finish","bindAspect","depthStencilReadOnly","depthStencilTexture","textureBindingViewDimension","conflictedToNonReadOnlyAttachmentBindGroup","aspect","colorTexture","validBindGroup","depthStencilAttachment","depthReadOnly","stencilReadOnly","inRenderPass","textureUsage0","textureUsage1","skipIfLanguageFeatureNotSupported","COMPUTE","fragmentShader","renderPipeline","createRenderPipeline","createPipelineLayout","bindGroupLayouts","vertex","module","createShaderModule","code","getNoOpShaderCode","fragment","targets","setPipeline","draw","computeShader","pipelineLayout","computePipeline","createComputePipeline","compute","writableStorageTexture","writableStorageTextureView","writableStorageTextureBindGroup","computePassEncoder","beginComputePass","dispatchWorkgroups","success","filter","usage0","usage1","COPY_SRC","COPY_DST","UseTextureOnCommandEncoder","buffer","createBufferWithState","GPUBufferUsage","copyTextureToBuffer","copyBufferToTexture","bindGroup","bindingType","viewUsage"],"sources":["../../../../../../src/webgpu/api/validation/resource_usages/texture/in_render_misc.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTexture Usages Validation Tests on All Kinds of WebGPU Subresource Usage Scopes.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../../common/util/util.js';\nimport { kTextureUsages } from '../../../../capability_info.js';\nimport { ValidationTest } from '../../validation_test.js';\nimport {\n\n  kTextureBindingTypes,\n  IsReadOnlyTextureBindingType } from\n'../texture/in_render_common.spec.js';\n\nclass F extends ValidationTest {\n  createBindGroupLayoutForTest(\n  textureUsage,\n  sampleType,\n  visibility = GPUShaderStage.FRAGMENT)\n  {\n    const bindGroupLayoutEntry = {\n      binding: 0,\n      visibility\n    };\n\n    switch (textureUsage) {\n      case 'sampled-texture':\n        bindGroupLayoutEntry.texture = { viewDimension: '2d-array', sampleType };\n        break;\n      case 'readonly-storage-texture':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'read-only',\n          format: 'r32float',\n          viewDimension: '2d-array'\n        };\n        break;\n      case 'writeonly-storage-texture':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'write-only',\n          format: 'r32float',\n          viewDimension: '2d-array'\n        };\n        break;\n      case 'readwrite-storage-texture':\n        bindGroupLayoutEntry.storageTexture = {\n          access: 'read-write',\n          format: 'r32float',\n          viewDimension: '2d-array'\n        };\n        break;\n      default:\n        unreachable();\n        break;\n    }\n    return this.device.createBindGroupLayout({\n      entries: [bindGroupLayoutEntry]\n    });\n  }\n\n  createBindGroupForTest(\n  textureView,\n  textureUsage,\n  sampleType,\n  visibility = GPUShaderStage.FRAGMENT)\n  {\n    return this.device.createBindGroup({\n      layout: this.createBindGroupLayoutForTest(textureUsage, sampleType, visibility),\n      entries: [{ binding: 0, resource: textureView }]\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\nconst kTextureSize = 16;\nconst kTextureLayers = 3;\n\ng.test('subresources,set_bind_group_on_same_index_color_texture').\ndesc(\n  `\n  Test that when one color texture subresource is bound to different bind groups, whether the bind\n  groups are reset by another compatible ones or not, its list of internal usages within one usage\n  scope can only be a compatible usage list.`\n).\nparams((u) =>\nu.\ncombine('useDifferentTextureAsTexture2', [true, false]).\ncombine('baseLayer2', [0, 1]).\ncombine('view1Binding', kTextureBindingTypes).\ncombine('view2Binding', kTextureBindingTypes)\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility,\n    'texture views used in bindgroups must consist of the entire array in compatibility mode. textureView0 does not fit.'\n  );\n}).\nfn((t) => {\n  const { useDifferentTextureAsTexture2, baseLayer2, view1Binding, view2Binding } = t.params;\n\n  const texture0 = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n    size: [kTextureSize, kTextureSize, kTextureLayers]\n  });\n  // We always bind the first layer of the texture to bindGroup0.\n  const textureView0 = texture0.createView({\n    dimension: '2d-array',\n    baseArrayLayer: 0,\n    arrayLayerCount: 1\n  });\n  const bindGroup0 = t.createBindGroupForTest(textureView0, view1Binding, 'unfilterable-float');\n  const bindGroup1 = t.createBindGroupForTest(textureView0, view2Binding, 'unfilterable-float');\n\n  const texture2 = useDifferentTextureAsTexture2 ?\n  t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n    size: [kTextureSize, kTextureSize, kTextureLayers]\n  }) :\n  texture0;\n  const textureView2 = texture2.createView({\n    dimension: '2d-array',\n    baseArrayLayer: baseLayer2,\n    arrayLayerCount: kTextureLayers - baseLayer2\n  });\n  // There should be no conflict between bindGroup0 and validBindGroup2.\n  const validBindGroup2 = t.createBindGroupForTest(\n    textureView2,\n    view2Binding,\n    'unfilterable-float'\n  );\n\n  const unusedColorTexture = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, 1]\n  });\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPassEncoder = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: unusedColorTexture.createView(),\n      loadOp: 'load',\n      storeOp: 'store'\n    }]\n\n  });\n  renderPassEncoder.setBindGroup(0, bindGroup0);\n  renderPassEncoder.setBindGroup(1, bindGroup1);\n  renderPassEncoder.setBindGroup(1, validBindGroup2);\n  renderPassEncoder.end();\n\n  const noConflict =\n  IsReadOnlyTextureBindingType(view1Binding) && IsReadOnlyTextureBindingType(view2Binding) ||\n  view1Binding === view2Binding;\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !noConflict);\n});\n\ng.test('subresources,set_bind_group_on_same_index_depth_stencil_texture').\ndesc(\n  `\n  Test that when one depth stencil texture subresource is bound to different bind groups, whether\n  the bind groups are reset by another compatible ones or not, its list of internal usages within\n  one usage scope can only be a compatible usage list.`\n).\nparams((u) =>\nu.\ncombine('bindAspect', ['depth-only', 'stencil-only']).\ncombine('depthStencilReadOnly', [true, false])\n).\nfn((t) => {\n  const { bindAspect, depthStencilReadOnly } = t.params;\n  const depthStencilTexture = t.createTextureTracked({\n    format: 'depth24plus-stencil8',\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, 1],\n    ...(t.isCompatibility && {\n      textureBindingViewDimension: '2d-array'\n    })\n  });\n\n  const conflictedToNonReadOnlyAttachmentBindGroup = t.createBindGroupForTest(\n    depthStencilTexture.createView({\n      dimension: '2d-array',\n      aspect: bindAspect\n    }),\n    'sampled-texture',\n    bindAspect === 'depth-only' ? 'depth' : 'uint'\n  );\n\n  const colorTexture = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n    size: [kTextureSize, kTextureSize, 1],\n    ...(t.isCompatibility && {\n      textureBindingViewDimension: '2d-array'\n    })\n  });\n  const validBindGroup = t.createBindGroupForTest(\n    colorTexture.createView({\n      dimension: '2d-array'\n    }),\n    'sampled-texture',\n    'unfilterable-float'\n  );\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPassEncoder = encoder.beginRenderPass({\n    colorAttachments: [],\n    depthStencilAttachment: {\n      view: depthStencilTexture.createView(),\n      depthReadOnly: depthStencilReadOnly,\n      stencilReadOnly: depthStencilReadOnly\n    }\n  });\n  renderPassEncoder.setBindGroup(0, conflictedToNonReadOnlyAttachmentBindGroup);\n  renderPassEncoder.setBindGroup(0, validBindGroup);\n  renderPassEncoder.end();\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !depthStencilReadOnly);\n});\n\ng.test('subresources,set_unused_bind_group').\ndesc(\n  `\n  Test that when one texture subresource is bound to different bind groups and the bind groups are\n  used in the same render or compute pass encoder, its list of internal usages within one usage\n  scope can only be a compatible usage list.`\n).\nparams((u) =>\nu.\ncombine('inRenderPass', [true, false]).\ncombine('textureUsage0', kTextureBindingTypes).\ncombine('textureUsage1', kTextureBindingTypes)\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility,\n    'texture views used in bindgroups must consist of the entire array in compatibility mode. textureView0 does not fit.'\n  );\n}).\nfn((t) => {\n  const { inRenderPass, textureUsage0, textureUsage1 } = t.params;\n\n  if (\n  textureUsage0 === 'readwrite-storage-texture' ||\n  textureUsage1 === 'readwrite-storage-texture')\n  {\n    t.skipIfLanguageFeatureNotSupported('readonly_and_readwrite_storage_textures');\n  }\n\n  const texture0 = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n    size: [kTextureSize, kTextureSize, kTextureLayers]\n  });\n  // We always bind the first layer of the texture to bindGroup0.\n  const textureView0 = texture0.createView({\n    dimension: '2d-array',\n    baseArrayLayer: 0,\n    arrayLayerCount: 1\n  });\n  const visibility = inRenderPass ? GPUShaderStage.FRAGMENT : GPUShaderStage.COMPUTE;\n  // bindGroup0 is used by the pipelines, and bindGroup1 is not used by the pipelines.\n  const bindGroup0 = t.createBindGroupForTest(\n    textureView0,\n    textureUsage0,\n    'unfilterable-float',\n    visibility\n  );\n  const bindGroup1 = t.createBindGroupForTest(\n    textureView0,\n    textureUsage1,\n    'unfilterable-float',\n    visibility\n  );\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const colorTexture = t.createTextureTracked({\n    format: 'r32float',\n    usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, 1]\n  });\n  if (inRenderPass) {\n    let fragmentShader = '';\n    switch (textureUsage0) {\n      case 'sampled-texture':\n        fragmentShader = `\n          @group(0) @binding(0) var texture0 : texture_2d_array<f32>;\n          @fragment fn main()\n            -> @location(0) vec4<f32> {\n              return textureLoad(texture0, vec2<i32>(), 0, 0);\n          }\n          `;\n        break;\n      case `readonly-storage-texture`:\n        fragmentShader = `\n          @group(0) @binding(0) var texture0 : texture_storage_2d_array<r32float, read>;\n          @fragment fn main()\n            -> @location(0) vec4<f32> {\n              return textureLoad(texture0, vec2<i32>(), 0);\n          }\n          `;\n        break;\n      case `writeonly-storage-texture`:\n        fragmentShader = `\n            @group(0) @binding(0) var texture0 : texture_storage_2d_array<r32float, write>;\n            @fragment fn main()\n              -> @location(0) vec4<f32> {\n                textureStore(texture0, vec2i(), 0, vec4f(1, 0, 0, 1));\n                return vec4f(0, 0, 0, 1);\n            }\n            `;\n        break;\n      case `readwrite-storage-texture`:\n        fragmentShader = `\n            @group(0) @binding(0) var texture0 : texture_storage_2d_array<r32float, read_write>;\n            @fragment fn main()\n              -> @location(0) vec4<f32> {\n                let color = textureLoad(texture0, vec2i(), 0);\n                textureStore(texture0, vec2i(), 0, vec4f(1, 0, 0, 1));\n                return color;\n            }\n            `;\n        break;\n    }\n\n    const renderPipeline = t.device.createRenderPipeline({\n      layout: t.device.createPipelineLayout({\n        bindGroupLayouts: [\n        t.createBindGroupLayoutForTest(textureUsage0, 'unfilterable-float', visibility)]\n\n      }),\n      vertex: {\n        module: t.device.createShaderModule({\n          code: t.getNoOpShaderCode('VERTEX')\n        })\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: fragmentShader\n        }),\n        targets: [{ format: 'r32float' }]\n      }\n    });\n\n    const renderPassEncoder = encoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: colorTexture.createView(),\n        loadOp: 'load',\n        storeOp: 'store'\n      }]\n\n    });\n    renderPassEncoder.setBindGroup(0, bindGroup0);\n    renderPassEncoder.setBindGroup(1, bindGroup1);\n    renderPassEncoder.setPipeline(renderPipeline);\n    renderPassEncoder.draw(1);\n    renderPassEncoder.end();\n  } else {\n    let computeShader = '';\n    switch (textureUsage0) {\n      case 'sampled-texture':\n        computeShader = `\n          @group(0) @binding(0) var texture0 : texture_2d_array<f32>;\n          @group(1) @binding(0) var writableStorage : texture_storage_2d_array<r32float, write>;\n          @compute @workgroup_size(1) fn main() {\n              let value = textureLoad(texture0, vec2i(), 0, 0);\n              textureStore(writableStorage, vec2i(), 0, value);\n          }\n          `;\n        break;\n      case `readonly-storage-texture`:\n        computeShader = `\n          @group(0) @binding(0) var texture0 : texture_storage_2d_array<r32float, read>;\n          @group(1) @binding(0) var writableStorage : texture_storage_2d_array<r32float, write>;\n          @compute @workgroup_size(1) fn main() {\n              let value = textureLoad(texture0, vec2<i32>(), 0);\n              textureStore(writableStorage, vec2i(), 0, value);\n          }\n          `;\n        break;\n      case `writeonly-storage-texture`:\n        computeShader = `\n            @group(0) @binding(0) var texture0 : texture_storage_2d_array<r32float, write>;\n            @group(1) @binding(0) var writableStorage : texture_storage_2d_array<r32float, write>;\n            @compute @workgroup_size(1) fn main() {\n                textureStore(texture0, vec2i(), 0, vec4f(1, 0, 0, 1));\n                textureStore(writableStorage, vec2i(), 0, vec4f(1, 0, 0, 1));\n            }\n            `;\n        break;\n      case `readwrite-storage-texture`:\n        computeShader = `\n            @group(0) @binding(0) var texture0 : texture_storage_2d_array<r32float, read_write>;\n            @group(1) @binding(0) var writableStorage : texture_storage_2d_array<r32float, write>;\n            @compute @workgroup_size(1) fn main() {\n                let color = textureLoad(texture0, vec2i(), 0);\n                textureStore(texture0, vec2i(), 0, vec4f(1, 0, 0, 1));\n                textureStore(writableStorage, vec2i(), 0, color);\n            }\n            `;\n        break;\n    }\n\n    const pipelineLayout = t.device.createPipelineLayout({\n      bindGroupLayouts: [\n      t.createBindGroupLayoutForTest(textureUsage0, 'unfilterable-float', visibility),\n      t.createBindGroupLayoutForTest(\n        'writeonly-storage-texture',\n        'unfilterable-float',\n        visibility\n      )]\n\n    });\n    const computePipeline = t.device.createComputePipeline({\n      layout: pipelineLayout,\n      compute: {\n        module: t.device.createShaderModule({\n          code: computeShader\n        })\n      }\n    });\n\n    const writableStorageTexture = t.createTextureTracked({\n      format: 'r32float',\n      usage: GPUTextureUsage.STORAGE_BINDING,\n      size: [kTextureSize, kTextureSize, 1]\n    });\n    const writableStorageTextureView = writableStorageTexture.createView({\n      dimension: '2d-array',\n      baseArrayLayer: 0,\n      arrayLayerCount: 1\n    });\n    const writableStorageTextureBindGroup = t.createBindGroupForTest(\n      writableStorageTextureView,\n      'writeonly-storage-texture',\n      'unfilterable-float',\n      visibility\n    );\n\n    const computePassEncoder = encoder.beginComputePass();\n    computePassEncoder.setBindGroup(0, bindGroup0);\n    computePassEncoder.setBindGroup(1, writableStorageTextureBindGroup);\n    computePassEncoder.setBindGroup(2, bindGroup1);\n    computePassEncoder.setPipeline(computePipeline);\n    computePassEncoder.dispatchWorkgroups(1);\n    computePassEncoder.end();\n  }\n\n  // In WebGPU SPEC (https://gpuweb.github.io/gpuweb/#programming-model-synchronization):\n  // This specification defines the following usage scopes:\n  // - In a compute pass, each dispatch command (dispatchWorkgroups() or\n  //   dispatchWorkgroupsIndirect()) is one usage scope. A subresource is \"used\" in the usage\n  //   scope if it is potentially accessible by the command. State-setting compute pass commands,\n  //   like setBindGroup(index, bindGroup, dynamicOffsets), do not contribute directly to a usage\n  //   scope.\n  // - One render pass is one usage scope. A subresource is \"used\" in the usage scope if it’s\n  //   referenced by any (state-setting or non-state-setting) command. For example, in\n  //   setBindGroup(index, bindGroup, dynamicOffsets), every subresource in bindGroup is \"used\" in\n  //   the render pass’s usage scope.\n  const success =\n  !inRenderPass ||\n  IsReadOnlyTextureBindingType(textureUsage0) &&\n  IsReadOnlyTextureBindingType(textureUsage1) ||\n  textureUsage0 === textureUsage1;\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, !success);\n});\n\ng.test('subresources,texture_usages_in_copy_and_render_pass').\ndesc(\n  `\n  Test that using one texture subresource in a render pass encoder and a copy command is always\n  allowed as WebGPU SPEC (chapter 3.4.5) defines that out of any pass encoder, each command always\n  belongs to one usage scope.`\n).\nparams((u) =>\nu.\ncombine('usage0', [\n'copy-src',\n'copy-dst',\n'color-attachment',\n...kTextureBindingTypes]\n).\ncombine('usage1', [\n'copy-src',\n'copy-dst',\n'color-attachment',\n...kTextureBindingTypes]\n).\nfilter(\n  ({ usage0, usage1 }) =>\n  usage0 === 'copy-src' ||\n  usage0 === 'copy-dst' ||\n  usage1 === 'copy-src' ||\n  usage1 === 'copy-dst'\n)\n).\nfn((t) => {\n  const { usage0, usage1 } = t.params;\n\n  const texture = t.createTextureTracked({\n    format: 'r32float',\n    usage:\n    GPUTextureUsage.COPY_SRC |\n    GPUTextureUsage.COPY_DST |\n    GPUTextureUsage.TEXTURE_BINDING |\n    GPUTextureUsage.STORAGE_BINDING |\n    GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, 1],\n    ...(t.isCompatibility && {\n      textureBindingViewDimension: '2d-array'\n    })\n  });\n\n  const UseTextureOnCommandEncoder = (\n  texture,\n  usage,\n  encoder) =>\n  {\n    switch (usage) {\n      case 'copy-src':{\n          const buffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.COPY_DST\n          });\n          encoder.copyTextureToBuffer({ texture }, { buffer }, [1, 1, 1]);\n          break;\n        }\n      case 'copy-dst':{\n          const buffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.COPY_SRC\n          });\n          encoder.copyBufferToTexture({ buffer }, { texture }, [1, 1, 1]);\n          break;\n        }\n      case 'color-attachment':{\n          const renderPassEncoder = encoder.beginRenderPass({\n            colorAttachments: [{ view: texture.createView(), loadOp: 'load', storeOp: 'store' }]\n          });\n          renderPassEncoder.end();\n          break;\n        }\n      case 'sampled-texture':\n      case 'readonly-storage-texture':\n      case 'writeonly-storage-texture':\n      case 'readwrite-storage-texture':{\n          const colorTexture = t.createTextureTracked({\n            format: 'r32float',\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\n            size: [kTextureSize, kTextureSize, 1]\n          });\n          const renderPassEncoder = encoder.beginRenderPass({\n            colorAttachments: [\n            { view: colorTexture.createView(), loadOp: 'load', storeOp: 'store' }]\n\n          });\n          const bindGroup = t.createBindGroupForTest(\n            texture.createView({\n              dimension: '2d-array'\n            }),\n            usage,\n            'unfilterable-float'\n          );\n          renderPassEncoder.setBindGroup(0, bindGroup);\n          renderPassEncoder.end();\n          break;\n        }\n    }\n  };\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  UseTextureOnCommandEncoder(texture, usage0, encoder);\n  UseTextureOnCommandEncoder(texture, usage1, encoder);\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, false);\n});\n\ng.test('subresources,texture_view_usages').\ndesc(\n  `\n  Test that the usages of the texture view are used to validate compatibility in command encoding\n  instead of the usages of the base texture.`\n).\nparams((u) =>\nu.\ncombine('bindingType', ['color-attachment', ...kTextureBindingTypes]).\ncombine('viewUsage', [0, ...kTextureUsages])\n).\nfn((t) => {\n  const { bindingType, viewUsage } = t.params;\n\n  const texture = t.createTextureTracked({\n    format: 'r32float',\n    usage:\n    GPUTextureUsage.COPY_SRC |\n    GPUTextureUsage.COPY_DST |\n    GPUTextureUsage.TEXTURE_BINDING |\n    GPUTextureUsage.STORAGE_BINDING |\n    GPUTextureUsage.RENDER_ATTACHMENT,\n    size: [kTextureSize, kTextureSize, 1],\n    ...(t.isCompatibility && {\n      textureBindingViewDimension: '2d-array'\n    })\n  });\n\n  switch (bindingType) {\n    case 'color-attachment':{\n        const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n        const renderPassEncoder = encoder.beginRenderPass({\n          colorAttachments: [\n          { view: texture.createView({ usage: viewUsage }), loadOp: 'load', storeOp: 'store' }]\n\n        });\n        renderPassEncoder.end();\n\n        const success = viewUsage === 0 || (viewUsage & GPUTextureUsage.RENDER_ATTACHMENT) !== 0;\n\n        t.expectValidationError(() => {\n          encoder.finish();\n        }, !success);\n        break;\n      }\n    case 'sampled-texture':\n    case 'readonly-storage-texture':\n    case 'writeonly-storage-texture':\n    case 'readwrite-storage-texture':\n      {\n        let success = true;\n        if (viewUsage !== 0) {\n          if (bindingType === 'sampled-texture') {\n            if ((viewUsage & GPUTextureUsage.TEXTURE_BINDING) === 0) success = false;\n          } else {\n            if ((viewUsage & GPUTextureUsage.STORAGE_BINDING) === 0) success = false;\n          }\n        }\n\n        t.expectValidationError(() => {\n          t.createBindGroupForTest(\n            texture.createView({\n              dimension: '2d-array',\n              usage: viewUsage\n            }),\n            bindingType,\n            'unfilterable-float'\n          );\n        }, !success);\n      }\n      break;\n    default:\n      unreachable();\n  }\n});"],"mappings":"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","ignoreList":[]}