{"version":3,"file":"in_pass_misc.spec.js","names":["description","makeTestGroup","unreachable","BufferResourceUsageTest","kAllBufferUsages","g","kBufferSize","test","desc","params","u","combine","fn","t","usage0","usage1","kUsages","GPUBufferUsage","UNIFORM","STORAGE","INDIRECT","buffer","createBufferWithState","size","usage","anotherBuffer","bindGroupLayouts","createBindGroupLayoutForTest","push","pipelineLayout","device","createPipelineLayout","computePipeline","createNoOpComputePipeline","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","computePassEncoder","beginComputePass","setPipeline","bindGroup0","createBindGroupForTest","setBindGroup","anotherBindGroup","bindGroup1","dispatchWorkgroups","dispatchWorkgroupsIndirect","end","expectValidationError","finish","unless","VERTEX","INDEX","renderPassEncoder","beginSimpleRenderPass","vertexBufferCount","length","setVertexBuffer","setIndexBuffer","renderPipeline","createRenderPipelineForTest","indexBuffer","drawIndexedIndirect","drawIndirect","drawIndexed","draw","fail","pass","IsCopy","IsValidComputeUsage","COPY_SRC","COPY_DST","UseBufferOnCommandEncoder","destinationBuffer","copyBufferToBuffer","sourceBuffer","bindGroup","createNoOpRenderPipeline"],"sources":["../../../../../../src/webgpu/api/validation/resource_usages/buffer/in_pass_misc.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTest other buffer usage validation rules that are not tests in ./in_pass_encoder.spec.js.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../../common/util/util.js';\n\nimport { BufferResourceUsageTest, kAllBufferUsages } from './in_pass_encoder.spec.js';\n\nexport const g = makeTestGroup(BufferResourceUsageTest);\n\nconst kBufferSize = 256;\n\ng.test('subresources,reset_buffer_usage_before_dispatch').\ndesc(\n  `\nTest that the buffer usages which are reset by another state-setting commands before a dispatch call\ndo not contribute directly to any usage scope in a compute pass.`\n).\nparams((u) =>\nu.\ncombine('usage0', ['uniform', 'storage', 'read-only-storage']).\ncombine('usage1', ['uniform', 'storage', 'read-only-storage', 'indirect'])\n).\nfn((t) => {\n  const { usage0, usage1 } = t.params;\n\n  const kUsages = GPUBufferUsage.UNIFORM | GPUBufferUsage.STORAGE | GPUBufferUsage.INDIRECT;\n  const buffer = t.createBufferWithState('valid', {\n    size: kBufferSize,\n    usage: kUsages\n  });\n  const anotherBuffer = t.createBufferWithState('valid', {\n    size: kBufferSize,\n    usage: kUsages\n  });\n\n  const bindGroupLayouts = [\n  t.createBindGroupLayoutForTest(usage0, 'compute')];\n\n  if (usage1 !== 'indirect') {\n    bindGroupLayouts.push(t.createBindGroupLayoutForTest(usage1, 'compute'));\n  }\n  const pipelineLayout = t.device.createPipelineLayout({ bindGroupLayouts });\n  const computePipeline = t.createNoOpComputePipeline(pipelineLayout);\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const computePassEncoder = encoder.beginComputePass();\n  computePassEncoder.setPipeline(computePipeline);\n\n  // Set usage0 for buffer at bind group index 0\n  const bindGroup0 = t.createBindGroupForTest(buffer, 0, usage0, 'compute');\n  computePassEncoder.setBindGroup(0, bindGroup0);\n\n  // Reset bind group index 0 with another bind group that uses anotherBuffer\n  const anotherBindGroup = t.createBindGroupForTest(anotherBuffer, 0, usage0, 'compute');\n  computePassEncoder.setBindGroup(0, anotherBindGroup);\n\n  // Set usage1 for buffer\n  switch (usage1) {\n    case 'uniform':\n    case 'storage':\n    case 'read-only-storage':{\n        const bindGroup1 = t.createBindGroupForTest(buffer, 0, usage1, 'compute');\n        computePassEncoder.setBindGroup(1, bindGroup1);\n        computePassEncoder.dispatchWorkgroups(1);\n        break;\n      }\n    case 'indirect':{\n        computePassEncoder.dispatchWorkgroupsIndirect(buffer, 0);\n        break;\n      }\n  }\n  computePassEncoder.end();\n\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, false);\n});\n\ng.test('subresources,reset_buffer_usage_before_draw').\ndesc(\n  `\nTest that the buffer usages which are reset by another state-setting commands before a draw call\nstill contribute directly to the usage scope of the draw call.`\n).\nparams((u) =>\nu.\ncombine('usage0', ['uniform', 'storage', 'read-only-storage', 'vertex', 'index']).\ncombine('usage1', kAllBufferUsages).\nunless((t) => {\n  return t.usage0 === 'index' && t.usage1 === 'indirect';\n})\n).\nfn((t) => {\n  const { usage0, usage1 } = t.params;\n\n  const kUsages =\n  GPUBufferUsage.UNIFORM |\n  GPUBufferUsage.STORAGE |\n  GPUBufferUsage.INDIRECT |\n  GPUBufferUsage.VERTEX |\n  GPUBufferUsage.INDEX;\n  const buffer = t.createBufferWithState('valid', {\n    size: kBufferSize,\n    usage: kUsages\n  });\n  const anotherBuffer = t.createBufferWithState('valid', {\n    size: kBufferSize,\n    usage: kUsages\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPassEncoder = t.beginSimpleRenderPass(encoder);\n\n  const bindGroupLayouts = [];\n  let vertexBufferCount = 0;\n\n  // Set buffer as usage0 and reset buffer with anotherBuffer as usage0\n  switch (usage0) {\n    case 'uniform':\n    case 'storage':\n    case 'read-only-storage':{\n        const bindGroup0 = t.createBindGroupForTest(buffer, 0, usage0, 'fragment');\n        renderPassEncoder.setBindGroup(bindGroupLayouts.length, bindGroup0);\n\n        const anotherBindGroup = t.createBindGroupForTest(anotherBuffer, 0, usage0, 'fragment');\n        renderPassEncoder.setBindGroup(bindGroupLayouts.length, anotherBindGroup);\n\n        bindGroupLayouts.push(t.createBindGroupLayoutForTest(usage0, 'fragment'));\n        break;\n      }\n    case 'vertex':{\n        renderPassEncoder.setVertexBuffer(vertexBufferCount, buffer);\n        renderPassEncoder.setVertexBuffer(vertexBufferCount, anotherBuffer);\n\n        ++vertexBufferCount;\n        break;\n      }\n    case 'index':{\n        renderPassEncoder.setIndexBuffer(buffer, 'uint16');\n        renderPassEncoder.setIndexBuffer(anotherBuffer, 'uint16');\n        break;\n      }\n  }\n\n  // Set buffer as usage1\n  switch (usage1) {\n    case 'uniform':\n    case 'storage':\n    case 'read-only-storage':{\n        const bindGroup1 = t.createBindGroupForTest(buffer, 0, usage1, 'fragment');\n        renderPassEncoder.setBindGroup(bindGroupLayouts.length, bindGroup1);\n\n        bindGroupLayouts.push(t.createBindGroupLayoutForTest(usage1, 'fragment'));\n        break;\n      }\n    case 'vertex':{\n        renderPassEncoder.setVertexBuffer(vertexBufferCount, buffer);\n        ++vertexBufferCount;\n        break;\n      }\n    case 'index':{\n        renderPassEncoder.setIndexBuffer(buffer, 'uint16');\n        break;\n      }\n    case 'indirect':\n    case 'indexedIndirect':\n      break;\n  }\n\n  // Add draw call\n  const pipelineLayout = t.device.createPipelineLayout({\n    bindGroupLayouts\n  });\n  const renderPipeline = t.createRenderPipelineForTest(pipelineLayout, vertexBufferCount);\n  renderPassEncoder.setPipeline(renderPipeline);\n  switch (usage1) {\n    case 'indexedIndirect':{\n        if (usage0 !== 'index') {\n          const indexBuffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.INDEX\n          });\n          renderPassEncoder.setIndexBuffer(indexBuffer, 'uint16');\n        }\n        renderPassEncoder.drawIndexedIndirect(buffer, 0);\n        break;\n      }\n    case 'indirect':{\n        renderPassEncoder.drawIndirect(buffer, 0);\n        break;\n      }\n    case 'index':{\n        renderPassEncoder.drawIndexed(1);\n        break;\n      }\n    case 'vertex':\n    case 'uniform':\n    case 'storage':\n    case 'read-only-storage':{\n        if (usage0 === 'index') {\n          renderPassEncoder.drawIndexed(1);\n        } else {\n          renderPassEncoder.draw(1);\n        }\n        break;\n      }\n  }\n\n  renderPassEncoder.end();\n\n  const fail = usage0 === 'storage' !== (usage1 === 'storage');\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, fail);\n});\n\ng.test('subresources,buffer_usages_in_copy_and_pass').\ndesc(\n  `\n  Test that using one buffer in a copy command, a render or compute pass encoder is always allowed\n  as WebGPU SPEC (chapter 3.4.5) defines that out of any pass encoder, each command belongs to one\n  separated usage scope.`\n).\nparams((u) =>\nu.\ncombine('usage0', [\n'copy-src',\n'copy-dst',\n'uniform',\n'storage',\n'read-only-storage',\n'vertex',\n'index',\n'indirect',\n'indexedIndirect']\n).\ncombine('usage1', [\n'copy-src',\n'copy-dst',\n'uniform',\n'storage',\n'read-only-storage',\n'vertex',\n'index',\n'indirect',\n'indexedIndirect']\n).\ncombine('pass', ['render', 'compute']).\nunless(({ usage0, usage1, pass }) => {\n  const IsCopy = (usage) => {\n    return usage === 'copy-src' || usage === 'copy-dst';\n  };\n  // We intend to test copy usages in this test.\n  if (!IsCopy(usage0) && !IsCopy(usage1)) {\n    return true;\n  }\n  // When both usage0 and usage1 are copy usages, 'pass' is meaningless so in such situation\n  // we just need to reserve one value as 'pass'.\n  if (IsCopy(usage0) && IsCopy(usage1)) {\n    return pass === 'compute';\n  }\n\n  const IsValidComputeUsage = (usage) => {\n    switch (usage) {\n      case 'vertex':\n      case 'index':\n      case 'indexedIndirect':\n        return false;\n      default:\n        return true;\n    }\n  };\n  if (pass === 'compute') {\n    return !IsValidComputeUsage(usage0) || !IsValidComputeUsage(usage1);\n  }\n\n  return false;\n})\n).\nfn((t) => {\n  const { usage0, usage1, pass } = t.params;\n\n  const kUsages =\n  GPUBufferUsage.COPY_SRC |\n  GPUBufferUsage.COPY_DST |\n  GPUBufferUsage.UNIFORM |\n  GPUBufferUsage.STORAGE |\n  GPUBufferUsage.INDIRECT |\n  GPUBufferUsage.VERTEX |\n  GPUBufferUsage.INDEX;\n  const buffer = t.createBufferWithState('valid', {\n    size: kBufferSize,\n    usage: kUsages\n  });\n\n  const UseBufferOnCommandEncoder = (\n  usage,\n\n\n\n\n\n\n\n\n\n  encoder) =>\n  {\n    switch (usage) {\n      case 'copy-src':{\n          const destinationBuffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.COPY_DST\n          });\n          encoder.copyBufferToBuffer(buffer, 0, destinationBuffer, 0, 4);\n          break;\n        }\n      case 'copy-dst':{\n          const sourceBuffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.COPY_SRC\n          });\n          encoder.copyBufferToBuffer(sourceBuffer, 0, buffer, 0, 4);\n          break;\n        }\n      case 'uniform':\n      case 'storage':\n      case 'read-only-storage':{\n          const bindGroup = t.createBindGroupForTest(buffer, 0, usage, 'fragment');\n          switch (pass) {\n            case 'render':{\n                const renderPassEncoder = t.beginSimpleRenderPass(encoder);\n                renderPassEncoder.setBindGroup(0, bindGroup);\n                renderPassEncoder.end();\n                break;\n              }\n            case 'compute':{\n                const computePassEncoder = encoder.beginComputePass();\n                computePassEncoder.setBindGroup(0, bindGroup);\n                computePassEncoder.end();\n                break;\n              }\n            default:\n              unreachable();\n          }\n          break;\n        }\n      case 'vertex':{\n          const renderPassEncoder = t.beginSimpleRenderPass(encoder);\n          renderPassEncoder.setVertexBuffer(0, buffer);\n          renderPassEncoder.end();\n          break;\n        }\n      case 'index':{\n          const renderPassEncoder = t.beginSimpleRenderPass(encoder);\n          renderPassEncoder.setIndexBuffer(buffer, 'uint16');\n          renderPassEncoder.end();\n          break;\n        }\n      case 'indirect':{\n          switch (pass) {\n            case 'render':{\n                const renderPassEncoder = t.beginSimpleRenderPass(encoder);\n                const renderPipeline = t.createNoOpRenderPipeline();\n                renderPassEncoder.setPipeline(renderPipeline);\n                renderPassEncoder.drawIndirect(buffer, 0);\n                renderPassEncoder.end();\n                break;\n              }\n            case 'compute':{\n                const computePassEncoder = encoder.beginComputePass();\n                const computePipeline = t.createNoOpComputePipeline();\n                computePassEncoder.setPipeline(computePipeline);\n                computePassEncoder.dispatchWorkgroupsIndirect(buffer, 0);\n                computePassEncoder.end();\n                break;\n              }\n            default:\n              unreachable();\n          }\n          break;\n        }\n      case 'indexedIndirect':{\n          const renderPassEncoder = t.beginSimpleRenderPass(encoder);\n          const renderPipeline = t.createNoOpRenderPipeline();\n          renderPassEncoder.setPipeline(renderPipeline);\n          const indexBuffer = t.createBufferWithState('valid', {\n            size: 4,\n            usage: GPUBufferUsage.INDEX\n          });\n          renderPassEncoder.setIndexBuffer(indexBuffer, 'uint16');\n          renderPassEncoder.drawIndexedIndirect(buffer, 0);\n          renderPassEncoder.end();\n          break;\n        }\n      default:\n        unreachable();\n    }\n  };\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  UseBufferOnCommandEncoder(usage0, encoder);\n  UseBufferOnCommandEncoder(usage1, encoder);\n  t.expectValidationError(() => {\n    encoder.finish();\n  }, false);\n});"],"mappings":"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","ignoreList":[]}