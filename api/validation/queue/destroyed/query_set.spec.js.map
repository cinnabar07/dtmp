{"version":3,"file":"query_set.spec.js","names":["description","makeTestGroup","ValidationTest","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","occlusionQuerySet","createQuerySetWithState","params","querySetState","encoder","createEncoder","beginOcclusionQuery","endOcclusionQuery","validateFinishAndSubmitGivenState","beginSubcases","beforeAllSubcases","selectDeviceOrSkipTestCase","querySet","type","count","writeTimestamp","ex","skipIf","TypeError","beginComputePass","timestampWrites","beginningOfPassWriteIndex","end","texture","createTextureTracked","size","format","usage","GPUTextureUsage","RENDER_ATTACHMENT","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","buffer","createBufferTracked","GPUBufferUsage","QUERY_RESOLVE","resolveQuerySet"],"sources":["../../../../../../src/webgpu/api/validation/queue/destroyed/query_set.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests using a destroyed query set on a queue.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('beginOcclusionQuery').\ndesc(\n  `\nTests that use a destroyed query set in occlusion query on render pass encoder.\n- x= {destroyed, not destroyed (control case)}\n  `\n).\nparamsSubcasesOnly((u) => u.combine('querySetState', ['valid', 'destroyed'])).\nfn((t) => {\n  const occlusionQuerySet = t.createQuerySetWithState(t.params.querySetState);\n\n  const encoder = t.createEncoder('render pass', { occlusionQuerySet });\n  encoder.encoder.beginOcclusionQuery(0);\n  encoder.encoder.endOcclusionQuery();\n  encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n});\n\ng.test('timestamps').\ndesc(\n  `\nTests that use a destroyed query set in timestamp query on {non-pass, compute, render} encoder.\n- x= {destroyed, not destroyed (control case)}\n\n  TODO: writeTimestamp is removed from the spec so it's skipped if it TypeErrors.\n  `\n).\nparams((u) => u.beginSubcases().combine('querySetState', ['valid', 'destroyed'])).\nbeforeAllSubcases((t) => t.selectDeviceOrSkipTestCase('timestamp-query')).\nfn((t) => {\n  const querySet = t.createQuerySetWithState(t.params.querySetState, {\n    type: 'timestamp',\n    count: 2\n  });\n\n  {\n    const encoder = t.createEncoder('non-pass');\n    try {\n\n      encoder.encoder.writeTimestamp(querySet, 0);\n    } catch (ex) {\n      t.skipIf(ex instanceof TypeError, 'writeTimestamp is actually not available');\n    }\n    encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n  }\n\n  {\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.\n    beginComputePass({\n      timestampWrites: { querySet, beginningOfPassWriteIndex: 0 }\n    }).\n    end();\n    encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n  }\n\n  {\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT\n    });\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.\n    beginRenderPass({\n      colorAttachments: [\n      {\n        view: texture.createView(),\n        loadOp: 'load',\n        storeOp: 'store'\n      }],\n\n      timestampWrites: { querySet, beginningOfPassWriteIndex: 0 }\n    }).\n    end();\n    encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n  }\n});\n\ng.test('resolveQuerySet').\ndesc(\n  `\nTests that use a destroyed query set in resolveQuerySet.\n- x= {destroyed, not destroyed (control case)}\n  `\n).\nparamsSubcasesOnly((u) => u.combine('querySetState', ['valid', 'destroyed'])).\nfn((t) => {\n  const querySet = t.createQuerySetWithState(t.params.querySetState);\n\n  const buffer = t.createBufferTracked({ size: 8, usage: GPUBufferUsage.QUERY_RESOLVE });\n\n  const encoder = t.createEncoder('non-pass');\n  encoder.encoder.resolveQuerySet(querySet, 0, 1, buffer, 0);\n  encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n});"],"mappings":"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","ignoreList":[]}