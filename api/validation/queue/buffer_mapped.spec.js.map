{"version":3,"file":"buffer_mapped.spec.js","names":["description","makeTestGroup","ValidationTest","F","runBufferDependencyTest","usage","callback","bufferDesc","size","mappedAtCreation","mapMode","GPUBufferUsage","MAP_READ","GPUMapMode","READ","WRITE","mappableBuffer","createBufferTracked","unmappedBuffer","mapPromise","globalThis","_TRAMPOLINE_","mapAsync","expectValidationError","getMappedRange","unmap","mappedBuffer","g","test","desc","fn","t","data","Uint32Array","COPY_DST","buffer","queue","writeBuffer","sourceBuffer","COPY_SRC","destBuffer","MAP_WRITE","commandEncoder","device","createCommandEncoder","copyBufferToBuffer","submit","finish","width","height","texture","createTextureTracked","format","GPUTextureUsage","copyBufferToTexture","copyTextureToBuffer","paramsSubcasesOnly","order","_shouldError","shouldError","params","targetBuffer","commandBuffer","steps","record","map","op"],"sources":["../../../../../src/webgpu/api/validation/queue/buffer_mapped.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for the map-state of mappable buffers used in submitted command buffers.\n\nTests every operation that has a dependency on a buffer\n  - writeBuffer\n  - copyB2B {src,dst}\n  - copyB2T\n  - copyT2B\n\nTest those operations against buffers in the following states:\n  - Unmapped\n  - In the process of mapping\n  - mapped\n  - mapped with a mapped range queried\n  - unmapped after mapping\n  - mapped at creation\n\nAlso tests every order of operations combination of mapping operations and command recording\noperations to ensure the mapping state is only considered when a command buffer is submitted.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../validation_test.js';\n\nclass F extends ValidationTest {\n  async runBufferDependencyTest(usage, callback) {\n    const bufferDesc = {\n      size: 8,\n      usage,\n      mappedAtCreation: false\n    };\n\n    const mapMode = usage & GPUBufferUsage.MAP_READ ? GPUMapMode.READ : GPUMapMode.WRITE;\n\n    // Create a mappable buffer, and one that will remain unmapped for comparison.\n    const mappableBuffer = this.createBufferTracked(bufferDesc);\n    const unmappedBuffer = this.createBufferTracked(bufferDesc);\n\n    // Run the given operation before the buffer is mapped. Should succeed.\n    callback(mappableBuffer);\n\n    // Map the buffer\n    const mapPromise = globalThis._TRAMPOLINE_(\"mapAsync\", mappableBuffer, mappableBuffer.mapAsync, [mapMode], () => mappableBuffer.mapAsync(mapMode));\n\n    // Run the given operation while the buffer is in the process of mapping. Should fail.\n    this.expectValidationError(() => {\n      callback(mappableBuffer);\n    });\n\n    // Run on a different, unmapped buffer. Should succeed.\n    callback(unmappedBuffer);\n\n    await mapPromise;\n\n    // Run the given operation when the buffer is finished mapping with no getMappedRange. Should fail.\n    this.expectValidationError(() => {\n      callback(mappableBuffer);\n    });\n\n    // Run on a different, unmapped buffer. Should succeed.\n    callback(unmappedBuffer);\n\n    // Run the given operation when the buffer is mapped with getMappedRange. Should fail.\n    mappableBuffer.getMappedRange();\n    this.expectValidationError(() => {\n      callback(mappableBuffer);\n    });\n\n    // Unmap the buffer and run the operation. Should succeed.\n    mappableBuffer.unmap();\n    callback(mappableBuffer);\n\n    // Create a buffer that's mappedAtCreation.\n    bufferDesc.mappedAtCreation = true;\n    const mappedBuffer = this.createBufferTracked(bufferDesc);\n\n    // Run the operation with the mappedAtCreation buffer. Should fail.\n    this.expectValidationError(() => {\n      callback(mappedBuffer);\n    });\n\n    // Run on a different, unmapped buffer. Should succeed.\n    callback(unmappedBuffer);\n\n    // Unmap the mappedAtCreation buffer and run the operation. Should succeed.\n    mappedBuffer.unmap();\n    callback(mappedBuffer);\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('writeBuffer').\ndesc(`Test that an outstanding mapping will prevent writeBuffer calls.`).\nfn(async (t) => {\n  const data = new Uint32Array([42]);\n\n  await t.runBufferDependencyTest(\n    GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n    (buffer) => {\n      t.queue.writeBuffer(buffer, 0, data);\n    }\n  );\n});\n\ng.test('copyBufferToBuffer').\ndesc(\n  `\n  Test that an outstanding mapping will prevent copyBufferToTexture commands from submitting,\n  both when used as the source and destination.`\n).\nfn(async (t) => {\n  const sourceBuffer = t.createBufferTracked({\n    size: 8,\n    usage: GPUBufferUsage.COPY_SRC\n  });\n\n  const destBuffer = t.createBufferTracked({\n    size: 8,\n    usage: GPUBufferUsage.COPY_DST\n  });\n\n  await t.runBufferDependencyTest(\n    GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\n    (buffer) => {\n      const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n      commandEncoder.copyBufferToBuffer(buffer, 0, destBuffer, 0, 4);\n      globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[commandEncoder.finish()]], () => t.queue.submit([commandEncoder.finish()]));\n    }\n  );\n\n  await t.runBufferDependencyTest(\n    GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n    (buffer) => {\n      const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n      commandEncoder.copyBufferToBuffer(sourceBuffer, 0, buffer, 0, 4);\n      globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[commandEncoder.finish()]], () => t.queue.submit([commandEncoder.finish()]));\n    }\n  );\n});\n\ng.test('copyBufferToTexture').\ndesc(\n  `Test that an outstanding mapping will prevent copyBufferToTexture commands from submitting.`\n).\nfn(async (t) => {\n  const size = { width: 1, height: 1 };\n\n  const texture = t.createTextureTracked({\n    size,\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_DST\n  });\n\n  await t.runBufferDependencyTest(\n    GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\n    (buffer) => {\n      const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n      commandEncoder.copyBufferToTexture({ buffer }, { texture }, size);\n      globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[commandEncoder.finish()]], () => t.queue.submit([commandEncoder.finish()]));\n    }\n  );\n});\n\ng.test('copyTextureToBuffer').\ndesc(\n  `Test that an outstanding mapping will prevent copyTextureToBuffer commands from submitting.`\n).\nfn(async (t) => {\n  const size = { width: 1, height: 1 };\n\n  const texture = t.createTextureTracked({\n    size,\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_SRC\n  });\n\n  await t.runBufferDependencyTest(\n    GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n    (buffer) => {\n      const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n      commandEncoder.copyTextureToBuffer({ texture }, { buffer }, size);\n      globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[commandEncoder.finish()]], () => t.queue.submit([commandEncoder.finish()]));\n    }\n  );\n});\n\ng.test('map_command_recording_order').\ndesc(\n  `\nTest that the order of mapping a buffer relative to when commands are recorded that use it\n  does not matter, as long as the buffer is unmapped when the commands are submitted.\n  `\n).\nparamsSubcasesOnly([\n{\n  order: ['record', 'map', 'unmap', 'finish', 'submit'],\n  mappedAtCreation: false,\n  _shouldError: false\n},\n{\n  order: ['record', 'map', 'finish', 'unmap', 'submit'],\n  mappedAtCreation: false,\n  _shouldError: false\n},\n{\n  order: ['record', 'finish', 'map', 'unmap', 'submit'],\n  mappedAtCreation: false,\n  _shouldError: false\n},\n{\n  order: ['map', 'record', 'unmap', 'finish', 'submit'],\n  mappedAtCreation: false,\n  _shouldError: false\n},\n{\n  order: ['map', 'record', 'finish', 'unmap', 'submit'],\n  mappedAtCreation: false,\n  _shouldError: false\n},\n{\n  order: ['map', 'record', 'finish', 'submit', 'unmap'],\n  mappedAtCreation: false,\n  _shouldError: true\n},\n{\n  order: ['record', 'map', 'finish', 'submit', 'unmap'],\n  mappedAtCreation: false,\n  _shouldError: true\n},\n{\n  order: ['record', 'finish', 'map', 'submit', 'unmap'],\n  mappedAtCreation: false,\n  _shouldError: true\n},\n{ order: ['record', 'unmap', 'finish', 'submit'], mappedAtCreation: true, _shouldError: false },\n{ order: ['record', 'finish', 'unmap', 'submit'], mappedAtCreation: true, _shouldError: false },\n{ order: ['record', 'finish', 'submit', 'unmap'], mappedAtCreation: true, _shouldError: true }]\n).\nfn(async (t) => {\n  const { order, mappedAtCreation, _shouldError: shouldError } = t.params;\n\n  const buffer = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\n    mappedAtCreation\n  });\n\n  const targetBuffer = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.COPY_DST\n  });\n\n  const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  let commandBuffer;\n\n  const steps = {\n    record: () => {\n      commandEncoder.copyBufferToBuffer(buffer, 0, targetBuffer, 0, 4);\n    },\n    map: async () => {\n      await globalThis._TRAMPOLINE_(\"mapAsync\", buffer, buffer.mapAsync, [GPUMapMode.WRITE], () => buffer.mapAsync(GPUMapMode.WRITE));\n    },\n    unmap: () => {\n      buffer.unmap();\n    },\n    finish: () => {\n      commandBuffer = commandEncoder.finish();\n    },\n    submit: () => {\n      t.expectValidationError(() => {\n        globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[commandBuffer]], () => t.queue.submit([commandBuffer]));\n      }, shouldError);\n    }\n  };\n\n  for (const op of order) {\n    await steps[op]();\n  }\n});"],"mappings":"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","ignoreList":[]}