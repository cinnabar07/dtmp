{"version":3,"file":"non_filterable_texture.spec.js","names":["description","makeTestGroup","keysOf","ValidationTest","kNonFilterableCaseInfo","sint","type","component","uint","float","depth","kNonFilterableCases","g","test","desc","params","u","combine","beforeAllSubcases","t","skipIfTextureViewDimensionNotSupported","viewDimension","fn","device","pipeline","async","sampleType","sameGroup","coord","startsWith","dimensionSuffix","replace","textureType","layer","endsWith","groupNdx","module","createShaderModule","code","bindGroup0LayoutEntries","binding","visibility","GPUShaderStage","COMPUTE","FRAGMENT","texture","multisampled","samplerBGLEntry","sampler","push","bindGroupLayout0","createBindGroupLayout","entries","pipelineLayoutDesc","bindGroupLayouts","bindGroupLayout1","layout","createPipelineLayout","success","doCreateComputePipelineTest","compute","doCreateRenderPipelineTest","vertex","fragment","targets","format"],"sources":["../../../../src/webgpu/api/validation/non_filterable_texture.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests that non-filterable textures used with filtering samplers generate a validation error.\n`;import { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { keysOf } from '../../../common/util/data_tables.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nconst kNonFilterableCaseInfo = {\n  sint: { type: 'i32', component: '0,' },\n  uint: { type: 'u32', component: '0,' },\n  float: { type: 'f32', component: '0,' }, // no error for f32\n  'unfilterable-float': { type: 'f32', component: '0,' }, // no error for f32\n  depth: { type: 'depth', component: '' }\n};\nconst kNonFilterableCases = keysOf(kNonFilterableCaseInfo);\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('non_filterable_texture_with_filtering_sampler').\ndesc(\n  'test that createXXXPipeline generates a validation error if a depth/u32/i32 texture binding is used with a filtering sampler binding'\n).\nparams((u) =>\nu.\ncombine('pipeline', ['compute', 'render']).\ncombine('async', [true, false]).\ncombine('sampleType', kNonFilterableCases).\ncombine('viewDimension', ['2d', '2d-array', 'cube', 'cube-array']).\ncombine('sameGroup', [true, false])\n).\nbeforeAllSubcases((t) => t.skipIfTextureViewDimensionNotSupported(t.params.viewDimension)).\nfn((t) => {\n  const { device } = t;\n  const { pipeline, async, sampleType, viewDimension, sameGroup } = t.params;\n  const { type, component } = kNonFilterableCaseInfo[sampleType];\n\n  const coord = viewDimension.startsWith('2d') ? 'vec2f(0)' : 'vec3f(0)';\n  const dimensionSuffix = viewDimension.replace('-', '_');\n  const textureType =\n  type === 'depth' ? `texture_depth_${dimensionSuffix}` : `texture_${dimensionSuffix}<${type}>`;\n  const layer = viewDimension.endsWith('-array') ? ', 0' : '';\n\n  const groupNdx = sameGroup ? 0 : 1;\n\n  const module = device.createShaderModule({\n    code: `\n      @group(0) @binding(0) var t: ${textureType};\n      @group(${groupNdx}) @binding(1) var s: sampler;\n\n      fn test() {\n        _ = textureGather(${component} t, s, ${coord}${layer});\n      }\n\n      @compute @workgroup_size(1) fn cs() {\n        test();\n      }\n\n      @vertex fn vs() -> @builtin(position) vec4f {\n        return vec4f(0);\n      }\n\n      @fragment fn fs() -> @location(0) vec4f {\n        test();\n        return vec4f(0);\n      }\n      `\n  });\n\n  const bindGroup0LayoutEntries = [\n  {\n    binding: 0,\n    visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT,\n    texture: {\n      sampleType,\n      viewDimension,\n      multisampled: false\n    }\n  }];\n\n\n  const samplerBGLEntry = {\n    binding: 1,\n    visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT,\n    sampler: {\n      type: 'filtering'\n    }\n  };\n\n  if (sameGroup) {\n    bindGroup0LayoutEntries.push(samplerBGLEntry);\n  }\n\n  const bindGroupLayout0 = device.createBindGroupLayout({\n    entries: bindGroup0LayoutEntries\n  });\n\n  const pipelineLayoutDesc = {\n    bindGroupLayouts: [bindGroupLayout0]\n  };\n\n  if (!sameGroup) {\n    const bindGroupLayout1 = device.createBindGroupLayout({\n      entries: [samplerBGLEntry]\n    });\n    pipelineLayoutDesc.bindGroupLayouts.push(bindGroupLayout1);\n  }\n\n  const layout = device.createPipelineLayout(pipelineLayoutDesc);\n\n  const success = sampleType === 'float';\n\n  if (pipeline === 'compute') {\n    t.doCreateComputePipelineTest(async, success, {\n      layout,\n      compute: { module }\n    });\n  } else {\n    t.doCreateRenderPipelineTest(async, success, {\n      layout,\n      vertex: { module },\n      fragment: { module, targets: [{ format: 'rgba8unorm' }] }\n    });\n  }\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,yCAAyC,CACzE,SAASC,MAAM,QAAQ,qCAAqC;AAE5D,SAASC,cAAc,QAAQ,sBAAsB;;AAErD,MAAMC,sBAAsB,GAAG;EAC7BC,IAAI,EAAE,EAAEC,IAAI,EAAE,KAAK,EAAEC,SAAS,EAAE,IAAI,CAAC,CAAC;EACtCC,IAAI,EAAE,EAAEF,IAAI,EAAE,KAAK,EAAEC,SAAS,EAAE,IAAI,CAAC,CAAC;EACtCE,KAAK,EAAE,EAAEH,IAAI,EAAE,KAAK,EAAEC,SAAS,EAAE,IAAI,CAAC,CAAC,EAAE;EACzC,oBAAoB,EAAE,EAAED,IAAI,EAAE,KAAK,EAAEC,SAAS,EAAE,IAAI,CAAC,CAAC,EAAE;EACxDG,KAAK,EAAE,EAAEJ,IAAI,EAAE,OAAO,EAAEC,SAAS,EAAE,EAAE,CAAC;AACxC,CAAC;AACD,MAAMI,mBAAmB,GAAGT,MAAM,CAACE,sBAAsB,CAAC;;AAE1D,OAAO,MAAMQ,CAAC,GAAGX,aAAa,CAACE,cAAc,CAAC;;AAE9CS,CAAC,CAACC,IAAI,CAAC,+CAA+C,CAAC;AACvDC,IAAI;EACF;AACF,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC1CA,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC/BA,OAAO,CAAC,YAAY,EAAEN,mBAAmB,CAAC;AAC1CM,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;AAClEA,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AAClC,CAAC;AACDC,iBAAiB,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,sCAAsC,CAACD,CAAC,CAACJ,MAAM,CAACM,aAAa,CAAC,CAAC;AAC1FC,EAAE,CAAC,CAACH,CAAC,KAAK;EACR,MAAM,EAAEI,MAAM,CAAC,CAAC,GAAGJ,CAAC;EACpB,MAAM,EAAEK,QAAQ,EAAEC,KAAK,EAAEC,UAAU,EAAEL,aAAa,EAAEM,SAAS,CAAC,CAAC,GAAGR,CAAC,CAACJ,MAAM;EAC1E,MAAM,EAAET,IAAI,EAAEC,SAAS,CAAC,CAAC,GAAGH,sBAAsB,CAACsB,UAAU,CAAC;;EAE9D,MAAME,KAAK,GAAGP,aAAa,CAACQ,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU;EACtE,MAAMC,eAAe,GAAGT,aAAa,CAACU,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EACvD,MAAMC,WAAW;EACjB1B,IAAI,KAAK,OAAO,GAAG,iBAAiBwB,eAAe,EAAE,GAAG,WAAWA,eAAe,IAAIxB,IAAI,GAAG;EAC7F,MAAM2B,KAAK,GAAGZ,aAAa,CAACa,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,EAAE;;EAE3D,MAAMC,QAAQ,GAAGR,SAAS,GAAG,CAAC,GAAG,CAAC;;EAElC,MAAMS,MAAM,GAAGb,MAAM,CAACc,kBAAkB,CAAC;IACvCC,IAAI,EAAE;AACV,qCAAqCN,WAAW;AAChD,eAAeG,QAAQ;AACvB;AACA;AACA,4BAA4B5B,SAAS,UAAUqB,KAAK,GAAGK,KAAK;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,CAAC;;EAEF,MAAMM,uBAAuB,GAAG;EAChC;IACEC,OAAO,EAAE,CAAC;IACVC,UAAU,EAAEC,cAAc,CAACC,OAAO,GAAGD,cAAc,CAACE,QAAQ;IAC5DC,OAAO,EAAE;MACPnB,UAAU;MACVL,aAAa;MACbyB,YAAY,EAAE;IAChB;EACF,CAAC,CAAC;;;EAGF,MAAMC,eAAe,GAAG;IACtBP,OAAO,EAAE,CAAC;IACVC,UAAU,EAAEC,cAAc,CAACC,OAAO,GAAGD,cAAc,CAACE,QAAQ;IAC5DI,OAAO,EAAE;MACP1C,IAAI,EAAE;IACR;EACF,CAAC;;EAED,IAAIqB,SAAS,EAAE;IACbY,uBAAuB,CAACU,IAAI,CAACF,eAAe,CAAC;EAC/C;;EAEA,MAAMG,gBAAgB,GAAG3B,MAAM,CAAC4B,qBAAqB,CAAC;IACpDC,OAAO,EAAEb;EACX,CAAC,CAAC;;EAEF,MAAMc,kBAAkB,GAAG;IACzBC,gBAAgB,EAAE,CAACJ,gBAAgB;EACrC,CAAC;;EAED,IAAI,CAACvB,SAAS,EAAE;IACd,MAAM4B,gBAAgB,GAAGhC,MAAM,CAAC4B,qBAAqB,CAAC;MACpDC,OAAO,EAAE,CAACL,eAAe;IAC3B,CAAC,CAAC;IACFM,kBAAkB,CAACC,gBAAgB,CAACL,IAAI,CAACM,gBAAgB,CAAC;EAC5D;;EAEA,MAAMC,MAAM,GAAGjC,MAAM,CAACkC,oBAAoB,CAACJ,kBAAkB,CAAC;;EAE9D,MAAMK,OAAO,GAAGhC,UAAU,KAAK,OAAO;;EAEtC,IAAIF,QAAQ,KAAK,SAAS,EAAE;IAC1BL,CAAC,CAACwC,2BAA2B,CAAClC,KAAK,EAAEiC,OAAO,EAAE;MAC5CF,MAAM;MACNI,OAAO,EAAE,EAAExB,MAAM,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,MAAM;IACLjB,CAAC,CAAC0C,0BAA0B,CAACpC,KAAK,EAAEiC,OAAO,EAAE;MAC3CF,MAAM;MACNM,MAAM,EAAE,EAAE1B,MAAM,CAAC,CAAC;MAClB2B,QAAQ,EAAE,EAAE3B,MAAM,EAAE4B,OAAO,EAAE,CAAC,EAAEC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC","ignoreList":[]}