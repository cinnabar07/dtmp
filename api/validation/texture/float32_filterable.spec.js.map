{"version":3,"file":"float32_filterable.spec.js","names":["description","makeTestGroup","kTextureSampleTypes","ValidationTest","g","kFloat32Formats","test","desc","params","u","combine","beginSubcases","beforeAllSubcases","t","enabled","selectDeviceOrSkipTestCase","fn","format","sampleType","layout","device","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","FRAGMENT","texture","textureDesc","size","width","height","usage","GPUTextureUsage","TEXTURE_BINDING","shouldError","expectValidationError","createBindGroup","resource","createTextureTracked","createView"],"sources":["../../../../../src/webgpu/api/validation/texture/float32_filterable.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests for capabilities added by float32-filterable flag.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kTextureSampleTypes } from '../../../capability_info.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\nconst kFloat32Formats = ['r32float', 'rg32float', 'rgba32float'];\n\ng.test('create_bind_group').\ndesc(\n  `\nTest that it is valid to bind a float32 texture format to a 'float' sampled texture iff\nfloat32-filterable is enabled.\n`\n).\nparams((u) =>\nu.\ncombine('enabled', [true, false]).\nbeginSubcases().\ncombine('format', kFloat32Formats).\ncombine('sampleType', kTextureSampleTypes)\n).\nbeforeAllSubcases((t) => {\n  if (t.params.enabled) {\n    t.selectDeviceOrSkipTestCase('float32-filterable');\n  }\n}).\nfn((t) => {\n  const { enabled, format, sampleType } = t.params;\n  const layout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      texture: { sampleType }\n    }]\n\n  });\n  const textureDesc = {\n    size: { width: 4, height: 4 },\n    format,\n    usage: GPUTextureUsage.TEXTURE_BINDING\n  };\n  const shouldError = !(\n  enabled && sampleType === 'float' ||\n  sampleType === 'unfilterable-float');\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: t.createTextureTracked(textureDesc).createView() }],\n      layout\n    });\n  }, shouldError);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,4CAA4C,CAC5E,SAASC,mBAAmB,QAAQ,6BAA6B,CACjE,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,cAAc,CAAC;;AAE9C,MAAME,eAAe,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,CAAC;;AAEhED,CAAC,CAACE,IAAI,CAAC,mBAAmB,CAAC;AAC3BC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACjCC,aAAa,CAAC,CAAC;AACfD,OAAO,CAAC,QAAQ,EAAEL,eAAe,CAAC;AAClCK,OAAO,CAAC,YAAY,EAAER,mBAAmB;AACzC,CAAC;AACDU,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvB,IAAIA,CAAC,CAACL,MAAM,CAACM,OAAO,EAAE;IACpBD,CAAC,CAACE,0BAA0B,CAAC,oBAAoB,CAAC;EACpD;AACF,CAAC,CAAC;AACFC,EAAE,CAAC,CAACH,CAAC,KAAK;EACR,MAAM,EAAEC,OAAO,EAAEG,MAAM,EAAEC,UAAU,CAAC,CAAC,GAAGL,CAAC,CAACL,MAAM;EAChD,MAAMW,MAAM,GAAGN,CAAC,CAACO,MAAM,CAACC,qBAAqB,CAAC;IAC5CC,OAAO,EAAE;IACT;MACEC,OAAO,EAAE,CAAC;MACVC,UAAU,EAAEC,cAAc,CAACC,QAAQ;MACnCC,OAAO,EAAE,EAAET,UAAU,CAAC;IACxB,CAAC;;EAEH,CAAC,CAAC;EACF,MAAMU,WAAW,GAAG;IAClBC,IAAI,EAAE,EAAEC,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC7Bd,MAAM;IACNe,KAAK,EAAEC,eAAe,CAACC;EACzB,CAAC;EACD,MAAMC,WAAW,GAAG;EACpBrB,OAAO,IAAII,UAAU,KAAK,OAAO;EACjCA,UAAU,KAAK,oBAAoB,CAAC;;EAEpCL,CAAC,CAACuB,qBAAqB,CAAC,MAAM;IAC5BvB,CAAC,CAACO,MAAM,CAACiB,eAAe,CAAC;MACvBf,OAAO,EAAE,CAAC,EAAEC,OAAO,EAAE,CAAC,EAAEe,QAAQ,EAAEzB,CAAC,CAAC0B,oBAAoB,CAACX,WAAW,CAAC,CAACY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;MACrFrB;IACF,CAAC,CAAC;EACJ,CAAC,EAAEgB,WAAW,CAAC;AACjB,CAAC,CAAC","ignoreList":[]}