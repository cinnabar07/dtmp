{"version":3,"file":"minUniformBufferOffsetAlignment.spec.js","names":["GPUConst","isPowerOfTwo","kMinimumLimitBaseParams","makeLimitTestGroup","getDeviceLimitToRequest","limitValueTest","defaultLimit","minimumLimit","Math","log2","min","getTestValue","testValueName","requestedLimit","getDeviceLimitToRequestAndValueToTest","maximumLimit","testValue","limit","g","description","test","desc","params","fn","t","limitTest","adapterLimit","testDeviceWithSpecificLimits","device","shouldError","buffer","createBufferTracked","size","usage","GPUBufferUsage","UNIFORM","layout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","expectValidationError","createBindGroup","resource","offset","ShaderStage","type","hasDynamicOffset","bindGroup","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setBindGroup","end","finish","destroy","expect"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/minUniformBufferOffsetAlignment.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { GPUConst } from '../../../../constants.js';import { isPowerOfTwo } from '../../../../util/math.js';\nimport {\n  kMinimumLimitBaseParams,\n  makeLimitTestGroup } from\n\n\n'./limit_utils.js';\n\nfunction getDeviceLimitToRequest(\nlimitValueTest,\ndefaultLimit,\nminimumLimit)\n{\n  switch (limitValueTest) {\n    case 'atDefault':\n      return defaultLimit;\n    case 'overDefault':\n      return 2 ** (Math.log2(defaultLimit) + 1);\n    case 'betweenDefaultAndMinimum':\n      return Math.min(\n        minimumLimit,\n        2 ** ((Math.log2(defaultLimit) + Math.log2(minimumLimit)) / 2 | 0)\n      );\n    case 'atMinimum':\n      return minimumLimit;\n    case 'underMinimum':\n      return 2 ** (Math.log2(minimumLimit) - 1);\n  }\n}\n\nfunction getTestValue(testValueName, requestedLimit) {\n  switch (testValueName) {\n    case 'atLimit':\n      return requestedLimit;\n    case 'underLimit':\n      return 2 ** (Math.log2(requestedLimit) - 1);\n  }\n}\n\nfunction getDeviceLimitToRequestAndValueToTest(\nlimitValueTest,\ntestValueName,\ndefaultLimit,\nmaximumLimit)\n{\n  const requestedLimit = getDeviceLimitToRequest(limitValueTest, defaultLimit, maximumLimit);\n  return {\n    requestedLimit,\n    testValue: getTestValue(testValueName, requestedLimit)\n  };\n}\n\nconst limit = 'minUniformBufferOffsetAlignment';\nexport const { g, description } = makeLimitTestGroup(limit);\n\ng.test('createBindGroup,at_over').\ndesc(`Test using createBindGroup at and over ${limit} limit`).\nparams(kMinimumLimitBaseParams).\nfn(async (t) => {\n  const { limitTest, testValueName } = t.params;\n  // note: LimitTest.maximum is the adapter.limits[limit] value\n  const { defaultLimit, adapterLimit: minimumLimit } = t;\n  const { requestedLimit, testValue } = getDeviceLimitToRequestAndValueToTest(\n    limitTest,\n    testValueName,\n    defaultLimit,\n    minimumLimit\n  );\n\n  await t.testDeviceWithSpecificLimits(\n    requestedLimit,\n    testValue,\n    async ({ device, testValue, shouldError }) => {\n      const buffer = t.createBufferTracked({\n        size: testValue * 2,\n        usage: GPUBufferUsage.UNIFORM\n      });\n\n      const layout = device.createBindGroupLayout({\n        entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: {}\n        }]\n\n      });\n\n      await t.expectValidationError(() => {\n        device.createBindGroup({\n          layout,\n          entries: [\n          {\n            binding: 0,\n            resource: {\n              buffer,\n              offset: testValue\n            }\n          }]\n\n        });\n      }, shouldError);\n    }\n  );\n});\n\ng.test('setBindGroup,at_over').\ndesc(`Test using setBindGroup at and over ${limit} limit`).\nparams(kMinimumLimitBaseParams).\nfn(async (t) => {\n  const { limitTest, testValueName } = t.params;\n  // note: LimitTest.maximum is the adapter.limits[limit] value\n  const { defaultLimit, adapterLimit: minimumLimit } = t;\n  const { requestedLimit, testValue } = getDeviceLimitToRequestAndValueToTest(\n    limitTest,\n    testValueName,\n    defaultLimit,\n    minimumLimit\n  );\n\n  await t.testDeviceWithSpecificLimits(\n    requestedLimit,\n    testValue,\n    async ({ device, testValue, shouldError }) => {\n      const buffer = t.createBufferTracked({\n        size: testValue * 2,\n        usage: GPUBufferUsage.UNIFORM\n      });\n\n      const layout = device.createBindGroupLayout({\n        entries: [\n        {\n          binding: 0,\n          visibility: GPUConst.ShaderStage.COMPUTE,\n          buffer: {\n            type: 'uniform',\n            hasDynamicOffset: true\n          }\n        }]\n\n      });\n\n      const bindGroup = device.createBindGroup({\n        layout,\n        entries: [\n        {\n          binding: 0,\n          resource: {\n            buffer,\n            size: testValue / 2\n          }\n        }]\n\n      });\n\n      const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", device, device.createCommandEncoder, [], () => device.createCommandEncoder());\n      const pass = encoder.beginComputePass();\n      pass.setBindGroup(0, bindGroup, [testValue]);\n      pass.end();\n\n      await t.expectValidationError(() => {\n        encoder.finish();\n      }, shouldError);\n\n      globalThis._TRAMPOLINE_(\"destroy\", buffer, buffer.destroy, [], () => buffer.destroy());\n    }\n  );\n});\n\ng.test('validate,powerOf2').\ndesc('Verify that ${limit} is power of 2').\nfn((t) => {\n  t.expect(isPowerOfTwo(t.defaultLimit));\n  t.expect(isPowerOfTwo(t.adapterLimit));\n});\n\ng.test('validate,greaterThanOrEqualTo32').\ndesc('Verify that ${limit} is >= 32').\nfn((t) => {\n  t.expect(t.defaultLimit >= 32);\n  t.expect(t.adapterLimit >= 32);\n});"],"mappings":"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","ignoreList":[]}