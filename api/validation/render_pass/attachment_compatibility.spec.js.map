{"version":3,"file":"attachment_compatibility.spec.js","names":["description","makeTestGroup","range","kMaxColorAttachmentsToTest","kTextureSampleCounts","kRegularTextureFormats","kSizedDepthStencilFormats","kUnsizedDepthStencilFormats","kTextureFormatInfo","filterFormatsByFeature","getFeaturesForFormats","ValidationTest","kColorAttachmentCounts","i","kColorAttachments","map","count","result","Array","fill","concat","r","cases","j","push","flat","kDepthStencilAttachmentFormats","undefined","kFeaturesForDepthStencilAttachmentFormats","F","createAttachmentTextureView","format","sampleCount","createTextureTracked","size","usage","GPUTextureUsage","RENDER_ATTACHMENT","createView","createColorAttachment","view","clearValue","loadOp","storeOp","createDepthAttachment","attachment","depth","depthClearValue","depthLoadOp","depthStoreOp","stencil","stencilClearValue","stencilLoadOp","stencilStoreOp","createRenderPipeline","targets","depthStencil","cullMode","device","layout","vertex","module","createShaderModule","code","entryPoint","fragment","primitive","topology","multisample","g","kColorAttachmentFormats","filter","colorRender","test","desc","paramsSubcasesOnly","u","combine","fn","t","passFormat","bundleFormat","params","skipIfTextureFormatNotSupported","bundleEncoder","createRenderBundleEncoder","colorFormats","bundle","finish","encoder","validateFinishAndSubmit","createEncoder","pass","beginRenderPass","colorAttachments","executeBundles","end","passCount","bundleCount","maxColorAttachments","limits","skipIf","beginSubcases","p","attachmentCount","passAttachments","length","bundleAttachments","every","v","expand","passFeature","bundleFeature","beforeAllSubcases","selectDeviceOrSkipTestCase","depthStencilFormat","depthStencilAttachment","renderSampleCount","bundleSampleCount","selectMismatchedDeviceOrSkipTestCase","mismatched","sourceDevice","mismatchedDevice","encoderType","encoderFormat","pipelineFormat","pipeline","writeMask","attachmentInfo","setPipeline","encoderCount","pipelineCount","encoderAttachments","pipelineAttachments","colorTargets","encoderFormatFeature","pipelineFormatFeature","depthCompare","depthWriteEnabled","kStencilFaceStates","failOp","depthFailOp","passOp","depthStencilInfo","stencilFront","stencilBack","selectDeviceForTextureFormatOrSkipTestCase","depthReadOnly","stencilReadOnly","stencilWriteMask","writesDepth","writesStencil","isValid","attachmentType","encoderSampleCount","pipelineSampleCount"],"sources":["../../../../../src/webgpu/api/validation/render_pass/attachment_compatibility.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation for attachment compatibility between render passes, bundles, and pipelines\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { kMaxColorAttachmentsToTest, kTextureSampleCounts } from '../../../capability_info.js';\nimport {\n  kRegularTextureFormats,\n  kSizedDepthStencilFormats,\n  kUnsizedDepthStencilFormats,\n  kTextureFormatInfo,\n  filterFormatsByFeature,\n  getFeaturesForFormats } from\n'../../../format_info.js';\nimport { ValidationTest } from '../validation_test.js';\n\nconst kColorAttachmentCounts = range(kMaxColorAttachmentsToTest, (i) => i + 1);\nconst kColorAttachments = kColorAttachmentCounts.\nmap((count) => {\n  // generate cases with 0..1 null attachments at different location\n  // e.g. count == 2\n  // [\n  //    [1, 1],\n  //    [0, 1],\n  //    [1, 0],\n  // ]\n  // 0 (false) means null attachment, 1 (true) means non-null attachment, at the slot\n\n  // Special cases: we need at least a color attachment, when we don't have depth stencil attachment\n  if (count === 1) {\n    return [[1]];\n  }\n  if (count === 2) {\n    return [\n    [1, 1],\n    [0, 1],\n    [1, 0]];\n\n  }\n\n  // [1, 1, ..., 1]: all color attachment are used\n  let result = [new Array(count).fill(true)];\n\n  // [1, 0, 1, ..., 1]: generate cases with one null attachment at different locations\n  result = result.concat(\n    range(count, (i) => {\n      const r = new Array(count).fill(true);\n      r[i] = false;\n      return r;\n    })\n  );\n\n  // [1, 0, 1, ..., 0, 1]: generate cases with two null attachments at different locations\n  // To reduce test run time, limit the attachment count to <= 4\n  if (count <= 4) {\n    result = result.concat(\n      range(count - 1, (i) => {\n        const cases = [];\n        for (let j = i + 1; j < count; j++) {\n          const r = new Array(count).fill(true);\n          r[i] = false;\n          r[j] = false;\n          cases.push(r);\n        }\n        return cases;\n      }).flat()\n    );\n  }\n\n  return result;\n}).\nflat();\n\nconst kDepthStencilAttachmentFormats = [\nundefined,\n...kSizedDepthStencilFormats,\n...kUnsizedDepthStencilFormats];\n\n\nconst kFeaturesForDepthStencilAttachmentFormats = getFeaturesForFormats([\n...kSizedDepthStencilFormats,\n...kUnsizedDepthStencilFormats]\n);\n\nclass F extends ValidationTest {\n  createAttachmentTextureView(format, sampleCount) {\n    return this.createTextureTracked({\n      // Size matching the \"arbitrary\" size used by ValidationTest helpers.\n      size: [16, 16, 1],\n      format,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      sampleCount\n    }).createView();\n  }\n\n  createColorAttachment(\n  format,\n  sampleCount)\n  {\n    return format === null ?\n    null :\n    {\n      view: this.createAttachmentTextureView(format, sampleCount),\n      clearValue: [0, 0, 0, 0],\n      loadOp: 'clear',\n      storeOp: 'store'\n    };\n  }\n\n  createDepthAttachment(\n  format,\n  sampleCount)\n  {\n    const attachment = {\n      view: this.createAttachmentTextureView(format, sampleCount)\n    };\n    if (kTextureFormatInfo[format].depth) {\n      attachment.depthClearValue = 0;\n      attachment.depthLoadOp = 'clear';\n      attachment.depthStoreOp = 'discard';\n    }\n    if (kTextureFormatInfo[format].stencil) {\n      attachment.stencilClearValue = 1;\n      attachment.stencilLoadOp = 'clear';\n      attachment.stencilStoreOp = 'discard';\n    }\n    return attachment;\n  }\n\n  createRenderPipeline(\n  targets,\n  depthStencil,\n  sampleCount,\n  cullMode)\n  {\n    return this.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: this.device.createShaderModule({\n          code: `\n            @vertex fn main() -> @builtin(position) vec4<f32> {\n              return vec4<f32>(0.0, 0.0, 0.0, 0.0);\n            }`\n        }),\n        entryPoint: 'main'\n      },\n      fragment: {\n        module: this.device.createShaderModule({\n          code: '@fragment fn main() {}'\n        }),\n        entryPoint: 'main',\n        targets\n      },\n      primitive: { topology: 'triangle-list', cullMode },\n      depthStencil,\n      multisample: { count: sampleCount }\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\nconst kColorAttachmentFormats = kRegularTextureFormats.filter(\n  (format) => !!kTextureFormatInfo[format].colorRender\n);\n\ng.test('render_pass_and_bundle,color_format').\ndesc('Test that color attachment formats in render passes and bundles must match.').\nparamsSubcasesOnly((u) =>\nu //\n.combine('passFormat', kColorAttachmentFormats).\ncombine('bundleFormat', kColorAttachmentFormats)\n).\nfn((t) => {\n  const { passFormat, bundleFormat } = t.params;\n\n  t.skipIfTextureFormatNotSupported(passFormat, bundleFormat);\n\n  const bundleEncoder = t.device.createRenderBundleEncoder({\n    colorFormats: [bundleFormat]\n  });\n  const bundle = bundleEncoder.finish();\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder('non-pass');\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [t.createColorAttachment(passFormat)]\n  });\n  pass.executeBundles([bundle]);\n  pass.end();\n  validateFinishAndSubmit(passFormat === bundleFormat, true);\n});\n\ng.test('render_pass_and_bundle,color_count').\ndesc(\n  `\n  Test that the number of color attachments in render passes and bundles must match.\n  `\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('passCount', kColorAttachmentCounts).\ncombine('bundleCount', kColorAttachmentCounts)\n).\nfn((t) => {\n  const { passCount, bundleCount } = t.params;\n\n  const { maxColorAttachments } = t.device.limits;\n  t.skipIf(\n    passCount > maxColorAttachments,\n    `passCount: ${passCount} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n  t.skipIf(\n    bundleCount > maxColorAttachments,\n    `bundleCount: ${bundleCount} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n\n  const bundleEncoder = t.device.createRenderBundleEncoder({\n    colorFormats: range(bundleCount, () => 'rgba8uint')\n  });\n  const bundle = bundleEncoder.finish();\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder('non-pass');\n  const pass = encoder.beginRenderPass({\n    colorAttachments: range(passCount, () => t.createColorAttachment('rgba8uint'))\n  });\n  pass.executeBundles([bundle]);\n  pass.end();\n  validateFinishAndSubmit(passCount === bundleCount, true);\n});\n\ng.test('render_pass_and_bundle,color_sparse').\ndesc(\n  `\n  Test that each of color attachments in render passes and bundles must match.\n  `\n).\nparams((u) =>\nu //\n// introduce attachmentCount to make it easier to split the test\n.combine('attachmentCount', kColorAttachmentCounts).\nbeginSubcases().\ncombine('passAttachments', kColorAttachments).\ncombine('bundleAttachments', kColorAttachments).\nfilter(\n  (p) =>\n  p.attachmentCount === p.passAttachments.length &&\n  p.attachmentCount === p.bundleAttachments.length\n)\n).\nfn((t) => {\n  const { passAttachments, bundleAttachments } = t.params;\n\n  const { maxColorAttachments } = t.device.limits;\n  t.skipIf(\n    passAttachments.length > maxColorAttachments,\n    `num passAttachments: ${passAttachments.length} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n  t.skipIf(\n    bundleAttachments.length > maxColorAttachments,\n    `num bundleAttachments: ${bundleAttachments.length} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n\n  const colorFormats = bundleAttachments.map((i) => i ? 'rgba8uint' : null);\n  const bundleEncoder = t.device.createRenderBundleEncoder({\n    colorFormats\n  });\n  const bundle = bundleEncoder.finish();\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder('non-pass');\n  const colorAttachments = passAttachments.map((i) =>\n  t.createColorAttachment(i ? 'rgba8uint' : null)\n  );\n  const pass = encoder.beginRenderPass({\n    colorAttachments\n  });\n  pass.executeBundles([bundle]);\n  pass.end();\n  validateFinishAndSubmit(\n    passAttachments.every((v, i) => v === bundleAttachments[i]),\n    true\n  );\n});\n\ng.test('render_pass_and_bundle,depth_format').\ndesc('Test that the depth attachment format in render passes and bundles must match.').\nparams((u) =>\nu //\n.combine('passFeature', kFeaturesForDepthStencilAttachmentFormats).\ncombine('bundleFeature', kFeaturesForDepthStencilAttachmentFormats).\nbeginSubcases().\nexpand('passFormat', ({ passFeature }) =>\nfilterFormatsByFeature(passFeature, kDepthStencilAttachmentFormats)\n).\nexpand('bundleFormat', ({ bundleFeature }) =>\nfilterFormatsByFeature(bundleFeature, kDepthStencilAttachmentFormats)\n)\n).\nbeforeAllSubcases((t) => {\n  const { passFeature, bundleFeature } = t.params;\n  t.selectDeviceOrSkipTestCase([passFeature, bundleFeature]);\n}).\nfn((t) => {\n  const { passFormat, bundleFormat } = t.params;\n\n  const bundleEncoder = t.device.createRenderBundleEncoder({\n    colorFormats: ['rgba8unorm'],\n    depthStencilFormat: bundleFormat\n  });\n  const bundle = bundleEncoder.finish();\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder('non-pass');\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [t.createColorAttachment('rgba8unorm')],\n    depthStencilAttachment:\n    passFormat !== undefined ? t.createDepthAttachment(passFormat) : undefined\n  });\n  pass.executeBundles([bundle]);\n  pass.end();\n  validateFinishAndSubmit(passFormat === bundleFormat, true);\n});\n\ng.test('render_pass_and_bundle,sample_count').\ndesc('Test that the sample count in render passes and bundles must match.').\nparamsSubcasesOnly((u) =>\nu //\n.combine('renderSampleCount', kTextureSampleCounts).\ncombine('bundleSampleCount', kTextureSampleCounts)\n).\nfn((t) => {\n  const { renderSampleCount, bundleSampleCount } = t.params;\n  const bundleEncoder = t.device.createRenderBundleEncoder({\n    colorFormats: ['rgba8unorm'],\n    sampleCount: bundleSampleCount\n  });\n  const bundle = bundleEncoder.finish();\n  const { encoder, validateFinishAndSubmit } = t.createEncoder('non-pass');\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [t.createColorAttachment('rgba8unorm', renderSampleCount)]\n  });\n  pass.executeBundles([bundle]);\n  pass.end();\n  validateFinishAndSubmit(renderSampleCount === bundleSampleCount, true);\n});\n\ng.test('render_pass_and_bundle,device_mismatch').\ndesc('Test that render passes cannot be called with bundles created from another device.').\nparamsSubcasesOnly((u) => u.combine('mismatched', [true, false])).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { mismatched } = t.params;\n  const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n  const format = 'r16float';\n  const bundleEncoder = sourceDevice.createRenderBundleEncoder({\n    colorFormats: [format]\n  });\n  const bundle = bundleEncoder.finish();\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder('non-pass');\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [t.createColorAttachment(format)]\n  });\n  pass.executeBundles([bundle]);\n  pass.end();\n  validateFinishAndSubmit(!mismatched, true);\n});\n\ng.test('render_pass_or_bundle_and_pipeline,color_format').\ndesc(\n  `\nTest that color attachment formats in render passes or bundles match the pipeline color format.\n`\n).\nparams((u) =>\nu.\ncombine('encoderType', ['render pass', 'render bundle']).\nbeginSubcases().\ncombine('encoderFormat', kColorAttachmentFormats).\ncombine('pipelineFormat', kColorAttachmentFormats)\n).\nfn((t) => {\n  const { encoderType, encoderFormat, pipelineFormat } = t.params;\n\n  t.skipIfTextureFormatNotSupported(encoderFormat, pipelineFormat);\n\n  const pipeline = t.createRenderPipeline([{ format: pipelineFormat, writeMask: 0 }]);\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType, {\n    attachmentInfo: { colorFormats: [encoderFormat] }\n  });\n  encoder.setPipeline(pipeline);\n  validateFinishAndSubmit(encoderFormat === pipelineFormat, true);\n});\n\ng.test('render_pass_or_bundle_and_pipeline,color_count').\ndesc(\n  `\nTest that the number of color attachments in render passes or bundles match the pipeline color\ncount.\n`\n).\nparams((u) =>\nu.\ncombine('encoderType', ['render pass', 'render bundle']).\nbeginSubcases().\ncombine('encoderCount', kColorAttachmentCounts).\ncombine('pipelineCount', kColorAttachmentCounts)\n).\nfn((t) => {\n  const { encoderType, encoderCount, pipelineCount } = t.params;\n\n  const { maxColorAttachments } = t.device.limits;\n  t.skipIf(\n    pipelineCount > maxColorAttachments,\n    `pipelineCount: ${pipelineCount} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n  t.skipIf(\n    encoderCount > maxColorAttachments,\n    `encoderCount: ${encoderCount} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n\n  const pipeline = t.createRenderPipeline(\n    range(pipelineCount, () => ({ format: 'rgba8uint', writeMask: 0 }))\n  );\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType, {\n    attachmentInfo: { colorFormats: range(encoderCount, () => 'rgba8uint') }\n  });\n  encoder.setPipeline(pipeline);\n  validateFinishAndSubmit(encoderCount === pipelineCount, true);\n});\n\ng.test('render_pass_or_bundle_and_pipeline,color_sparse').\ndesc(\n  `\nTest that each of color attachments in render passes or bundles match that of the pipeline.\n`\n).\nparams((u) =>\nu.\ncombine('encoderType', ['render pass', 'render bundle'])\n// introduce attachmentCount to make it easier to split the test\n.combine('attachmentCount', kColorAttachmentCounts).\nbeginSubcases().\ncombine('encoderAttachments', kColorAttachments).\ncombine('pipelineAttachments', kColorAttachments).\nfilter(\n  (p) =>\n  p.attachmentCount === p.encoderAttachments.length &&\n  p.attachmentCount === p.pipelineAttachments.length\n)\n).\nfn((t) => {\n  const { encoderType, encoderAttachments, pipelineAttachments } = t.params;\n  const { maxColorAttachments } = t.device.limits;\n  t.skipIf(\n    encoderAttachments.length > maxColorAttachments,\n    `num encoderAttachments: ${encoderAttachments.length} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n  t.skipIf(\n    pipelineAttachments.length > maxColorAttachments,\n    `num pipelineAttachments: ${pipelineAttachments.length} > maxColorAttachments for device: ${maxColorAttachments}`\n  );\n\n  const colorTargets = pipelineAttachments.map((i) =>\n  i ? { format: 'rgba8uint', writeMask: 0 } : null\n  );\n  const pipeline = t.createRenderPipeline(colorTargets);\n\n  const colorFormats = encoderAttachments.map((i) => i ? 'rgba8uint' : null);\n  const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType, {\n    attachmentInfo: { colorFormats }\n  });\n  encoder.setPipeline(pipeline);\n  validateFinishAndSubmit(\n    encoderAttachments.every((v, i) => v === pipelineAttachments[i]),\n    true\n  );\n});\n\ng.test('render_pass_or_bundle_and_pipeline,depth_format').\ndesc(\n  `\nTest that the depth attachment format in render passes or bundles match the pipeline depth format.\n`\n).\nparams((u) =>\nu.\ncombine('encoderType', ['render pass', 'render bundle']).\ncombine('encoderFormatFeature', kFeaturesForDepthStencilAttachmentFormats).\ncombine('pipelineFormatFeature', kFeaturesForDepthStencilAttachmentFormats).\nbeginSubcases().\nexpand('encoderFormat', ({ encoderFormatFeature }) =>\nfilterFormatsByFeature(encoderFormatFeature, kDepthStencilAttachmentFormats)\n).\nexpand('pipelineFormat', ({ pipelineFormatFeature }) =>\nfilterFormatsByFeature(pipelineFormatFeature, kDepthStencilAttachmentFormats)\n)\n).\nbeforeAllSubcases((t) => {\n  const { encoderFormatFeature, pipelineFormatFeature } = t.params;\n  t.selectDeviceOrSkipTestCase([encoderFormatFeature, pipelineFormatFeature]);\n}).\nfn((t) => {\n  const { encoderType, encoderFormat, pipelineFormat } = t.params;\n\n  const pipeline = t.createRenderPipeline(\n    [{ format: 'rgba8unorm', writeMask: 0 }],\n    pipelineFormat !== undefined ?\n    { format: pipelineFormat, depthCompare: 'always', depthWriteEnabled: false } :\n    undefined\n  );\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType, {\n    attachmentInfo: { colorFormats: ['rgba8unorm'], depthStencilFormat: encoderFormat }\n  });\n  encoder.setPipeline(pipeline);\n  validateFinishAndSubmit(encoderFormat === pipelineFormat, true);\n});\n\nconst kStencilFaceStates = [\n{ failOp: 'keep', depthFailOp: 'keep', passOp: 'keep' },\n{ failOp: 'zero', depthFailOp: 'zero', passOp: 'zero' }];\n\n\ng.test('render_pass_or_bundle_and_pipeline,depth_stencil_read_only_write_state').\ndesc(\n  `\nTest that the depth stencil read only state in render passes or bundles is compatible with the depth stencil write state of the pipeline.\n`\n).\nparams((u) =>\nu.\ncombine('encoderType', ['render pass', 'render bundle']).\ncombine('format', kDepthStencilAttachmentFormats).\nbeginSubcases()\n// pass/bundle state\n.combine('depthReadOnly', [false, true]).\ncombine('stencilReadOnly', [false, true]).\ncombine('stencilFront', kStencilFaceStates).\ncombine('stencilBack', kStencilFaceStates)\n// pipeline state\n.combine('depthWriteEnabled', [false, true]).\ncombine('stencilWriteMask', [0, 0xffffffff]).\ncombine('cullMode', ['none', 'front', 'back']).\nfilter((p) => {\n  if (p.format) {\n    const depthStencilInfo = kTextureFormatInfo[p.format];\n    // If the format has no depth aspect, the depthReadOnly, depthWriteEnabled of the pipeline must not be true\n    // in order to create a valid render pipeline.\n    if (!depthStencilInfo.depth && p.depthWriteEnabled) {\n      return false;\n    }\n    // If the format has no stencil aspect, the stencil state operation must be 'keep'\n    // in order to create a valid render pipeline.\n    if (\n    !depthStencilInfo.stencil && (\n    p.stencilFront.failOp !== 'keep' || p.stencilBack.failOp !== 'keep'))\n    {\n      return false;\n    }\n  }\n  // No depthStencil attachment\n  return true;\n})\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceForTextureFormatOrSkipTestCase(t.params.format);\n}).\nfn((t) => {\n  const {\n    encoderType,\n    format,\n    depthReadOnly,\n    stencilReadOnly,\n    depthWriteEnabled,\n    stencilWriteMask,\n    cullMode,\n    stencilFront,\n    stencilBack\n  } = t.params;\n\n  const pipeline = t.createRenderPipeline(\n    [{ format: 'rgba8unorm', writeMask: 0 }],\n    format === undefined ?\n    undefined :\n    {\n      format,\n      depthWriteEnabled,\n      depthCompare: 'always',\n      stencilWriteMask,\n      stencilFront,\n      stencilBack\n    },\n    1,\n    cullMode\n  );\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType, {\n    attachmentInfo: {\n      colorFormats: ['rgba8unorm'],\n      depthStencilFormat: format,\n      depthReadOnly,\n      stencilReadOnly\n    }\n  });\n  encoder.setPipeline(pipeline);\n\n  let writesDepth = false;\n  let writesStencil = false;\n  if (format) {\n    writesDepth = depthWriteEnabled;\n    if (stencilWriteMask !== 0) {\n      if (\n      cullMode !== 'front' && (\n      stencilFront.passOp !== 'keep' ||\n      stencilFront.depthFailOp !== 'keep' ||\n      stencilFront.failOp !== 'keep'))\n      {\n        writesStencil = true;\n      }\n      if (\n      cullMode !== 'back' && (\n      stencilBack.passOp !== 'keep' ||\n      stencilBack.depthFailOp !== 'keep' ||\n      stencilBack.failOp !== 'keep'))\n      {\n        writesStencil = true;\n      }\n    }\n  }\n\n  let isValid = true;\n  if (writesDepth) {\n    isValid &&= !depthReadOnly;\n  }\n  if (writesStencil) {\n    isValid &&= !stencilReadOnly;\n  }\n\n  validateFinishAndSubmit(isValid, true);\n});\n\ng.test('render_pass_or_bundle_and_pipeline,sample_count').\ndesc(\n  `\nTest that the sample count in render passes or bundles match the pipeline sample count for both color texture and depthstencil texture.\n`\n).\nparams((u) =>\nu.\ncombine('encoderType', ['render pass', 'render bundle']).\ncombine('attachmentType', ['color', 'depthstencil']).\nbeginSubcases().\ncombine('encoderSampleCount', kTextureSampleCounts).\ncombine('pipelineSampleCount', kTextureSampleCounts)\n).\nfn((t) => {\n  const { encoderType, attachmentType, encoderSampleCount, pipelineSampleCount } = t.params;\n\n  const colorFormats = attachmentType === 'color' ? ['rgba8unorm'] : [];\n  const depthStencilFormat =\n  attachmentType === 'depthstencil' ? 'depth24plus-stencil8' : undefined;\n\n  const pipeline = t.createRenderPipeline(\n    colorFormats.map((format) => ({ format, writeMask: 0 })),\n    depthStencilFormat ?\n    { format: depthStencilFormat, depthWriteEnabled: false, depthCompare: 'always' } :\n    undefined,\n    pipelineSampleCount\n  );\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType, {\n    attachmentInfo: { colorFormats, depthStencilFormat, sampleCount: encoderSampleCount }\n  });\n  encoder.setPipeline(pipeline);\n  validateFinishAndSubmit(encoderSampleCount === pipelineSampleCount, true);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,4CAA4C,CAC5E,SAASC,KAAK,QAAQ,iCAAiC,CACvD,SAASC,0BAA0B,EAAEC,oBAAoB,QAAQ,6BAA6B;AAC9F;EACEC,sBAAsB;EACtBC,yBAAyB;EACzBC,2BAA2B;EAC3BC,kBAAkB;EAClBC,sBAAsB;EACtBC,qBAAqB;AACvB,yBAAyB;AACzB,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD,MAAMC,sBAAsB,GAAGV,KAAK,CAACC,0BAA0B,EAAE,CAACU,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;AAC9E,MAAMC,iBAAiB,GAAGF,sBAAsB;AAChDG,GAAG,CAAC,CAACC,KAAK,KAAK;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,IAAIA,KAAK,KAAK,CAAC,EAAE;IACf,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACd;EACA,IAAIA,KAAK,KAAK,CAAC,EAAE;IACf,OAAO;IACP,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;EAET;;EAEA;EACA,IAAIC,MAAM,GAAG,CAAC,IAAIC,KAAK,CAACF,KAAK,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC;;EAE1C;EACAF,MAAM,GAAGA,MAAM,CAACG,MAAM;IACpBlB,KAAK,CAACc,KAAK,EAAE,CAACH,CAAC,KAAK;MAClB,MAAMQ,CAAC,GAAG,IAAIH,KAAK,CAACF,KAAK,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;MACrCE,CAAC,CAACR,CAAC,CAAC,GAAG,KAAK;MACZ,OAAOQ,CAAC;IACV,CAAC;EACH,CAAC;;EAED;EACA;EACA,IAAIL,KAAK,IAAI,CAAC,EAAE;IACdC,MAAM,GAAGA,MAAM,CAACG,MAAM;MACpBlB,KAAK,CAACc,KAAK,GAAG,CAAC,EAAE,CAACH,CAAC,KAAK;QACtB,MAAMS,KAAK,GAAG,EAAE;QAChB,KAAK,IAAIC,CAAC,GAAGV,CAAC,GAAG,CAAC,EAAEU,CAAC,GAAGP,KAAK,EAAEO,CAAC,EAAE,EAAE;UAClC,MAAMF,CAAC,GAAG,IAAIH,KAAK,CAACF,KAAK,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;UACrCE,CAAC,CAACR,CAAC,CAAC,GAAG,KAAK;UACZQ,CAAC,CAACE,CAAC,CAAC,GAAG,KAAK;UACZD,KAAK,CAACE,IAAI,CAACH,CAAC,CAAC;QACf;QACA,OAAOC,KAAK;MACd,CAAC,CAAC,CAACG,IAAI,CAAC;IACV,CAAC;EACH;;EAEA,OAAOR,MAAM;AACf,CAAC,CAAC;AACFQ,IAAI,CAAC,CAAC;;AAEN,MAAMC,8BAA8B,GAAG;AACvCC,SAAS;AACT,GAAGrB,yBAAyB;AAC5B,GAAGC,2BAA2B,CAAC;;;AAG/B,MAAMqB,yCAAyC,GAAGlB,qBAAqB,CAAC;AACxE,GAAGJ,yBAAyB;AAC5B,GAAGC,2BAA2B;AAC9B,CAAC;;AAED,MAAMsB,CAAC,SAASlB,cAAc,CAAC;EAC7BmB,2BAA2BA,CAACC,MAAM,EAAEC,WAAW,EAAE;IAC/C,OAAO,IAAI,CAACC,oBAAoB,CAAC;MAC/B;MACAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACjBH,MAAM;MACNI,KAAK,EAAEC,eAAe,CAACC,iBAAiB;MACxCL;IACF,CAAC,CAAC,CAACM,UAAU,CAAC,CAAC;EACjB;;EAEAC,qBAAqBA;EACrBR,MAAM;EACNC,WAAW;EACX;IACE,OAAOD,MAAM,KAAK,IAAI;IACtB,IAAI;IACJ;MACES,IAAI,EAAE,IAAI,CAACV,2BAA2B,CAACC,MAAM,EAAEC,WAAW,CAAC;MAC3DS,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACxBC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC;EACH;;EAEAC,qBAAqBA;EACrBb,MAAM;EACNC,WAAW;EACX;IACE,MAAMa,UAAU,GAAG;MACjBL,IAAI,EAAE,IAAI,CAACV,2BAA2B,CAACC,MAAM,EAAEC,WAAW;IAC5D,CAAC;IACD,IAAIxB,kBAAkB,CAACuB,MAAM,CAAC,CAACe,KAAK,EAAE;MACpCD,UAAU,CAACE,eAAe,GAAG,CAAC;MAC9BF,UAAU,CAACG,WAAW,GAAG,OAAO;MAChCH,UAAU,CAACI,YAAY,GAAG,SAAS;IACrC;IACA,IAAIzC,kBAAkB,CAACuB,MAAM,CAAC,CAACmB,OAAO,EAAE;MACtCL,UAAU,CAACM,iBAAiB,GAAG,CAAC;MAChCN,UAAU,CAACO,aAAa,GAAG,OAAO;MAClCP,UAAU,CAACQ,cAAc,GAAG,SAAS;IACvC;IACA,OAAOR,UAAU;EACnB;;EAEAS,oBAAoBA;EACpBC,OAAO;EACPC,YAAY;EACZxB,WAAW;EACXyB,QAAQ;EACR;IACE,OAAO,IAAI,CAACC,MAAM,CAACJ,oBAAoB,CAAC;MACtCK,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE;QACNC,MAAM,EAAE,IAAI,CAACH,MAAM,CAACI,kBAAkB,CAAC;UACrCC,IAAI,EAAE;AAChB;AACA;AACA;QACQ,CAAC,CAAC;QACFC,UAAU,EAAE;MACd,CAAC;MACDC,QAAQ,EAAE;QACRJ,MAAM,EAAE,IAAI,CAACH,MAAM,CAACI,kBAAkB,CAAC;UACrCC,IAAI,EAAE;QACR,CAAC,CAAC;QACFC,UAAU,EAAE,MAAM;QAClBT;MACF,CAAC;MACDW,SAAS,EAAE,EAAEC,QAAQ,EAAE,eAAe,EAAEV,QAAQ,CAAC,CAAC;MAClDD,YAAY;MACZY,WAAW,EAAE,EAAEpD,KAAK,EAAEgB,WAAW,CAAC;IACpC,CAAC,CAAC;EACJ;AACF;;AAEA,OAAO,MAAMqC,CAAC,GAAGpE,aAAa,CAAC4B,CAAC,CAAC;;AAEjC,MAAMyC,uBAAuB,GAAGjE,sBAAsB,CAACkE,MAAM;EAC3D,CAACxC,MAAM,KAAK,CAAC,CAACvB,kBAAkB,CAACuB,MAAM,CAAC,CAACyC;AAC3C,CAAC;;AAEDH,CAAC,CAACI,IAAI,CAAC,qCAAqC,CAAC;AAC7CC,IAAI,CAAC,6EAA6E,CAAC;AACnFC,kBAAkB,CAAC,CAACC,CAAC;AACrBA,CAAC,CAAC;AAAA,CACDC,OAAO,CAAC,YAAY,EAAEP,uBAAuB,CAAC;AAC/CO,OAAO,CAAC,cAAc,EAAEP,uBAAuB;AAC/C,CAAC;AACDQ,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAEC,UAAU,EAAEC,YAAY,CAAC,CAAC,GAAGF,CAAC,CAACG,MAAM;;EAE7CH,CAAC,CAACI,+BAA+B,CAACH,UAAU,EAAEC,YAAY,CAAC;;EAE3D,MAAMG,aAAa,GAAGL,CAAC,CAACrB,MAAM,CAAC2B,yBAAyB,CAAC;IACvDC,YAAY,EAAE,CAACL,YAAY;EAC7B,CAAC,CAAC;EACF,MAAMM,MAAM,GAAGH,aAAa,CAACI,MAAM,CAAC,CAAC;;EAErC,MAAM,EAAEC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAAC,UAAU,CAAC;EACxE,MAAMC,IAAI,GAAGH,OAAO,CAACI,eAAe,CAAC;IACnCC,gBAAgB,EAAE,CAACf,CAAC,CAACxC,qBAAqB,CAACyC,UAAU,CAAC;EACxD,CAAC,CAAC;EACFY,IAAI,CAACG,cAAc,CAAC,CAACR,MAAM,CAAC,CAAC;EAC7BK,IAAI,CAACI,GAAG,CAAC,CAAC;EACVN,uBAAuB,CAACV,UAAU,KAAKC,YAAY,EAAE,IAAI,CAAC;AAC5D,CAAC,CAAC;;AAEFZ,CAAC,CAACI,IAAI,CAAC,oCAAoC,CAAC;AAC5CC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDC,kBAAkB,CAAC,CAACC,CAAC;AACrBA,CAAC,CAAC;AAAA,CACDC,OAAO,CAAC,WAAW,EAAEjE,sBAAsB,CAAC;AAC7CiE,OAAO,CAAC,aAAa,EAAEjE,sBAAsB;AAC7C,CAAC;AACDkE,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAEkB,SAAS,EAAEC,WAAW,CAAC,CAAC,GAAGnB,CAAC,CAACG,MAAM;;EAE3C,MAAM,EAAEiB,mBAAmB,CAAC,CAAC,GAAGpB,CAAC,CAACrB,MAAM,CAAC0C,MAAM;EAC/CrB,CAAC,CAACsB,MAAM;IACNJ,SAAS,GAAGE,mBAAmB;IAC/B,cAAcF,SAAS,sCAAsCE,mBAAmB;EAClF,CAAC;EACDpB,CAAC,CAACsB,MAAM;IACNH,WAAW,GAAGC,mBAAmB;IACjC,gBAAgBD,WAAW,sCAAsCC,mBAAmB;EACtF,CAAC;;EAED,MAAMf,aAAa,GAAGL,CAAC,CAACrB,MAAM,CAAC2B,yBAAyB,CAAC;IACvDC,YAAY,EAAEpF,KAAK,CAACgG,WAAW,EAAE,MAAM,WAAW;EACpD,CAAC,CAAC;EACF,MAAMX,MAAM,GAAGH,aAAa,CAACI,MAAM,CAAC,CAAC;;EAErC,MAAM,EAAEC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAAC,UAAU,CAAC;EACxE,MAAMC,IAAI,GAAGH,OAAO,CAACI,eAAe,CAAC;IACnCC,gBAAgB,EAAE5F,KAAK,CAAC+F,SAAS,EAAE,MAAMlB,CAAC,CAACxC,qBAAqB,CAAC,WAAW,CAAC;EAC/E,CAAC,CAAC;EACFqD,IAAI,CAACG,cAAc,CAAC,CAACR,MAAM,CAAC,CAAC;EAC7BK,IAAI,CAACI,GAAG,CAAC,CAAC;EACVN,uBAAuB,CAACO,SAAS,KAAKC,WAAW,EAAE,IAAI,CAAC;AAC1D,CAAC,CAAC;;AAEF7B,CAAC,CAACI,IAAI,CAAC,qCAAqC,CAAC;AAC7CC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC,CAAC;AACF;AAAA,CACCC,OAAO,CAAC,iBAAiB,EAAEjE,sBAAsB,CAAC;AACnD0F,aAAa,CAAC,CAAC;AACfzB,OAAO,CAAC,iBAAiB,EAAE/D,iBAAiB,CAAC;AAC7C+D,OAAO,CAAC,mBAAmB,EAAE/D,iBAAiB,CAAC;AAC/CyD,MAAM;EACJ,CAACgC,CAAC;EACFA,CAAC,CAACC,eAAe,KAAKD,CAAC,CAACE,eAAe,CAACC,MAAM;EAC9CH,CAAC,CAACC,eAAe,KAAKD,CAAC,CAACI,iBAAiB,CAACD;AAC5C;AACA,CAAC;AACD5B,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAE0B,eAAe,EAAEE,iBAAiB,CAAC,CAAC,GAAG5B,CAAC,CAACG,MAAM;;EAEvD,MAAM,EAAEiB,mBAAmB,CAAC,CAAC,GAAGpB,CAAC,CAACrB,MAAM,CAAC0C,MAAM;EAC/CrB,CAAC,CAACsB,MAAM;IACNI,eAAe,CAACC,MAAM,GAAGP,mBAAmB;IAC5C,wBAAwBM,eAAe,CAACC,MAAM,sCAAsCP,mBAAmB;EACzG,CAAC;EACDpB,CAAC,CAACsB,MAAM;IACNM,iBAAiB,CAACD,MAAM,GAAGP,mBAAmB;IAC9C,0BAA0BQ,iBAAiB,CAACD,MAAM,sCAAsCP,mBAAmB;EAC7G,CAAC;;EAED,MAAMb,YAAY,GAAGqB,iBAAiB,CAAC5F,GAAG,CAAC,CAACF,CAAC,KAAKA,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC;EACzE,MAAMuE,aAAa,GAAGL,CAAC,CAACrB,MAAM,CAAC2B,yBAAyB,CAAC;IACvDC;EACF,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGH,aAAa,CAACI,MAAM,CAAC,CAAC;;EAErC,MAAM,EAAEC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAAC,UAAU,CAAC;EACxE,MAAMG,gBAAgB,GAAGW,eAAe,CAAC1F,GAAG,CAAC,CAACF,CAAC;EAC/CkE,CAAC,CAACxC,qBAAqB,CAAC1B,CAAC,GAAG,WAAW,GAAG,IAAI;EAC9C,CAAC;EACD,MAAM+E,IAAI,GAAGH,OAAO,CAACI,eAAe,CAAC;IACnCC;EACF,CAAC,CAAC;EACFF,IAAI,CAACG,cAAc,CAAC,CAACR,MAAM,CAAC,CAAC;EAC7BK,IAAI,CAACI,GAAG,CAAC,CAAC;EACVN,uBAAuB;IACrBe,eAAe,CAACG,KAAK,CAAC,CAACC,CAAC,EAAEhG,CAAC,KAAKgG,CAAC,KAAKF,iBAAiB,CAAC9F,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC;AACH,CAAC,CAAC;;AAEFwD,CAAC,CAACI,IAAI,CAAC,qCAAqC,CAAC;AAC7CC,IAAI,CAAC,gFAAgF,CAAC;AACtFQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC,CAAC;AAAA,CACDC,OAAO,CAAC,aAAa,EAAEjD,yCAAyC,CAAC;AAClEiD,OAAO,CAAC,eAAe,EAAEjD,yCAAyC,CAAC;AACnE0E,aAAa,CAAC,CAAC;AACfQ,MAAM,CAAC,YAAY,EAAE,CAAC,EAAEC,WAAW,CAAC,CAAC;AACrCtG,sBAAsB,CAACsG,WAAW,EAAErF,8BAA8B;AAClE,CAAC;AACDoF,MAAM,CAAC,cAAc,EAAE,CAAC,EAAEE,aAAa,CAAC,CAAC;AACzCvG,sBAAsB,CAACuG,aAAa,EAAEtF,8BAA8B;AACpE;AACA,CAAC;AACDuF,iBAAiB,CAAC,CAAClC,CAAC,KAAK;EACvB,MAAM,EAAEgC,WAAW,EAAEC,aAAa,CAAC,CAAC,GAAGjC,CAAC,CAACG,MAAM;EAC/CH,CAAC,CAACmC,0BAA0B,CAAC,CAACH,WAAW,EAAEC,aAAa,CAAC,CAAC;AAC5D,CAAC,CAAC;AACFlC,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAEC,UAAU,EAAEC,YAAY,CAAC,CAAC,GAAGF,CAAC,CAACG,MAAM;;EAE7C,MAAME,aAAa,GAAGL,CAAC,CAACrB,MAAM,CAAC2B,yBAAyB,CAAC;IACvDC,YAAY,EAAE,CAAC,YAAY,CAAC;IAC5B6B,kBAAkB,EAAElC;EACtB,CAAC,CAAC;EACF,MAAMM,MAAM,GAAGH,aAAa,CAACI,MAAM,CAAC,CAAC;;EAErC,MAAM,EAAEC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAAC,UAAU,CAAC;EACxE,MAAMC,IAAI,GAAGH,OAAO,CAACI,eAAe,CAAC;IACnCC,gBAAgB,EAAE,CAACf,CAAC,CAACxC,qBAAqB,CAAC,YAAY,CAAC,CAAC;IACzD6E,sBAAsB;IACtBpC,UAAU,KAAKrD,SAAS,GAAGoD,CAAC,CAACnC,qBAAqB,CAACoC,UAAU,CAAC,GAAGrD;EACnE,CAAC,CAAC;EACFiE,IAAI,CAACG,cAAc,CAAC,CAACR,MAAM,CAAC,CAAC;EAC7BK,IAAI,CAACI,GAAG,CAAC,CAAC;EACVN,uBAAuB,CAACV,UAAU,KAAKC,YAAY,EAAE,IAAI,CAAC;AAC5D,CAAC,CAAC;;AAEFZ,CAAC,CAACI,IAAI,CAAC,qCAAqC,CAAC;AAC7CC,IAAI,CAAC,qEAAqE,CAAC;AAC3EC,kBAAkB,CAAC,CAACC,CAAC;AACrBA,CAAC,CAAC;AAAA,CACDC,OAAO,CAAC,mBAAmB,EAAEzE,oBAAoB,CAAC;AACnDyE,OAAO,CAAC,mBAAmB,EAAEzE,oBAAoB;AACjD,CAAC;AACD0E,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAEsC,iBAAiB,EAAEC,iBAAiB,CAAC,CAAC,GAAGvC,CAAC,CAACG,MAAM;EACzD,MAAME,aAAa,GAAGL,CAAC,CAACrB,MAAM,CAAC2B,yBAAyB,CAAC;IACvDC,YAAY,EAAE,CAAC,YAAY,CAAC;IAC5BtD,WAAW,EAAEsF;EACf,CAAC,CAAC;EACF,MAAM/B,MAAM,GAAGH,aAAa,CAACI,MAAM,CAAC,CAAC;EACrC,MAAM,EAAEC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAAC,UAAU,CAAC;EACxE,MAAMC,IAAI,GAAGH,OAAO,CAACI,eAAe,CAAC;IACnCC,gBAAgB,EAAE,CAACf,CAAC,CAACxC,qBAAqB,CAAC,YAAY,EAAE8E,iBAAiB,CAAC;EAC7E,CAAC,CAAC;EACFzB,IAAI,CAACG,cAAc,CAAC,CAACR,MAAM,CAAC,CAAC;EAC7BK,IAAI,CAACI,GAAG,CAAC,CAAC;EACVN,uBAAuB,CAAC2B,iBAAiB,KAAKC,iBAAiB,EAAE,IAAI,CAAC;AACxE,CAAC,CAAC;;AAEFjD,CAAC,CAACI,IAAI,CAAC,wCAAwC,CAAC;AAChDC,IAAI,CAAC,oFAAoF,CAAC;AAC1FC,kBAAkB,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACjEoC,iBAAiB,CAAC,CAAClC,CAAC,KAAK;EACvBA,CAAC,CAACwC,oCAAoC,CAAC5F,SAAS,CAAC;AACnD,CAAC,CAAC;AACFmD,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAEyC,UAAU,CAAC,CAAC,GAAGzC,CAAC,CAACG,MAAM;EAC/B,MAAMuC,YAAY,GAAGD,UAAU,GAAGzC,CAAC,CAAC2C,gBAAgB,GAAG3C,CAAC,CAACrB,MAAM;;EAE/D,MAAM3B,MAAM,GAAG,UAAU;EACzB,MAAMqD,aAAa,GAAGqC,YAAY,CAACpC,yBAAyB,CAAC;IAC3DC,YAAY,EAAE,CAACvD,MAAM;EACvB,CAAC,CAAC;EACF,MAAMwD,MAAM,GAAGH,aAAa,CAACI,MAAM,CAAC,CAAC;;EAErC,MAAM,EAAEC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAAC,UAAU,CAAC;EACxE,MAAMC,IAAI,GAAGH,OAAO,CAACI,eAAe,CAAC;IACnCC,gBAAgB,EAAE,CAACf,CAAC,CAACxC,qBAAqB,CAACR,MAAM,CAAC;EACpD,CAAC,CAAC;EACF6D,IAAI,CAACG,cAAc,CAAC,CAACR,MAAM,CAAC,CAAC;EAC7BK,IAAI,CAACI,GAAG,CAAC,CAAC;EACVN,uBAAuB,CAAC,CAAC8B,UAAU,EAAE,IAAI,CAAC;AAC5C,CAAC,CAAC;;AAEFnD,CAAC,CAACI,IAAI,CAAC,iDAAiD,CAAC;AACzDC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACxDyB,aAAa,CAAC,CAAC;AACfzB,OAAO,CAAC,eAAe,EAAEP,uBAAuB,CAAC;AACjDO,OAAO,CAAC,gBAAgB,EAAEP,uBAAuB;AACjD,CAAC;AACDQ,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAE4C,WAAW,EAAEC,aAAa,EAAEC,cAAc,CAAC,CAAC,GAAG9C,CAAC,CAACG,MAAM;;EAE/DH,CAAC,CAACI,+BAA+B,CAACyC,aAAa,EAAEC,cAAc,CAAC;;EAEhE,MAAMC,QAAQ,GAAG/C,CAAC,CAACzB,oBAAoB,CAAC,CAAC,EAAEvB,MAAM,EAAE8F,cAAc,EAAEE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnF,MAAM,EAAEtC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAACgC,WAAW,EAAE;IACxEK,cAAc,EAAE,EAAE1C,YAAY,EAAE,CAACsC,aAAa,CAAC,CAAC;EAClD,CAAC,CAAC;EACFnC,OAAO,CAACwC,WAAW,CAACH,QAAQ,CAAC;EAC7BpC,uBAAuB,CAACkC,aAAa,KAAKC,cAAc,EAAE,IAAI,CAAC;AACjE,CAAC,CAAC;;AAEFxD,CAAC,CAACI,IAAI,CAAC,gDAAgD,CAAC;AACxDC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACxDyB,aAAa,CAAC,CAAC;AACfzB,OAAO,CAAC,cAAc,EAAEjE,sBAAsB,CAAC;AAC/CiE,OAAO,CAAC,eAAe,EAAEjE,sBAAsB;AAC/C,CAAC;AACDkE,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAE4C,WAAW,EAAEO,YAAY,EAAEC,aAAa,CAAC,CAAC,GAAGpD,CAAC,CAACG,MAAM;;EAE7D,MAAM,EAAEiB,mBAAmB,CAAC,CAAC,GAAGpB,CAAC,CAACrB,MAAM,CAAC0C,MAAM;EAC/CrB,CAAC,CAACsB,MAAM;IACN8B,aAAa,GAAGhC,mBAAmB;IACnC,kBAAkBgC,aAAa,sCAAsChC,mBAAmB;EAC1F,CAAC;EACDpB,CAAC,CAACsB,MAAM;IACN6B,YAAY,GAAG/B,mBAAmB;IAClC,iBAAiB+B,YAAY,sCAAsC/B,mBAAmB;EACxF,CAAC;;EAED,MAAM2B,QAAQ,GAAG/C,CAAC,CAACzB,oBAAoB;IACrCpD,KAAK,CAACiI,aAAa,EAAE,OAAO,EAAEpG,MAAM,EAAE,WAAW,EAAEgG,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;;EAED,MAAM,EAAEtC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAACgC,WAAW,EAAE;IACxEK,cAAc,EAAE,EAAE1C,YAAY,EAAEpF,KAAK,CAACgI,YAAY,EAAE,MAAM,WAAW,CAAC,CAAC;EACzE,CAAC,CAAC;EACFzC,OAAO,CAACwC,WAAW,CAACH,QAAQ,CAAC;EAC7BpC,uBAAuB,CAACwC,YAAY,KAAKC,aAAa,EAAE,IAAI,CAAC;AAC/D,CAAC,CAAC;;AAEF9D,CAAC,CAACI,IAAI,CAAC,iDAAiD,CAAC;AACzDC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC;AACvD;AAAA,CACCA,OAAO,CAAC,iBAAiB,EAAEjE,sBAAsB,CAAC;AACnD0F,aAAa,CAAC,CAAC;AACfzB,OAAO,CAAC,oBAAoB,EAAE/D,iBAAiB,CAAC;AAChD+D,OAAO,CAAC,qBAAqB,EAAE/D,iBAAiB,CAAC;AACjDyD,MAAM;EACJ,CAACgC,CAAC;EACFA,CAAC,CAACC,eAAe,KAAKD,CAAC,CAAC6B,kBAAkB,CAAC1B,MAAM;EACjDH,CAAC,CAACC,eAAe,KAAKD,CAAC,CAAC8B,mBAAmB,CAAC3B;AAC9C;AACA,CAAC;AACD5B,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAE4C,WAAW,EAAES,kBAAkB,EAAEC,mBAAmB,CAAC,CAAC,GAAGtD,CAAC,CAACG,MAAM;EACzE,MAAM,EAAEiB,mBAAmB,CAAC,CAAC,GAAGpB,CAAC,CAACrB,MAAM,CAAC0C,MAAM;EAC/CrB,CAAC,CAACsB,MAAM;IACN+B,kBAAkB,CAAC1B,MAAM,GAAGP,mBAAmB;IAC/C,2BAA2BiC,kBAAkB,CAAC1B,MAAM,sCAAsCP,mBAAmB;EAC/G,CAAC;EACDpB,CAAC,CAACsB,MAAM;IACNgC,mBAAmB,CAAC3B,MAAM,GAAGP,mBAAmB;IAChD,4BAA4BkC,mBAAmB,CAAC3B,MAAM,sCAAsCP,mBAAmB;EACjH,CAAC;;EAED,MAAMmC,YAAY,GAAGD,mBAAmB,CAACtH,GAAG,CAAC,CAACF,CAAC;EAC/CA,CAAC,GAAG,EAAEkB,MAAM,EAAE,WAAW,EAAEgG,SAAS,EAAE,CAAC,CAAC,CAAC,GAAG;EAC5C,CAAC;EACD,MAAMD,QAAQ,GAAG/C,CAAC,CAACzB,oBAAoB,CAACgF,YAAY,CAAC;;EAErD,MAAMhD,YAAY,GAAG8C,kBAAkB,CAACrH,GAAG,CAAC,CAACF,CAAC,KAAKA,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC;EAC1E,MAAM,EAAE4E,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAACgC,WAAW,EAAE;IACxEK,cAAc,EAAE,EAAE1C,YAAY,CAAC;EACjC,CAAC,CAAC;EACFG,OAAO,CAACwC,WAAW,CAACH,QAAQ,CAAC;EAC7BpC,uBAAuB;IACrB0C,kBAAkB,CAACxB,KAAK,CAAC,CAACC,CAAC,EAAEhG,CAAC,KAAKgG,CAAC,KAAKwB,mBAAmB,CAACxH,CAAC,CAAC,CAAC;IAChE;EACF,CAAC;AACH,CAAC,CAAC;;AAEFwD,CAAC,CAACI,IAAI,CAAC,iDAAiD,CAAC;AACzDC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACxDA,OAAO,CAAC,sBAAsB,EAAEjD,yCAAyC,CAAC;AAC1EiD,OAAO,CAAC,uBAAuB,EAAEjD,yCAAyC,CAAC;AAC3E0E,aAAa,CAAC,CAAC;AACfQ,MAAM,CAAC,eAAe,EAAE,CAAC,EAAEyB,oBAAoB,CAAC,CAAC;AACjD9H,sBAAsB,CAAC8H,oBAAoB,EAAE7G,8BAA8B;AAC3E,CAAC;AACDoF,MAAM,CAAC,gBAAgB,EAAE,CAAC,EAAE0B,qBAAqB,CAAC,CAAC;AACnD/H,sBAAsB,CAAC+H,qBAAqB,EAAE9G,8BAA8B;AAC5E;AACA,CAAC;AACDuF,iBAAiB,CAAC,CAAClC,CAAC,KAAK;EACvB,MAAM,EAAEwD,oBAAoB,EAAEC,qBAAqB,CAAC,CAAC,GAAGzD,CAAC,CAACG,MAAM;EAChEH,CAAC,CAACmC,0BAA0B,CAAC,CAACqB,oBAAoB,EAAEC,qBAAqB,CAAC,CAAC;AAC7E,CAAC,CAAC;AACF1D,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAE4C,WAAW,EAAEC,aAAa,EAAEC,cAAc,CAAC,CAAC,GAAG9C,CAAC,CAACG,MAAM;;EAE/D,MAAM4C,QAAQ,GAAG/C,CAAC,CAACzB,oBAAoB;IACrC,CAAC,EAAEvB,MAAM,EAAE,YAAY,EAAEgG,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IACxCF,cAAc,KAAKlG,SAAS;IAC5B,EAAEI,MAAM,EAAE8F,cAAc,EAAEY,YAAY,EAAE,QAAQ,EAAEC,iBAAiB,EAAE,KAAK,CAAC,CAAC;IAC5E/G;EACF,CAAC;;EAED,MAAM,EAAE8D,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAACgC,WAAW,EAAE;IACxEK,cAAc,EAAE,EAAE1C,YAAY,EAAE,CAAC,YAAY,CAAC,EAAE6B,kBAAkB,EAAES,aAAa,CAAC;EACpF,CAAC,CAAC;EACFnC,OAAO,CAACwC,WAAW,CAACH,QAAQ,CAAC;EAC7BpC,uBAAuB,CAACkC,aAAa,KAAKC,cAAc,EAAE,IAAI,CAAC;AACjE,CAAC,CAAC;;AAEF,MAAMc,kBAAkB,GAAG;AAC3B,EAAEC,MAAM,EAAE,MAAM,EAAEC,WAAW,EAAE,MAAM,EAAEC,MAAM,EAAE,MAAM,CAAC,CAAC;AACvD,EAAEF,MAAM,EAAE,MAAM,EAAEC,WAAW,EAAE,MAAM,EAAEC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;;;AAGxDzE,CAAC,CAACI,IAAI,CAAC,wEAAwE,CAAC;AAChFC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACxDA,OAAO,CAAC,QAAQ,EAAEnD,8BAA8B,CAAC;AACjD4E,aAAa,CAAC;AACd;AAAA,CACCzB,OAAO,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxCA,OAAO,CAAC,iBAAiB,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACzCA,OAAO,CAAC,cAAc,EAAE8D,kBAAkB,CAAC;AAC3C9D,OAAO,CAAC,aAAa,EAAE8D,kBAAkB;AACzC;AAAA,CACC9D,OAAO,CAAC,mBAAmB,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC5CA,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AAC5CA,OAAO,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC9CN,MAAM,CAAC,CAACgC,CAAC,KAAK;EACZ,IAAIA,CAAC,CAACxE,MAAM,EAAE;IACZ,MAAMgH,gBAAgB,GAAGvI,kBAAkB,CAAC+F,CAAC,CAACxE,MAAM,CAAC;IACrD;IACA;IACA,IAAI,CAACgH,gBAAgB,CAACjG,KAAK,IAAIyD,CAAC,CAACmC,iBAAiB,EAAE;MAClD,OAAO,KAAK;IACd;IACA;IACA;IACA;IACA,CAACK,gBAAgB,CAAC7F,OAAO;IACzBqD,CAAC,CAACyC,YAAY,CAACJ,MAAM,KAAK,MAAM,IAAIrC,CAAC,CAAC0C,WAAW,CAACL,MAAM,KAAK,MAAM,CAAC;IACpE;MACE,OAAO,KAAK;IACd;EACF;EACA;EACA,OAAO,IAAI;AACb,CAAC;AACD,CAAC;AACD3B,iBAAiB,CAAC,CAAClC,CAAC,KAAK;EACvBA,CAAC,CAACmE,0CAA0C,CAACnE,CAAC,CAACG,MAAM,CAACnD,MAAM,CAAC;AAC/D,CAAC,CAAC;AACF+C,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM;IACJ4C,WAAW;IACX5F,MAAM;IACNoH,aAAa;IACbC,eAAe;IACfV,iBAAiB;IACjBW,gBAAgB;IAChB5F,QAAQ;IACRuF,YAAY;IACZC;EACF,CAAC,GAAGlE,CAAC,CAACG,MAAM;;EAEZ,MAAM4C,QAAQ,GAAG/C,CAAC,CAACzB,oBAAoB;IACrC,CAAC,EAAEvB,MAAM,EAAE,YAAY,EAAEgG,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IACxChG,MAAM,KAAKJ,SAAS;IACpBA,SAAS;IACT;MACEI,MAAM;MACN2G,iBAAiB;MACjBD,YAAY,EAAE,QAAQ;MACtBY,gBAAgB;MAChBL,YAAY;MACZC;IACF,CAAC;IACD,CAAC;IACDxF;EACF,CAAC;;EAED,MAAM,EAAEgC,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAACgC,WAAW,EAAE;IACxEK,cAAc,EAAE;MACd1C,YAAY,EAAE,CAAC,YAAY,CAAC;MAC5B6B,kBAAkB,EAAEpF,MAAM;MAC1BoH,aAAa;MACbC;IACF;EACF,CAAC,CAAC;EACF3D,OAAO,CAACwC,WAAW,CAACH,QAAQ,CAAC;;EAE7B,IAAIwB,WAAW,GAAG,KAAK;EACvB,IAAIC,aAAa,GAAG,KAAK;EACzB,IAAIxH,MAAM,EAAE;IACVuH,WAAW,GAAGZ,iBAAiB;IAC/B,IAAIW,gBAAgB,KAAK,CAAC,EAAE;MAC1B;MACA5F,QAAQ,KAAK,OAAO;MACpBuF,YAAY,CAACF,MAAM,KAAK,MAAM;MAC9BE,YAAY,CAACH,WAAW,KAAK,MAAM;MACnCG,YAAY,CAACJ,MAAM,KAAK,MAAM,CAAC;MAC/B;QACEW,aAAa,GAAG,IAAI;MACtB;MACA;MACA9F,QAAQ,KAAK,MAAM;MACnBwF,WAAW,CAACH,MAAM,KAAK,MAAM;MAC7BG,WAAW,CAACJ,WAAW,KAAK,MAAM;MAClCI,WAAW,CAACL,MAAM,KAAK,MAAM,CAAC;MAC9B;QACEW,aAAa,GAAG,IAAI;MACtB;IACF;EACF;;EAEA,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIF,WAAW,EAAE;IACfE,OAAO,KAAK,CAACL,aAAa;EAC5B;EACA,IAAII,aAAa,EAAE;IACjBC,OAAO,KAAK,CAACJ,eAAe;EAC9B;;EAEA1D,uBAAuB,CAAC8D,OAAO,EAAE,IAAI,CAAC;AACxC,CAAC,CAAC;;AAEFnF,CAAC,CAACI,IAAI,CAAC,iDAAiD,CAAC;AACzDC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDQ,MAAM,CAAC,CAACN,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACxDA,OAAO,CAAC,gBAAgB,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;AACpDyB,aAAa,CAAC,CAAC;AACfzB,OAAO,CAAC,oBAAoB,EAAEzE,oBAAoB,CAAC;AACnDyE,OAAO,CAAC,qBAAqB,EAAEzE,oBAAoB;AACnD,CAAC;AACD0E,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM,EAAE4C,WAAW,EAAE8B,cAAc,EAAEC,kBAAkB,EAAEC,mBAAmB,CAAC,CAAC,GAAG5E,CAAC,CAACG,MAAM;;EAEzF,MAAMI,YAAY,GAAGmE,cAAc,KAAK,OAAO,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE;EACrE,MAAMtC,kBAAkB;EACxBsC,cAAc,KAAK,cAAc,GAAG,sBAAsB,GAAG9H,SAAS;;EAEtE,MAAMmG,QAAQ,GAAG/C,CAAC,CAACzB,oBAAoB;IACrCgC,YAAY,CAACvE,GAAG,CAAC,CAACgB,MAAM,MAAM,EAAEA,MAAM,EAAEgG,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxDZ,kBAAkB;IAClB,EAAEpF,MAAM,EAAEoF,kBAAkB,EAAEuB,iBAAiB,EAAE,KAAK,EAAED,YAAY,EAAE,QAAQ,CAAC,CAAC;IAChF9G,SAAS;IACTgI;EACF,CAAC;;EAED,MAAM,EAAElE,OAAO,EAAEC,uBAAuB,CAAC,CAAC,GAAGX,CAAC,CAACY,aAAa,CAACgC,WAAW,EAAE;IACxEK,cAAc,EAAE,EAAE1C,YAAY,EAAE6B,kBAAkB,EAAEnF,WAAW,EAAE0H,kBAAkB,CAAC;EACtF,CAAC,CAAC;EACFjE,OAAO,CAACwC,WAAW,CAACH,QAAQ,CAAC;EAC7BpC,uBAAuB,CAACgE,kBAAkB,KAAKC,mBAAmB,EAAE,IAAI,CAAC;AAC3E,CAAC,CAAC","ignoreList":[]}