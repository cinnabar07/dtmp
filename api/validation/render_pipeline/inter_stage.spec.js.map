{"version":3,"file":"inter_stage.spec.js","names":["description","makeTestGroup","range","CreateRenderPipelineValidationTest","getVarName","i","skipIfDisallowedInterpolationParameter","t","wgsl","isCompatibility","s","includes","skip","InterStageMatchingValidationTest","getVertexStateWithOutputs","outputs","module","device","createShaderModule","code","map","v","replace","join","entryPoint","getFragmentStateWithInputs","inputs","hasBuiltinPosition","targets","format","getDescriptorWithStates","vertex","fragment","layout","g","test","desc","params","u","combine","combineWithParams","_success","fn","isAsync","descriptor","doCreateRenderPipelineTest","output","input","_compat_success","beforeAllSubcases","shouldSucceed","locationDelta","maxInterStageShaderVariables","limits","location","numVariablesDelta","topology","numVec4","primitive","useExtraBuiltinInputs","numExtraVariables","numUsedVariables","success","push"],"sources":["../../../../../src/webgpu/api/validation/render_pipeline/inter_stage.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nInterface matching between vertex and fragment shader validation for createRenderPipeline.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\n\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nfunction getVarName(i) {\n  return `v${i}`;\n}\n\nfunction skipIfDisallowedInterpolationParameter(t, ...wgsl) {\n  if (t.isCompatibility) {\n    for (const s of wgsl) {\n      if (s.includes('linear') || s.includes('sample')) {\n        t.skip(`unsupported interpolation parameter in compat: ${wgsl}`);\n      }\n    }\n  }\n}\n\nclass InterStageMatchingValidationTest extends CreateRenderPipelineValidationTest {\n  getVertexStateWithOutputs(outputs) {\n    return {\n      module: this.device.createShaderModule({\n        code: `\n        struct A {\n            ${outputs.map((v, i) => v.replace('__', getVarName(i))).join(',\\n')},\n            @builtin(position) pos: vec4<f32>,\n        }\n        @vertex fn main() -> A {\n            var vertexOut: A;\n            vertexOut.pos = vec4<f32>(0.0, 0.0, 0.0, 1.0);\n            return vertexOut;\n        }\n        `\n      }),\n      entryPoint: 'main'\n    };\n  }\n\n  getFragmentStateWithInputs(\n  inputs,\n  hasBuiltinPosition = false)\n  {\n    return {\n      targets: [{ format: 'rgba8unorm' }],\n      module: this.device.createShaderModule({\n        code: `\n        struct B {\n            ${inputs.map((v, i) => v.replace('__', getVarName(i))).join(',\\n')},\n            ${hasBuiltinPosition ? '@builtin(position) pos: vec4<f32>' : ''}\n        }\n        @fragment fn main(fragmentIn: B) -> @location(0) vec4<f32> {\n            return vec4<f32>(1.0, 1.0, 1.0, 1.0);\n        }\n        `\n      }),\n      entryPoint: 'main'\n    };\n  }\n\n  getDescriptorWithStates(\n  vertex,\n  fragment)\n  {\n    return {\n      layout: 'auto',\n      vertex,\n      fragment\n    };\n  }\n}\n\nexport const g = makeTestGroup(InterStageMatchingValidationTest);\n\ng.test('location,mismatch').\ndesc(`Tests that missing declaration at the same location should fail validation.`).\nparams((u) =>\nu.combine('isAsync', [false, true]).combineWithParams([\n{ outputs: ['@location(0) __: f32'], inputs: ['@location(0) __: f32'], _success: true },\n{ outputs: ['@location(0) __: f32'], inputs: ['@location(1) __: f32'], _success: false },\n{ outputs: ['@location(1) __: f32'], inputs: ['@location(0) __: f32'], _success: false },\n{\n  outputs: ['@location(0) __: f32', '@location(1) __: f32'],\n  inputs: ['@location(1) __: f32', '@location(0) __: f32'],\n  _success: true\n},\n{\n  outputs: ['@location(1) __: f32', '@location(0) __: f32'],\n  inputs: ['@location(0) __: f32', '@location(1) __: f32'],\n  _success: true\n}]\n)\n).\nfn((t) => {\n  const { isAsync, outputs, inputs, _success } = t.params;\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs(outputs),\n    t.getFragmentStateWithInputs(inputs)\n  );\n\n  t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n});\n\ng.test('location,superset').\ndesc(`Tests that validation should succeed when vertex output is superset of fragment input`).\nparams((u) => u.combine('isAsync', [false, true])).\nfn((t) => {\n  const { isAsync } = t.params;\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs(['@location(0) vout0: f32', '@location(1) vout1: f32']),\n    t.getFragmentStateWithInputs(['@location(1) fin1: f32'])\n  );\n\n  t.doCreateRenderPipelineTest(isAsync, true, descriptor);\n});\n\ng.test('location,subset').\ndesc(`Tests that validation should fail when vertex output is a subset of fragment input.`).\nparams((u) => u.combine('isAsync', [false, true])).\nfn((t) => {\n  const { isAsync } = t.params;\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs(['@location(0) vout0: f32']),\n    t.getFragmentStateWithInputs(['@location(0) fin0: f32', '@location(1) fin1: f32'])\n  );\n\n  t.doCreateRenderPipelineTest(isAsync, false, descriptor);\n});\n\ng.test('type').\ndesc(\n  `Tests that validation should fail when type of vertex output and fragment input at the same location doesn't match.`\n).\nparams((u) =>\nu.combine('isAsync', [false, true]).combineWithParams([\n{ output: 'f32', input: 'f32' },\n{ output: 'i32', input: 'f32' },\n{ output: 'u32', input: 'f32' },\n{ output: 'u32', input: 'i32' },\n{ output: 'i32', input: 'u32' },\n{ output: 'vec2<f32>', input: 'vec2<f32>' },\n{ output: 'vec3<f32>', input: 'vec2<f32>' },\n{ output: 'vec2<f32>', input: 'vec3<f32>' },\n{ output: 'vec2<f32>', input: 'f32' },\n{ output: 'f32', input: 'vec2<f32>' }]\n)\n).\nfn((t) => {\n  const { isAsync, output, input } = t.params;\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs([`@location(0) @interpolate(flat, either) vout0: ${output}`]),\n    t.getFragmentStateWithInputs([`@location(0) @interpolate(flat, either) fin0: ${input}`])\n  );\n\n  t.doCreateRenderPipelineTest(isAsync, output === input, descriptor);\n});\n\ng.test('interpolation_type').\ndesc(\n  `Tests that validation should fail when interpolation type of vertex output and fragment input at the same location doesn't match.`\n).\nparams((u) =>\nu.combine('isAsync', [false, true]).combineWithParams([\n// default is @interpolate(perspective, center)\n{ output: '', input: '' },\n{ output: '', input: '@interpolate(perspective)', _success: true },\n{ output: '', input: '@interpolate(perspective, center)', _success: true },\n{ output: '@interpolate(perspective)', input: '', _success: true },\n{ output: '', input: '@interpolate(linear)' },\n{ output: '@interpolate(perspective)', input: '@interpolate(perspective)' },\n{ output: '@interpolate(linear)', input: '@interpolate(perspective)' },\n{ output: '@interpolate(flat, either)', input: '@interpolate(perspective)' },\n{ output: '@interpolate(linear)', input: '@interpolate(flat, either)' },\n{\n  output: '@interpolate(linear, center)',\n  input: '@interpolate(linear, center)',\n  _compat_success: false\n}]\n)\n).\nbeforeAllSubcases((t) => {\n  skipIfDisallowedInterpolationParameter(t, t.params.output, t.params.input);\n}).\nfn((t) => {\n  const { isAsync, output, input, _success, _compat_success } = t.params;\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs([`@location(0) ${output} vout0: f32`]),\n    t.getFragmentStateWithInputs([`@location(0) ${input} fin0: f32`])\n  );\n\n  const shouldSucceed =\n  (_success ?? output === input) && (!t.isCompatibility || _compat_success !== false);\n\n  t.doCreateRenderPipelineTest(isAsync, shouldSucceed, descriptor);\n});\n1;\ng.test('interpolation_sampling').\ndesc(\n  `Tests that validation should fail when interpolation sampling of vertex output and fragment input at the same location doesn't match.`\n).\nparams((u) =>\nu.combine('isAsync', [false, true]).combineWithParams([\n// default is @interpolate(perspective, center)\n{ output: '@interpolate(perspective)', input: '@interpolate(perspective)' },\n{\n  output: '@interpolate(perspective)',\n  input: '@interpolate(perspective, center)',\n  _success: true\n},\n{\n  output: '@interpolate(linear, center)',\n  input: '@interpolate(linear)',\n  _success: true,\n  _compat_success: false\n},\n{ output: '@interpolate(flat, either)', input: '@interpolate(flat, either)' },\n{ output: '@interpolate(perspective)', input: '@interpolate(perspective, sample)' },\n{ output: '@interpolate(perspective, center)', input: '@interpolate(perspective, sample)' },\n{\n  output: '@interpolate(perspective, center)',\n  input: '@interpolate(perspective, centroid)'\n},\n{ output: '@interpolate(perspective, centroid)', input: '@interpolate(perspective)' }]\n)\n).\nbeforeAllSubcases((t) => {\n  skipIfDisallowedInterpolationParameter(t, t.params.output, t.params.input);\n}).\nfn((t) => {\n  const { isAsync, output, input, _success, _compat_success } = t.params;\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs([`@location(0) ${output} vout0: f32`]),\n    t.getFragmentStateWithInputs([`@location(0) ${input} fin0: f32`])\n  );\n\n  const shouldSucceed =\n  (_success ?? output === input) && (!t.isCompatibility || _compat_success !== false);\n\n  t.doCreateRenderPipelineTest(isAsync, shouldSucceed, descriptor);\n});\n\ng.test('max_shader_variable_location').\ndesc(\n  `Tests that validation should fail when there is location of user-defined output/input variable >= device.limits.maxInterStageShaderVariables`\n).\nparams((u) =>\nu.\ncombine('isAsync', [false, true])\n// User defined variable location = maxInterStageShaderVariables + locationDelta\n.combine('locationDelta', [0, -1, -2])\n).\nfn((t) => {\n  const { isAsync, locationDelta } = t.params;\n  const maxInterStageShaderVariables = t.device.limits.maxInterStageShaderVariables;\n  const location = maxInterStageShaderVariables + locationDelta;\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs([`@location(${location}) vout0: f32`]),\n    t.getFragmentStateWithInputs([`@location(${location}) fin0: f32`])\n  );\n\n  t.doCreateRenderPipelineTest(isAsync, location < maxInterStageShaderVariables, descriptor);\n});\n\ng.test('max_variables_count,output').\ndesc(\n  `Tests that validation should fail when all user-defined outputs > max vertex shader output\n    variables.`\n).\nparams((u) =>\nu.combine('isAsync', [false, true]).combineWithParams([\n// Number of user-defined output variables in test shader =\n//     device.limits.maxInterStageShaderVariables + numVariablesDelta\n{ numVariablesDelta: 0, topology: 'triangle-list', _success: true },\n{ numVariablesDelta: 1, topology: 'triangle-list', _success: false },\n{ numVariablesDelta: 0, topology: 'point-list', _success: false },\n{ numVariablesDelta: -1, topology: 'point-list', _success: true }]\n)\n).\nfn((t) => {\n  const { isAsync, numVariablesDelta, topology, _success } = t.params;\n\n  const numVec4 = t.device.limits.maxInterStageShaderVariables + numVariablesDelta;\n\n  const outputs = range(numVec4, (i) => `@location(${i}) vout${i}: vec4<f32>`);\n  const inputs = range(numVec4, (i) => `@location(${i}) fin${i}: vec4<f32>`);\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs(outputs),\n    t.getFragmentStateWithInputs(inputs)\n  );\n  descriptor.primitive = { topology };\n\n  t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n});\n\ng.test('max_variables_count,input').\ndesc(\n  `Tests that validation should fail when all user-defined inputs > max vertex shader output\n    variables.`\n).\nparams((u) =>\nu.combine('isAsync', [false, true]).combineWithParams([\n// Number of user-defined output variables in test shader =\n//     device.limits.maxInterStageShaderVariables + numVariablesDelta\n{ numVariablesDelta: 0, useExtraBuiltinInputs: false },\n{ numVariablesDelta: 1, useExtraBuiltinInputs: false },\n{ numVariablesDelta: 0, useExtraBuiltinInputs: true },\n{ numVariablesDelta: -1, useExtraBuiltinInputs: true }]\n)\n).\nfn((t) => {\n  const { isAsync, numVariablesDelta, useExtraBuiltinInputs } = t.params;\n\n  const numVec4 = t.device.limits.maxInterStageShaderVariables + numVariablesDelta;\n  const numExtraVariables = useExtraBuiltinInputs ? 1 : 0;\n  const numUsedVariables = numVec4 + numExtraVariables;\n  const success = numUsedVariables <= t.device.limits.maxInterStageShaderVariables;\n\n  const outputs = range(numVec4, (i) => `@location(${i}) vout${i}: vec4<f32>`);\n  const inputs = range(numVec4, (i) => `@location(${i}) fin${i}: vec4<f32>`);\n\n  if (useExtraBuiltinInputs) {\n    inputs.push('@builtin(front_facing) front_facing_in: bool');\n    if (!t.isCompatibility) {\n      inputs.push(\n        '@builtin(sample_mask) sample_mask_in: u32',\n        '@builtin(sample_index) sample_index_in: u32'\n      );\n    }\n  }\n\n  const descriptor = t.getDescriptorWithStates(\n    t.getVertexStateWithOutputs(outputs),\n    t.getFragmentStateWithInputs(inputs, true)\n  );\n\n  t.doCreateRenderPipelineTest(isAsync, success, descriptor);\n});"],"mappings":"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","ignoreList":[]}