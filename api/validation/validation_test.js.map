{"version":3,"file":"validation_test.js","names":["kMaxQueryCount","GPUTest","ValidationTest","createTextureWithState","state","descriptor","size","width","height","depthOrArrayLayers","format","usage","GPUTextureUsage","COPY_SRC","COPY_DST","TEXTURE_BINDING","STORAGE_BINDING","RENDER_ATTACHMENT","createTextureTracked","getErrorTexture","texture","globalThis","_TRAMPOLINE_","destroy","createBufferWithState","GPUBufferUsage","VERTEX","createBufferTracked","device","pushErrorScope","buffer","MAP_READ","popErrorScope","createQuerySetWithState","desc","type","count","createQuerySetTracked","expectGPUError","queryset","getStorageBuffer","STORAGE","getUniformBuffer","UNIFORM","getErrorBuffer","getErrorSampler","sampler","createSampler","lodMinClamp","getSampledTexture","sampleCount","getStorageTexture","getRenderTexture","getErrorTextureView","view","createView","getBindingResource","bindingType","minFilter","compare","getDeviceMismatchedStorageBuffer","trackForCleanup","mismatchedDevice","createBuffer","getDeviceMismatchedUniformBuffer","getDeviceMismatchedTexture","createTexture","getDeviceMismatchedSampledTexture","getDeviceMismatchedStorageTexture","getDeviceMismatchedRenderTexture","getDeviceMismatchedBindingResource","getNoOpShaderCode","stage","createRenderPipelineWithState","createNoOpRenderPipeline","createErrorRenderPipeline","layout","colorFormat","createRenderPipeline","vertex","module","createShaderModule","code","entryPoint","fragment","targets","writeMask","primitive","topology","pipeline","createNoOpComputePipeline","createComputePipeline","compute","createErrorComputePipeline","createInvalidShaderModule","shaderModule","doCreateRenderPipelineTest","isAsync","_success","errorTypeName","shouldResolve","createRenderPipelineAsync","shouldReject","expectValidationError","shouldThrow","doCreateComputePipelineTest","createComputePipelineAsync"],"sources":["../../../../src/webgpu/api/validation/validation_test.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import {\n  kMaxQueryCount } from\n\n'../../capability_info.js';\nimport { GPUTest } from '../../gpu_test.js';\n\n/**\n * Base fixture for WebGPU validation tests.\n */\nexport class ValidationTest extends GPUTest {\n  /**\n   * Create a GPUTexture in the specified state.\n   * A `descriptor` may optionally be passed, which is used when `state` is not `'invalid'`.\n   */\n  createTextureWithState(\n  state,\n  descriptor)\n  {\n    descriptor = descriptor ?? {\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm',\n      usage:\n      GPUTextureUsage.COPY_SRC |\n      GPUTextureUsage.COPY_DST |\n      GPUTextureUsage.TEXTURE_BINDING |\n      GPUTextureUsage.STORAGE_BINDING |\n      GPUTextureUsage.RENDER_ATTACHMENT\n    };\n\n    switch (state) {\n      case 'valid':\n        return this.createTextureTracked(descriptor);\n      case 'invalid':\n        return this.getErrorTexture();\n      case 'destroyed':{\n          const texture = this.createTextureTracked(descriptor);\n          globalThis._TRAMPOLINE_(\"destroy\", texture, texture.destroy, [], () => texture.destroy());\n          return texture;\n        }\n    }\n  }\n\n  /**\n   * Create a GPUTexture in the specified state. A `descriptor` may optionally be passed;\n   * if `state` is `'invalid'`, it will be modified to add an invalid combination of usages.\n   */\n  createBufferWithState(\n  state,\n  descriptor)\n  {\n    descriptor = descriptor ?? {\n      size: 4,\n      usage: GPUBufferUsage.VERTEX\n    };\n\n    switch (state) {\n      case 'valid':\n        return this.createBufferTracked(descriptor);\n\n      case 'invalid':{\n          // Make the buffer invalid because of an invalid combination of usages but keep the\n          // descriptor passed as much as possible (for mappedAtCreation and friends).\n          this.device.pushErrorScope('validation');\n          const buffer = this.createBufferTracked({\n            ...descriptor,\n            usage: descriptor.usage | GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_SRC\n          });\n          void this.device.popErrorScope();\n          return buffer;\n        }\n      case 'destroyed':{\n          const buffer = this.createBufferTracked(descriptor);\n          globalThis._TRAMPOLINE_(\"destroy\", buffer, buffer.destroy, [], () => buffer.destroy());\n          return buffer;\n        }\n    }\n  }\n\n  /**\n   * Create a GPUQuerySet in the specified state.\n   * A `descriptor` may optionally be passed, which is used when `state` is not `'invalid'`.\n   */\n  createQuerySetWithState(\n  state,\n  desc)\n  {\n    const descriptor = { type: 'occlusion', count: 2, ...desc };\n\n    switch (state) {\n      case 'valid':\n        return this.createQuerySetTracked(descriptor);\n      case 'invalid':{\n          // Make the queryset invalid because of the count out of bounds.\n          descriptor.count = kMaxQueryCount + 1;\n          return this.expectGPUError('validation', () => this.createQuerySetTracked(descriptor));\n        }\n      case 'destroyed':{\n          const queryset = this.createQuerySetTracked(descriptor);\n          globalThis._TRAMPOLINE_(\"destroy\", queryset, queryset.destroy, [], () => queryset.destroy());\n          return queryset;\n        }\n    }\n  }\n\n  /** Create an arbitrarily-sized GPUBuffer with the STORAGE usage. */\n  getStorageBuffer() {\n    return this.createBufferTracked({ size: 1024, usage: GPUBufferUsage.STORAGE });\n  }\n\n  /** Create an arbitrarily-sized GPUBuffer with the UNIFORM usage. */\n  getUniformBuffer() {\n    return this.createBufferTracked({ size: 1024, usage: GPUBufferUsage.UNIFORM });\n  }\n\n  /** Return an invalid GPUBuffer. */\n  getErrorBuffer() {\n    return this.createBufferWithState('invalid');\n  }\n\n  /** Return an invalid GPUSampler. */\n  getErrorSampler() {\n    this.device.pushErrorScope('validation');\n    const sampler = this.device.createSampler({ lodMinClamp: -1 });\n    void this.device.popErrorScope();\n    return sampler;\n  }\n\n  /**\n   * Return an arbitrarily-configured GPUTexture with the `TEXTURE_BINDING` usage and specified\n   * sampleCount. The `RENDER_ATTACHMENT` usage will also be specified if sampleCount > 1 as is\n   * required by WebGPU SPEC.\n   */\n  getSampledTexture(sampleCount = 1) {\n    const usage =\n    sampleCount > 1 ?\n    GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT :\n    GPUTextureUsage.TEXTURE_BINDING;\n    return this.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm',\n      usage,\n      sampleCount\n    });\n  }\n\n  /** Return an arbitrarily-configured GPUTexture with the `STORAGE_BINDING` usage. */\n  getStorageTexture(format) {\n    return this.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format,\n      usage: GPUTextureUsage.STORAGE_BINDING\n    });\n  }\n\n  /** Return an arbitrarily-configured GPUTexture with the `RENDER_ATTACHMENT` usage. */\n  getRenderTexture(sampleCount = 1) {\n    return this.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      sampleCount\n    });\n  }\n\n  /** Return an invalid GPUTexture. */\n  getErrorTexture() {\n    this.device.pushErrorScope('validation');\n    const texture = this.createTextureTracked({\n      size: { width: 0, height: 0, depthOrArrayLayers: 0 },\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING\n    });\n    void this.device.popErrorScope();\n    return texture;\n  }\n\n  /** Return an invalid GPUTextureView (created from an invalid GPUTexture). */\n  getErrorTextureView() {\n    this.device.pushErrorScope('validation');\n    const view = this.getErrorTexture().createView();\n    void this.device.popErrorScope();\n    return view;\n  }\n\n  /**\n   * Return an arbitrary object of the specified {@link webgpu/capability_info!BindableResource} type\n   * (e.g. `'errorBuf'`, `'nonFiltSamp'`, `sampledTexMS`, etc.)\n   */\n  getBindingResource(bindingType) {\n    switch (bindingType) {\n      case 'errorBuf':\n        return { buffer: this.getErrorBuffer() };\n      case 'errorSamp':\n        return this.getErrorSampler();\n      case 'errorTex':\n        return this.getErrorTextureView();\n      case 'uniformBuf':\n        return { buffer: this.getUniformBuffer() };\n      case 'storageBuf':\n        return { buffer: this.getStorageBuffer() };\n      case 'filtSamp':\n        return this.device.createSampler({ minFilter: 'linear' });\n      case 'nonFiltSamp':\n        return this.device.createSampler();\n      case 'compareSamp':\n        return this.device.createSampler({ compare: 'never' });\n      case 'sampledTex':\n        return this.getSampledTexture(1).createView();\n      case 'sampledTexMS':\n        return this.getSampledTexture(4).createView();\n      case 'readonlyStorageTex':\n      case 'writeonlyStorageTex':\n      case 'readwriteStorageTex':\n        return this.getStorageTexture('r32float').createView();\n    }\n  }\n\n  /** Create an arbitrarily-sized GPUBuffer with the STORAGE usage from mismatched device. */\n  getDeviceMismatchedStorageBuffer() {\n    return this.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n    this.mismatchedDevice, this.mismatchedDevice.createBuffer, [{ size: 4, usage: GPUBufferUsage.STORAGE }], () => this.mismatchedDevice.createBuffer({ size: 4, usage: GPUBufferUsage.STORAGE }))\n    );\n  }\n\n  /** Create an arbitrarily-sized GPUBuffer with the UNIFORM usage from mismatched device. */\n  getDeviceMismatchedUniformBuffer() {\n    return this.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n    this.mismatchedDevice, this.mismatchedDevice.createBuffer, [{ size: 4, usage: GPUBufferUsage.UNIFORM }], () => this.mismatchedDevice.createBuffer({ size: 4, usage: GPUBufferUsage.UNIFORM }))\n    );\n  }\n\n  /** Return a GPUTexture with descriptor from mismatched device. */\n  getDeviceMismatchedTexture(descriptor) {\n    return this.trackForCleanup(this.mismatchedDevice.createTexture(descriptor));\n  }\n\n  /** Return an arbitrarily-configured GPUTexture with the `SAMPLED` usage from mismatched device. */\n  getDeviceMismatchedSampledTexture(sampleCount = 1) {\n    return this.getDeviceMismatchedTexture({\n      size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING,\n      sampleCount\n    });\n  }\n\n  /** Return an arbitrarily-configured GPUTexture with the `STORAGE` usage from mismatched device. */\n  getDeviceMismatchedStorageTexture(format) {\n    return this.getDeviceMismatchedTexture({\n      size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n      format,\n      usage: GPUTextureUsage.STORAGE_BINDING\n    });\n  }\n\n  /** Return an arbitrarily-configured GPUTexture with the `RENDER_ATTACHMENT` usage from mismatched device. */\n  getDeviceMismatchedRenderTexture(sampleCount = 1) {\n    return this.getDeviceMismatchedTexture({\n      size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      sampleCount\n    });\n  }\n\n  getDeviceMismatchedBindingResource(bindingType) {\n    switch (bindingType) {\n      case 'uniformBuf':\n        return { buffer: this.getDeviceMismatchedUniformBuffer() };\n      case 'storageBuf':\n        return { buffer: this.getDeviceMismatchedStorageBuffer() };\n      case 'filtSamp':\n        return this.mismatchedDevice.createSampler({ minFilter: 'linear' });\n      case 'nonFiltSamp':\n        return this.mismatchedDevice.createSampler();\n      case 'compareSamp':\n        return this.mismatchedDevice.createSampler({ compare: 'never' });\n      case 'sampledTex':\n        return this.getDeviceMismatchedSampledTexture(1).createView();\n      case 'sampledTexMS':\n        return this.getDeviceMismatchedSampledTexture(4).createView();\n      case 'readonlyStorageTex':\n      case 'writeonlyStorageTex':\n      case 'readwriteStorageTex':\n        return this.getDeviceMismatchedStorageTexture('r32float').createView();\n    }\n  }\n\n  /** Return a no-op shader code snippet for the specified shader stage. */\n  getNoOpShaderCode(stage) {\n    switch (stage) {\n      case 'VERTEX':\n        return `\n          @vertex fn main() -> @builtin(position) vec4<f32> {\n            return vec4<f32>();\n          }\n        `;\n      case 'FRAGMENT':\n        return `@fragment fn main() {}`;\n      case 'COMPUTE':\n        return `@compute @workgroup_size(1) fn main() {}`;\n    }\n  }\n\n  /** Create a GPURenderPipeline in the specified state. */\n  createRenderPipelineWithState(state) {\n    return state === 'valid' ? this.createNoOpRenderPipeline() : this.createErrorRenderPipeline();\n  }\n\n  /** Return a GPURenderPipeline with default options and no-op vertex and fragment shaders. */\n  createNoOpRenderPipeline(\n  layout = 'auto',\n  colorFormat = 'rgba8unorm')\n  {\n    return this.device.createRenderPipeline({\n      layout,\n      vertex: {\n        module: this.device.createShaderModule({\n          code: this.getNoOpShaderCode('VERTEX')\n        }),\n        entryPoint: 'main'\n      },\n      fragment: {\n        module: this.device.createShaderModule({\n          code: this.getNoOpShaderCode('FRAGMENT')\n        }),\n        entryPoint: 'main',\n        targets: [{ format: colorFormat, writeMask: 0 }]\n      },\n      primitive: { topology: 'triangle-list' }\n    });\n  }\n\n  /** Return an invalid GPURenderPipeline. */\n  createErrorRenderPipeline() {\n    this.device.pushErrorScope('validation');\n    const pipeline = this.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: this.device.createShaderModule({\n          code: ''\n        }),\n        entryPoint: ''\n      }\n    });\n    void this.device.popErrorScope();\n    return pipeline;\n  }\n\n  /** Return a GPUComputePipeline with a no-op shader. */\n  createNoOpComputePipeline(\n  layout = 'auto')\n  {\n    return this.device.createComputePipeline({\n      layout,\n      compute: {\n        module: this.device.createShaderModule({\n          code: this.getNoOpShaderCode('COMPUTE')\n        }),\n        entryPoint: 'main'\n      }\n    });\n  }\n\n  /** Return an invalid GPUComputePipeline. */\n  createErrorComputePipeline() {\n    this.device.pushErrorScope('validation');\n    const pipeline = this.device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: this.device.createShaderModule({\n          code: ''\n        }),\n        entryPoint: ''\n      }\n    });\n    void this.device.popErrorScope();\n    return pipeline;\n  }\n\n  /** Return an invalid GPUShaderModule. */\n  createInvalidShaderModule() {\n    this.device.pushErrorScope('validation');\n    const code = 'deadbeaf'; // Something make no sense\n    const shaderModule = this.device.createShaderModule({ code });\n    void this.device.popErrorScope();\n    return shaderModule;\n  }\n\n  /** Helper for testing createRenderPipeline(Async) validation */\n  doCreateRenderPipelineTest(\n  isAsync,\n  _success,\n  descriptor,\n  errorTypeName = 'GPUPipelineError')\n  {\n    if (isAsync) {\n      if (_success) {\n        this.shouldResolve(this.device.createRenderPipelineAsync(descriptor));\n      } else {\n        this.shouldReject(errorTypeName, this.device.createRenderPipelineAsync(descriptor));\n      }\n    } else {\n      if (errorTypeName === 'GPUPipelineError') {\n        this.expectValidationError(() => {\n          this.device.createRenderPipeline(descriptor);\n        }, !_success);\n      } else {\n        this.shouldThrow(_success ? false : errorTypeName, () => {\n          this.device.createRenderPipeline(descriptor);\n        });\n      }\n    }\n  }\n\n  /** Helper for testing createComputePipeline(Async) validation */\n  doCreateComputePipelineTest(\n  isAsync,\n  _success,\n  descriptor,\n  errorTypeName = 'GPUPipelineError')\n  {\n    if (isAsync) {\n      if (_success) {\n        this.shouldResolve(this.device.createComputePipelineAsync(descriptor));\n      } else {\n        this.shouldReject(errorTypeName, this.device.createComputePipelineAsync(descriptor));\n      }\n    } else {\n      if (errorTypeName === 'GPUPipelineError') {\n        this.expectValidationError(() => {\n          this.device.createComputePipeline(descriptor);\n        }, !_success);\n      } else {\n        this.shouldThrow(_success ? false : errorTypeName, () => {\n          this.device.createComputePipeline(descriptor);\n        });\n      }\n    }\n  }\n}"],"mappings":"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","ignoreList":[]}