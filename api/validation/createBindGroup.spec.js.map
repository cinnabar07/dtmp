{"version":3,"file":"createBindGroup.spec.js","names":["description","makeTestGroup","assert","makeValueTestVariant","unreachable","allBindingEntries","bindingTypeInfo","bufferBindingEntries","bufferBindingTypeInfo","kBindableResources","kBufferBindingTypes","kBufferUsages","kCompareFunctions","kSamplerBindingTypes","kTextureUsages","kTextureViewDimensions","sampledAndStorageBindingEntries","texBindingTypeInfo","GPUConst","kAllTextureFormats","kTextureFormatInfo","kResourceStates","getTextureDimensionFromView","ValidationTest","clone","descriptor","JSON","parse","stringify","g","kStorageTextureFormats","filter","f","color","storage","test","desc","paramsSubcasesOnly","u","combine","fn","t","layoutEntryCount","bindGroupEntryCount","params","layoutEntries","i","push","binding","visibility","GPUShaderStage","COMPUTE","buffer","type","bindGroupLayout","device","createBindGroupLayout","entries","resource","getStorageBuffer","shouldError","expectValidationError","createBindGroup","layout","layoutBinding","resourceType","entry","info","getBindingResource","IsStorageTextureResourceType","resourceBindingIsCompatible","unless","usage","TextureUsage","STORAGE_BINDING","FRAGMENT","appliedUsage","RENDER_ATTACHMENT","size","width","height","depthOrArrayLayers","format","sampleCount","createTextureTracked","createView","sampleType","texture","goodDescriptor","GPUTextureUsage","TEXTURE_BINDING","mismatchedTextureFormats","mismatchedTextureFormat","badDescriptor","p","viewDimension","beginSubcases","dimension","storageTexture","access","skipIfTextureViewDimensionNotSupported","isCompatibility","skipIf","textureView","multisampled","undefined","isValid","offset","_success","createBufferTracked","GPUBufferUsage","STORAGE","expand","minBindingSize","storageBuffer","state","bgl","validStages","createBufferWithState","createTextureWithState","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","mismatched","sourceDevice","mismatchedDevice","ShaderStage","VERTEX","getUniformBuffer","sampler","combineWithParams","resource0Mismatched","resource1Mismatched","resource0","getDeviceMismatchedBindingResource","resource1","usage0","usage1","baseMipLevel","mipLevelCount","MIP_LEVEL_COUNT","storageTextureFormat","resourceFormat","skipIfTextureFormatNotUsableAsStorageTexture","BufferUsage","MAP_READ","MAP_WRITE","UNIFORM","add","mult","offsetAddMult","minAlignment","limits","base","limit","bindingSize","maxBindingSize","offsetMult","bufferSizeAddition","bufferSize","effectiveBindingSize","createSampler","bgType","compareFunction","compare"],"sources":["../../../../src/webgpu/api/validation/createBindGroup.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\n  createBindGroup validation tests.\n\n  TODO: Ensure sure tests cover all createBindGroup validation rules.\n`;import { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { assert, makeValueTestVariant, unreachable } from '../../../common/util/util.js';\nimport {\n  allBindingEntries,\n\n  bindingTypeInfo,\n  bufferBindingEntries,\n  bufferBindingTypeInfo,\n  kBindableResources,\n  kBufferBindingTypes,\n  kBufferUsages,\n  kCompareFunctions,\n  kSamplerBindingTypes,\n  kTextureUsages,\n  kTextureViewDimensions,\n  sampledAndStorageBindingEntries,\n  texBindingTypeInfo } from\n'../../capability_info.js';\nimport { GPUConst } from '../../constants.js';\nimport { kAllTextureFormats, kTextureFormatInfo } from '../../format_info.js';\nimport { kResourceStates } from '../../gpu_test.js';\nimport { getTextureDimensionFromView } from '../../util/texture/base.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nfunction clone(descriptor) {\n  return JSON.parse(JSON.stringify(descriptor));\n}\n\nexport const g = makeTestGroup(ValidationTest);\n\nconst kStorageTextureFormats = kAllTextureFormats.filter((f) => kTextureFormatInfo[f].color?.storage);\n\ng.test('binding_count_mismatch').\ndesc('Test that the number of entries must match the number of entries in the BindGroupLayout.').\nparamsSubcasesOnly((u) =>\nu //\n.combine('layoutEntryCount', [1, 2, 3]).\ncombine('bindGroupEntryCount', [1, 2, 3])\n).\nfn((t) => {\n  const { layoutEntryCount, bindGroupEntryCount } = t.params;\n\n  const layoutEntries = [];\n  for (let i = 0; i < layoutEntryCount; ++i) {\n    layoutEntries.push({\n      binding: i,\n      visibility: GPUShaderStage.COMPUTE,\n      buffer: { type: 'storage' }\n    });\n  }\n  const bindGroupLayout = t.device.createBindGroupLayout({ entries: layoutEntries });\n\n  const entries = [];\n  for (let i = 0; i < bindGroupEntryCount; ++i) {\n    entries.push({\n      binding: i,\n      resource: { buffer: t.getStorageBuffer() }\n    });\n  }\n\n  const shouldError = layoutEntryCount !== bindGroupEntryCount;\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries,\n      layout: bindGroupLayout\n    });\n  }, shouldError);\n});\n\ng.test('binding_must_be_present_in_layout').\ndesc(\n  'Test that the binding slot for each entry matches a binding slot defined in the BindGroupLayout.'\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('layoutBinding', [0, 1, 2]).\ncombine('binding', [0, 1, 2])\n).\nfn((t) => {\n  const { layoutBinding, binding } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    { binding: layoutBinding, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]\n\n  });\n\n  const descriptor = {\n    entries: [{ binding, resource: { buffer: t.getStorageBuffer() } }],\n    layout: bindGroupLayout\n  };\n\n  const shouldError = layoutBinding !== binding;\n  t.expectValidationError(() => {\n    t.device.createBindGroup(descriptor);\n  }, shouldError);\n});\n\ng.test('binding_must_contain_resource_defined_in_layout').\ndesc(\n  'Test that only compatible resource types specified in the BindGroupLayout are allowed for each entry.'\n).\nparams((u) =>\nu //\n.combine('resourceType', kBindableResources).\ncombine('entry', allBindingEntries(false))\n).\nfn((t) => {\n  const { resourceType, entry } = t.params;\n  const info = bindingTypeInfo(entry);\n\n  const layout = t.device.createBindGroupLayout({\n    entries: [{ binding: 0, visibility: GPUShaderStage.COMPUTE, ...entry }]\n  });\n\n  const resource = t.getBindingResource(resourceType);\n\n  const IsStorageTextureResourceType = (resourceType) => {\n    switch (resourceType) {\n      case 'readonlyStorageTex':\n      case 'readwriteStorageTex':\n      case 'writeonlyStorageTex':\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  let resourceBindingIsCompatible;\n  switch (info.resource) {\n    // Either type of sampler may be bound to a filtering sampler binding.\n    case 'filtSamp':\n      resourceBindingIsCompatible = resourceType === 'filtSamp' || resourceType === 'nonFiltSamp';\n      break;\n    // But only non-filtering samplers can be used with non-filtering sampler bindings.\n    case 'nonFiltSamp':\n      resourceBindingIsCompatible = resourceType === 'nonFiltSamp';\n      break;\n    case 'readonlyStorageTex':\n    case 'readwriteStorageTex':\n    case 'writeonlyStorageTex':\n      resourceBindingIsCompatible = IsStorageTextureResourceType(resourceType);\n      break;\n    default:\n      resourceBindingIsCompatible = info.resource === resourceType;\n      break;\n  }\n  t.expectValidationError(() => {\n    t.device.createBindGroup({ layout, entries: [{ binding: 0, resource }] });\n  }, !resourceBindingIsCompatible);\n});\n\ng.test('texture_binding_must_have_correct_usage').\ndesc('Tests that texture bindings must have the correct usage.').\nparamsSubcasesOnly((u) =>\nu //\n.combine('entry', sampledAndStorageBindingEntries(false)).\ncombine('usage', kTextureUsages).\nunless(({ entry, usage }) => {\n  const info = texBindingTypeInfo(entry);\n  // Can't create the texture for this (usage=STORAGE_BINDING and sampleCount=4), so skip.\n  return usage === GPUConst.TextureUsage.STORAGE_BINDING && info.resource === 'sampledTexMS';\n})\n).\nfn((t) => {\n  const { entry, usage } = t.params;\n  const info = texBindingTypeInfo(entry);\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [{ binding: 0, visibility: GPUShaderStage.FRAGMENT, ...entry }]\n  });\n\n  // The `RENDER_ATTACHMENT` usage must be specified if sampleCount > 1 according to WebGPU SPEC.\n  const appliedUsage =\n  info.resource === 'sampledTexMS' ? usage | GPUConst.TextureUsage.RENDER_ATTACHMENT : usage;\n\n  const descriptor = {\n    size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n    format: 'r32float',\n    usage: appliedUsage,\n    sampleCount: info.resource === 'sampledTexMS' ? 4 : 1\n  };\n  const resource = t.createTextureTracked(descriptor).createView();\n\n  const shouldError = (usage & info.usage) === 0;\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource }],\n      layout: bindGroupLayout\n    });\n  }, shouldError);\n});\n\ng.test('texture_must_have_correct_component_type').\ndesc(\n  `\n    Tests that texture bindings must have a format that matches the sample type specified in the BindGroupLayout.\n    - Tests a compatible format for every sample type\n    - Tests an incompatible format for every sample type`\n).\nparams((u) => u.combine('sampleType', ['float', 'sint', 'uint'])).\nfn((t) => {\n  const { sampleType } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      texture: { sampleType }\n    }]\n\n  });\n\n  let format;\n  if (sampleType === 'float') {\n    format = 'r8unorm';\n  } else if (sampleType === 'sint') {\n    format = 'r8sint';\n  } else if (sampleType === 'uint') {\n    format = 'r8uint';\n  } else {\n    unreachable('Unexpected texture component type');\n  }\n\n  const goodDescriptor = {\n    size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n    format,\n    usage: GPUTextureUsage.TEXTURE_BINDING\n  };\n\n  // Control case\n  t.device.createBindGroup({\n    entries: [\n    {\n      binding: 0,\n      resource: t.createTextureTracked(goodDescriptor).createView()\n    }],\n\n    layout: bindGroupLayout\n  });\n\n  function* mismatchedTextureFormats() {\n    if (sampleType !== 'float') {\n      yield 'r8unorm';\n    }\n    if (sampleType !== 'sint') {\n      yield 'r8sint';\n    }\n    if (sampleType !== 'uint') {\n      yield 'r8uint';\n    }\n  }\n\n  // Mismatched texture binding formats are not valid.\n  for (const mismatchedTextureFormat of mismatchedTextureFormats()) {\n    const badDescriptor = clone(goodDescriptor);\n    badDescriptor.format = mismatchedTextureFormat;\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: t.createTextureTracked(badDescriptor).createView() }],\n        layout: bindGroupLayout\n      });\n    });\n  }\n});\n\ng.test('texture_must_have_correct_dimension').\ndesc(\n  `\n    Test that bound texture views match the dimensions supplied in the BindGroupLayout\n      - Test for every GPUTextureViewDimension\n      - Test for both TEXTURE_BINDING and STORAGE_BINDING.\n  `\n).\nparams((u) =>\nu.\ncombine('usage', [\nGPUConst.TextureUsage.TEXTURE_BINDING,\nGPUConst.TextureUsage.STORAGE_BINDING]\n).\ncombine('viewDimension', kTextureViewDimensions).\nunless(\n  (p) =>\n  p.usage === GPUConst.TextureUsage.STORAGE_BINDING && (\n  p.viewDimension === 'cube' || p.viewDimension === 'cube-array')\n).\nbeginSubcases().\ncombine('dimension', kTextureViewDimensions)\n).\nfn((t) => {\n  const { usage, viewDimension, dimension } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    usage === GPUTextureUsage.TEXTURE_BINDING ?\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      texture: { viewDimension }\n    } :\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      storageTexture: { access: 'write-only', format: 'rgba8unorm', viewDimension }\n    }]\n\n  });\n\n  let height = 16;\n  let depthOrArrayLayers = 6;\n  if (dimension === '1d') {\n    height = 1;\n    depthOrArrayLayers = 1;\n  }\n\n  const texture = t.createTextureTracked({\n    size: { width: 16, height, depthOrArrayLayers },\n    format: 'rgba8unorm',\n    usage,\n    dimension: getTextureDimensionFromView(dimension)\n  });\n\n  t.skipIfTextureViewDimensionNotSupported(viewDimension, dimension);\n  if (t.isCompatibility && texture.dimension === '2d') {\n    if (depthOrArrayLayers === 1) {\n      t.skipIf(\n        viewDimension !== '2d',\n        '1 layer 2d textures default to textureBindingViewDimension: \"2d\" in compat mode'\n      );\n    } else {\n      t.skipIf(\n        viewDimension !== '2d-array',\n        '> 1 layer 2d textures default to textureBindingViewDimension \"2d-array\" in compat mode'\n      );\n    }\n  }\n\n  const shouldError = viewDimension !== dimension;\n  const textureView = texture.createView({ dimension });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: textureView }],\n      layout: bindGroupLayout\n    });\n  }, shouldError);\n});\n\ng.test('multisampled_validation').\ndesc(\n  `\n    Test that the sample count of the texture is greater than 1 if the BindGroup entry's\n    multisampled is true. Otherwise, the texture's sampleCount should be 1.\n  `\n).\nparams((u) =>\nu //\n.combine('multisampled', [true, false]).\nbeginSubcases().\ncombine('sampleCount', [1, 4])\n).\nfn((t) => {\n  const { multisampled, sampleCount } = t.params;\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      texture: { multisampled, sampleType: multisampled ? 'unfilterable-float' : undefined }\n    }]\n\n  });\n\n  const texture = t.createTextureTracked({\n    size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,\n    sampleCount\n  });\n\n  const isValid = !multisampled && sampleCount === 1 || multisampled && sampleCount > 1;\n\n  const textureView = texture.createView();\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: textureView }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});\n\ng.test('buffer_offset_and_size_for_bind_groups_match').\ndesc(\n  `\n    Test that a buffer binding's [offset, offset + size) must be contained in the BindGroup entry's buffer.\n    - Test for various offsets and sizes`\n).\nparamsSubcasesOnly([\n{ offset: 0, size: 512, _success: true }, // offset 0 is valid\n{ offset: 256, size: 256, _success: true }, // offset 256 (aligned) is valid\n\n// Touching the end of the buffer\n{ offset: 0, size: 1024, _success: true },\n{ offset: 0, size: undefined, _success: true },\n{ offset: 256 * 3, size: 256, _success: true },\n{ offset: 256 * 3, size: undefined, _success: true },\n\n// Zero-sized bindings\n{ offset: 0, size: 0, _success: false },\n{ offset: 256, size: 0, _success: false },\n{ offset: 1024, size: 0, _success: false },\n{ offset: 1024, size: undefined, _success: false },\n\n// Unaligned buffer offset is invalid\n{ offset: 1, size: 256, _success: false },\n{ offset: 1, size: undefined, _success: false },\n{ offset: 128, size: 256, _success: false },\n{ offset: 255, size: 256, _success: false },\n\n// Out-of-bounds\n{ offset: 256 * 5, size: 0, _success: false }, // offset is OOB\n{ offset: 0, size: 256 * 5, _success: false }, // size is OOB\n{ offset: 1024, size: 1, _success: false } // offset+size is OOB\n]).\nfn((t) => {\n  const { offset, size, _success } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [{ binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }]\n  });\n\n  const buffer = t.createBufferTracked({\n    size: 1024,\n    usage: GPUBufferUsage.STORAGE\n  });\n\n  const descriptor = {\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer, offset, size }\n    }],\n\n    layout: bindGroupLayout\n  };\n\n  if (_success) {\n    // Control case\n    t.device.createBindGroup(descriptor);\n  } else {\n    // Buffer offset and/or size don't match in bind groups.\n    t.expectValidationError(() => {\n      t.device.createBindGroup(descriptor);\n    });\n  }\n});\n\ng.test('minBindingSize').\ndesc('Tests that minBindingSize is correctly enforced.').\nparamsSubcasesOnly((u) =>\nu //\n.combine('minBindingSize', [undefined, 4, 8, 256]).\nexpand('size', ({ minBindingSize }) =>\nminBindingSize !== undefined ?\n[minBindingSize - 4, minBindingSize, minBindingSize + 4] :\n[4, 256]\n)\n).\nfn((t) => {\n  const { size, minBindingSize } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      buffer: {\n        type: 'storage',\n        minBindingSize\n      }\n    }]\n\n  });\n\n  const storageBuffer = t.createBufferTracked({\n    size,\n    usage: GPUBufferUsage.STORAGE\n  });\n\n  t.expectValidationError(\n    () => {\n      t.device.createBindGroup({\n        layout: bindGroupLayout,\n        entries: [\n        {\n          binding: 0,\n          resource: { buffer: storageBuffer }\n        }]\n\n      });\n    },\n    minBindingSize !== undefined && size < minBindingSize\n  );\n});\n\ng.test('buffer,resource_state').\ndesc('Test bind group creation with various buffer resource states').\nparamsSubcasesOnly((u) =>\nu.combine('state', kResourceStates).combine('entry', bufferBindingEntries(true))\n).\nfn((t) => {\n  const { state, entry } = t.params;\n\n  assert(entry.buffer !== undefined);\n  const info = bufferBindingTypeInfo(entry.buffer);\n\n  const bgl = t.device.createBindGroupLayout({\n    entries: [\n    {\n      ...entry,\n      binding: 0,\n      visibility: info.validStages\n    }]\n\n  });\n\n  const buffer = t.createBufferWithState(state, {\n    usage: info.usage,\n    size: 4\n  });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      layout: bgl,\n      entries: [\n      {\n        binding: 0,\n        resource: {\n          buffer\n        }\n      }]\n\n    });\n  }, state === 'invalid');\n});\n\ng.test('texture,resource_state').\ndesc('Test bind group creation with various texture resource states').\nparamsSubcasesOnly((u) =>\nu.combine('state', kResourceStates).combine('entry', sampledAndStorageBindingEntries(true))\n).\nfn((t) => {\n  const { state, entry } = t.params;\n  const info = texBindingTypeInfo(entry);\n\n  const bgl = t.device.createBindGroupLayout({\n    entries: [\n    {\n      ...entry,\n      binding: 0,\n      visibility: info.validStages\n    }]\n\n  });\n\n  // The `RENDER_ATTACHMENT` usage must be specified if sampleCount > 1 according to WebGPU SPEC.\n  const usage = entry.texture?.multisampled ?\n  info.usage | GPUConst.TextureUsage.RENDER_ATTACHMENT :\n  info.usage;\n  const format = entry.storageTexture !== undefined ? 'r32float' : 'rgba8unorm';\n  const texture = t.createTextureWithState(state, {\n    usage,\n    size: [1, 1],\n    format,\n    sampleCount: entry.texture?.multisampled ? 4 : 1\n  });\n\n  let textureView;\n  t.expectValidationError(() => {\n    textureView = texture.createView();\n  }, state === 'invalid');\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      layout: bgl,\n      entries: [\n      {\n        binding: 0,\n        resource: textureView\n      }]\n\n    });\n  }, state === 'invalid');\n});\n\ng.test('bind_group_layout,device_mismatch').\ndesc(\n  'Tests createBindGroup cannot be called with a bind group layout created from another device'\n).\nparamsSubcasesOnly((u) => u.combine('mismatched', [true, false])).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const mismatched = t.params.mismatched;\n\n  const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n  const bgl = sourceDevice.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUConst.ShaderStage.VERTEX,\n      buffer: {}\n    }]\n\n  });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      layout: bgl,\n      entries: [\n      {\n        binding: 0,\n        resource: { buffer: t.getUniformBuffer() }\n      }]\n\n    });\n  }, mismatched);\n});\n\ng.test('binding_resources,device_mismatch').\ndesc(\n  `\n    Tests createBindGroup cannot be called with various resources created from another device\n    Test with two resources to make sure all resources can be validated:\n    - resource0 and resource1 from same device\n    - resource0 and resource1 from different device\n\n    TODO: test GPUExternalTexture as a resource\n    `\n).\nparams((u) =>\nu.\ncombine('entry', [\n{ buffer: { type: 'storage' } },\n{ sampler: { type: 'filtering' } },\n{ texture: { multisampled: false } },\n{ storageTexture: { access: 'write-only', format: 'r32float' } },\n{ storageTexture: { access: 'read-only', format: 'r32float' } },\n{ storageTexture: { access: 'read-write', format: 'r32float' } }]\n).\nbeginSubcases().\ncombineWithParams([\n{ resource0Mismatched: false, resource1Mismatched: false }, //control case\n{ resource0Mismatched: true, resource1Mismatched: false },\n{ resource0Mismatched: false, resource1Mismatched: true }]\n)\n).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { entry, resource0Mismatched, resource1Mismatched } = t.params;\n\n  const info = bindingTypeInfo(entry);\n\n  const resource0 = resource0Mismatched ?\n  t.getDeviceMismatchedBindingResource(info.resource) :\n  t.getBindingResource(info.resource);\n  const resource1 = resource1Mismatched ?\n  t.getDeviceMismatchedBindingResource(info.resource) :\n  t.getBindingResource(info.resource);\n\n  const bgl = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: info.validStages,\n      ...entry\n    },\n    {\n      binding: 1,\n      visibility: info.validStages,\n      ...entry\n    }]\n\n  });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      layout: bgl,\n      entries: [\n      {\n        binding: 0,\n        resource: resource0\n      },\n      {\n        binding: 1,\n        resource: resource1\n      }]\n\n    });\n  }, resource0Mismatched || resource1Mismatched);\n});\n\ng.test('storage_texture,usage').\ndesc(\n  `\n    Test that the texture usage contains STORAGE_BINDING if the BindGroup entry defines\n    storageTexture.\n  `\n).\nparams((u) =>\nu //\n// If usage0 and usage1 are the same, the usage being test is a single usage. Otherwise, it's\n// a combined usage.\n.combine('usage0', kTextureUsages).\ncombine('usage1', kTextureUsages)\n).\nfn((t) => {\n  const { usage0, usage1 } = t.params;\n\n  const usage = usage0 | usage1;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      storageTexture: { access: 'write-only', format: 'rgba8unorm' }\n    }]\n\n  });\n\n  const texture = t.createTextureTracked({\n    size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage\n  });\n\n  const isValid = GPUTextureUsage.STORAGE_BINDING & usage;\n\n  const textureView = texture.createView();\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: textureView }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});\n\ng.test('storage_texture,mip_level_count').\ndesc(\n  `\n    Test that the mip level count of the resource of the BindGroup entry as a descriptor is 1 if the\n    BindGroup entry defines storageTexture. If the mip level count is not 1, a validation error\n    should be generated.\n  `\n).\nparams((u) =>\nu //\n.combine('baseMipLevel', [1, 2]).\ncombine('mipLevelCount', [1, 2])\n).\nfn((t) => {\n  const { baseMipLevel, mipLevelCount } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      storageTexture: { access: 'write-only', format: 'rgba8unorm' }\n    }]\n\n  });\n\n  const MIP_LEVEL_COUNT = 4;\n  const texture = t.createTextureTracked({\n    size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.STORAGE_BINDING,\n    mipLevelCount: MIP_LEVEL_COUNT\n  });\n\n  const textureView = texture.createView({ baseMipLevel, mipLevelCount });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: textureView }],\n      layout: bindGroupLayout\n    });\n  }, mipLevelCount !== 1);\n});\n\ng.test('storage_texture,format').\ndesc(\n  `\n    Test that the format of the storage texture is equal to resource's descriptor format if the\n    BindGroup entry defines storageTexture.\n  `\n).\nparams((u) =>\nu //\n.combine('storageTextureFormat', kStorageTextureFormats).\ncombine('resourceFormat', kStorageTextureFormats)\n).\nbeforeAllSubcases((t) => {\n  const { storageTextureFormat, resourceFormat } = t.params;\n  t.skipIfTextureFormatNotUsableAsStorageTexture(storageTextureFormat, resourceFormat);\n}).\nfn((t) => {\n  const { storageTextureFormat, resourceFormat } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      storageTexture: { access: 'write-only', format: storageTextureFormat }\n    }]\n\n  });\n\n  const texture = t.createTextureTracked({\n    size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n    format: resourceFormat,\n    usage: GPUTextureUsage.STORAGE_BINDING\n  });\n\n  const isValid = storageTextureFormat === resourceFormat;\n  const textureView = texture.createView({ format: resourceFormat });\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: textureView }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});\n\ng.test('buffer,usage').\ndesc(\n  `\n    Test that the buffer usage contains 'UNIFORM' if the BindGroup entry defines buffer and it's\n    type is 'uniform', and the buffer usage contains 'STORAGE' if the BindGroup entry's buffer type\n    is 'storage'|read-only-storage'.\n  `\n).\nparams((u) =>\nu //\n.combine('type', kBufferBindingTypes)\n// If usage0 and usage1 are the same, the usage being test is a single usage. Otherwise, it's\n// a combined usage.\n.beginSubcases().\ncombine('usage0', kBufferUsages).\ncombine('usage1', kBufferUsages).\nunless(\n  ({ usage0, usage1 }) =>\n  ((usage0 | usage1) & (GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.MAP_WRITE)) !==\n  0\n)\n).\nfn((t) => {\n  const { type, usage0, usage1 } = t.params;\n\n  const usage = usage0 | usage1;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.COMPUTE,\n      buffer: { type }\n    }]\n\n  });\n\n  const buffer = t.createBufferTracked({\n    size: 4,\n    usage\n  });\n\n  let isValid = false;\n  if (type === 'uniform') {\n    isValid = GPUBufferUsage.UNIFORM & usage ? true : false;\n  } else if (type === 'storage' || type === 'read-only-storage') {\n    isValid = GPUBufferUsage.STORAGE & usage ? true : false;\n  }\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: { buffer } }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});\n\ng.test('buffer,resource_offset').\ndesc(\n  `\n    Test that the resource.offset of the BindGroup entry is a multiple of limits.\n    'minUniformBufferOffsetAlignment|minStorageBufferOffsetAlignment' if the BindGroup entry defines\n    buffer and the buffer type is 'uniform|storage|read-only-storage'.\n  `\n).\nparams((u) =>\nu //\n.combine('type', kBufferBindingTypes).\nbeginSubcases().\ncombine('offsetAddMult', [\n{ add: 0, mult: 0 },\n{ add: 0, mult: 0.5 },\n{ add: 0, mult: 1.5 },\n{ add: 2, mult: 0 }]\n)\n).\nfn((t) => {\n  const { type, offsetAddMult } = t.params;\n  const minAlignment =\n  t.device.limits[\n  type === 'uniform' ? 'minUniformBufferOffsetAlignment' : 'minStorageBufferOffsetAlignment'];\n\n  const offset = makeValueTestVariant(minAlignment, offsetAddMult);\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.COMPUTE,\n      buffer: { type }\n    }]\n\n  });\n\n  const usage = type === 'uniform' ? GPUBufferUsage.UNIFORM : GPUBufferUsage.STORAGE;\n  const isValid = offset % minAlignment === 0;\n\n  const buffer = t.createBufferTracked({\n    size: 1024,\n    usage\n  });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: { buffer, offset } }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});\n\ng.test('buffer,resource_binding_size').\ndesc(\n  `\n    Test that the buffer binding size of the BindGroup entry is equal to or less than limits.\n    'maxUniformBufferBindingSize|maxStorageBufferBindingSize' if the BindGroup entry defines\n    buffer and the buffer type is 'uniform|storage|read-only-storage'.\n  `\n).\nparams((u) =>\nu.\ncombine('type', kBufferBindingTypes).\nbeginSubcases()\n// Test a size of 1 (for uniform buffer) or 4 (for storage and read-only storage buffer)\n// then values just within and just above the limit.\n.combine('bindingSize', [\n{ base: 1, limit: 0 },\n{ base: 0, limit: 1 },\n{ base: 1, limit: 1 }]\n)\n).\nfn((t) => {\n  const {\n    type,\n    bindingSize: { base, limit }\n  } = t.params;\n  const mult = type === 'uniform' ? 1 : 4;\n  const maxBindingSize =\n  t.device.limits[\n  type === 'uniform' ? 'maxUniformBufferBindingSize' : 'maxStorageBufferBindingSize'];\n\n  const bindingSize = base * mult + maxBindingSize * limit;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.COMPUTE,\n      buffer: { type }\n    }]\n\n  });\n\n  const usage = type === 'uniform' ? GPUBufferUsage.UNIFORM : GPUBufferUsage.STORAGE;\n  const isValid = bindingSize <= maxBindingSize;\n\n  // MAINTENANCE_TODO: Allocating the max size seems likely to fail. Refactor test.\n  const buffer = t.createBufferTracked({\n    size: maxBindingSize,\n    usage\n  });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: { buffer, size: bindingSize } }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});\n\ng.test('buffer,effective_buffer_binding_size').\ndesc(\n  `\n  Test that the effective buffer binding size of the BindGroup entry must be a multiple of 4 if the\n  buffer type is 'storage|read-only-storage', while there is no such restriction on uniform buffers.\n`\n).\nparams((u) =>\nu.\ncombine('type', kBufferBindingTypes).\nbeginSubcases().\ncombine('offsetMult', [0, 1]).\ncombine('bufferSizeAddition', [8, 10]).\ncombine('bindingSize', [undefined, 2, 4, 6])\n).\nfn((t) => {\n  const { type, offsetMult, bufferSizeAddition, bindingSize } = t.params;\n  const minAlignment =\n  t.device.limits[\n  type === 'uniform' ? 'minUniformBufferOffsetAlignment' : 'minStorageBufferOffsetAlignment'];\n\n  const offset = minAlignment * offsetMult;\n  const bufferSize = minAlignment + bufferSizeAddition;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.COMPUTE,\n      buffer: { type }\n    }]\n\n  });\n\n  const effectiveBindingSize = bindingSize ?? bufferSize - offset;\n  let usage, isValid;\n  if (type === 'uniform') {\n    usage = GPUBufferUsage.UNIFORM;\n    isValid = true;\n  } else {\n    usage = GPUBufferUsage.STORAGE;\n    isValid = effectiveBindingSize % 4 === 0;\n  }\n\n  const buffer = t.createBufferTracked({\n    size: bufferSize,\n    usage\n  });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: { buffer, offset, size: bindingSize } }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});\n\ng.test('sampler,device_mismatch').\ndesc(`Tests createBindGroup cannot be called with a sampler created from another device.`).\nparamsSubcasesOnly((u) => u.combine('mismatched', [true, false])).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { mismatched } = t.params;\n\n  const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      sampler: { type: 'filtering' }\n    }]\n\n  });\n\n  const sampler = sourceDevice.createSampler();\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: sampler }],\n      layout: bindGroupLayout\n    });\n  }, mismatched);\n});\n\ng.test('sampler,compare_function_with_binding_type').\ndesc(\n  `\n  Test that the sampler of the BindGroup has a 'compareFunction' value if the sampler type of the\n  BindGroupLayout is 'comparison'. Other sampler types should not have 'compare' field in\n  the descriptor of the sampler.\n  `\n).\nparams((u) =>\nu //\n.combine('bgType', kSamplerBindingTypes).\nbeginSubcases().\ncombine('compareFunction', [undefined, ...kCompareFunctions])\n).\nfn((t) => {\n  const { bgType, compareFunction } = t.params;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.FRAGMENT,\n      sampler: { type: bgType }\n    }]\n\n  });\n\n  const isValid =\n  bgType === 'comparison' ? compareFunction !== undefined : compareFunction === undefined;\n\n  const sampler = t.device.createSampler({ compare: compareFunction });\n\n  t.expectValidationError(() => {\n    t.device.createBindGroup({\n      entries: [{ binding: 0, resource: sampler }],\n      layout: bindGroupLayout\n    });\n  }, !isValid);\n});"],"mappings":"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","ignoreList":[]}