{"version":3,"file":"createRenderBundleEncoder.spec.js","names":["description","makeTestGroup","range","kMaxColorAttachmentsToTest","computeBytesPerSampleFromFormats","kAllTextureFormats","kDepthStencilFormats","kTextureFormatInfo","kRenderableColorTextureFormats","ValidationTest","g","test","desc","params","u","beginSubcases","combine","i","fn","t","colorFormatCount","maxColorAttachments","device","limits","skipIf","expectValidationError","createRenderBundleEncoder","colorFormats","Array","fill","beforeAllSubcases","skipIfTextureFormatNotSupported","format","info","shouldError","colorRender","byteCost","maxColorAttachmentBytesPerSample","combineWithParams","formats","length","undefined","depthStencilFormat","selectDeviceForTextureFormatOrSkipTestCase","attachment","colorRenderable","depthStencil","depth","stencil","depthReadOnly","stencilReadOnly"],"sources":["../../../../../src/webgpu/api/validation/encoding/createRenderBundleEncoder.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\ncreateRenderBundleEncoder validation tests.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { kMaxColorAttachmentsToTest } from '../../../capability_info.js';\nimport {\n  computeBytesPerSampleFromFormats,\n  kAllTextureFormats,\n  kDepthStencilFormats,\n  kTextureFormatInfo,\n  kRenderableColorTextureFormats } from\n'../../../format_info.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('attachment_state,limits,maxColorAttachments').\ndesc(`Tests that attachment state must have <= device.limits.maxColorAttachments.`).\nparams((u) =>\nu.beginSubcases().combine(\n  'colorFormatCount',\n  range(kMaxColorAttachmentsToTest, (i) => i + 1)\n)\n).\nfn((t) => {\n  const { colorFormatCount } = t.params;\n  const maxColorAttachments = t.device.limits.maxColorAttachments;\n  t.skipIf(\n    colorFormatCount > maxColorAttachments,\n    `${colorFormatCount} > maxColorAttachments: ${maxColorAttachments}`\n  );\n  t.expectValidationError(() => {\n    t.device.createRenderBundleEncoder({\n      colorFormats: Array(colorFormatCount).fill('r8unorm')\n    });\n  }, colorFormatCount > t.device.limits.maxColorAttachments);\n});\n\ng.test('attachment_state,limits,maxColorAttachmentBytesPerSample,aligned').\ndesc(\n  `\n    Tests that the total color attachment bytes per sample <=\n    device.limits.maxColorAttachmentBytesPerSample when using the same format (aligned) for multiple\n    attachments.\n    `\n).\nparams((u) =>\nu.\ncombine('format', kRenderableColorTextureFormats).\nbeginSubcases().\ncombine(\n  'colorFormatCount',\n  range(kMaxColorAttachmentsToTest, (i) => i + 1)\n)\n).\nbeforeAllSubcases((t) => {\n  t.skipIfTextureFormatNotSupported(t.params.format);\n}).\nfn((t) => {\n  const { format, colorFormatCount } = t.params;\n  const maxColorAttachments = t.device.limits.maxColorAttachments;\n  t.skipIf(\n    colorFormatCount > maxColorAttachments,\n    `${colorFormatCount} > maxColorAttachments: ${maxColorAttachments}`\n  );\n  const info = kTextureFormatInfo[format];\n  const shouldError =\n  !info.colorRender ||\n  info.colorRender.byteCost * colorFormatCount >\n  t.device.limits.maxColorAttachmentBytesPerSample;\n\n  t.expectValidationError(() => {\n    t.device.createRenderBundleEncoder({\n      colorFormats: Array(colorFormatCount).fill(format)\n    });\n  }, shouldError);\n});\n\ng.test('attachment_state,limits,maxColorAttachmentBytesPerSample,unaligned').\ndesc(\n  `\n    Tests that the total color attachment bytes per sample <=\n    device.limits.maxColorAttachmentBytesPerSample when using various sets of (potentially)\n    unaligned formats.\n    `\n).\nparams((u) =>\nu.combineWithParams([\n// Alignment causes the first 1 byte R8Unorm to become 4 bytes. So even though\n// 1+4+8+16+1 < 32, the 4 byte alignment requirement of R32Float makes the first R8Unorm\n// become 4 and 4+4+8+16+1 > 32. Re-ordering this so the R8Unorm's are at the end, however\n// is allowed: 4+8+16+1+1 < 32.\n{\n  formats: [\n  'r8unorm',\n  'r32float',\n  'rgba8unorm',\n  'rgba32float',\n  'r8unorm']\n\n},\n{\n  formats: [\n  'r32float',\n  'rgba8unorm',\n  'rgba32float',\n  'r8unorm',\n  'r8unorm']\n\n}]\n)\n).\nfn((t) => {\n  const { formats } = t.params;\n\n  t.skipIf(\n    formats.length > t.device.limits.maxColorAttachments,\n    `numColorAttachments: ${formats.length} > maxColorAttachments: ${t.device.limits.maxColorAttachments}`\n  );\n\n  const shouldError =\n  computeBytesPerSampleFromFormats(formats) > t.device.limits.maxColorAttachmentBytesPerSample;\n\n  t.expectValidationError(() => {\n    t.device.createRenderBundleEncoder({\n      colorFormats: formats\n    });\n  }, shouldError);\n});\n\ng.test('attachment_state,empty_color_formats').\ndesc(`Tests that if no colorFormats are given, a depthStencilFormat must be specified.`).\nparams((u) =>\nu.beginSubcases().combine('depthStencilFormat', [undefined, 'depth24plus-stencil8'])\n).\nfn((t) => {\n  const { depthStencilFormat } = t.params;\n  t.expectValidationError(() => {\n    t.device.createRenderBundleEncoder({\n      colorFormats: [],\n      depthStencilFormat\n    });\n  }, depthStencilFormat === undefined);\n});\n\ng.test('valid_texture_formats').\ndesc(\n  `\n    Tests that createRenderBundleEncoder only accepts valid formats for its attachments.\n      - colorFormats\n      - depthStencilFormat\n    `\n).\nparams((u) =>\nu //\n.combine('format', kAllTextureFormats).\nbeginSubcases().\ncombine('attachment', ['color', 'depthStencil'])\n).\nbeforeAllSubcases((t) => {\n  const { format } = t.params;\n  t.selectDeviceForTextureFormatOrSkipTestCase(format);\n}).\nfn((t) => {\n  const { format, attachment } = t.params;\n\n  const colorRenderable = kTextureFormatInfo[format].colorRender;\n\n  const depthStencil = kTextureFormatInfo[format].depth || kTextureFormatInfo[format].stencil;\n\n  switch (attachment) {\n    case 'color':{\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [format]\n          });\n        }, !colorRenderable);\n\n        break;\n      }\n    case 'depthStencil':{\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [],\n            depthStencilFormat: format\n          });\n        }, !depthStencil);\n\n        break;\n      }\n  }\n});\n\ng.test('depth_stencil_readonly').\ndesc(\n  `\n      Test that allow combinations of depth-stencil format, depthReadOnly and stencilReadOnly are allowed.\n    `\n).\nparams((u) =>\nu //\n.combine('depthStencilFormat', kDepthStencilFormats).\nbeginSubcases().\ncombine('depthReadOnly', [false, true]).\ncombine('stencilReadOnly', [false, true])\n).\nbeforeAllSubcases((t) => {\n  const { depthStencilFormat } = t.params;\n  t.selectDeviceForTextureFormatOrSkipTestCase(depthStencilFormat);\n}).\nfn((t) => {\n  const { depthStencilFormat, depthReadOnly, stencilReadOnly } = t.params;\n  t.device.createRenderBundleEncoder({\n    colorFormats: [],\n    depthStencilFormat,\n    depthReadOnly,\n    stencilReadOnly\n  });\n});"],"mappings":"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","ignoreList":[]}