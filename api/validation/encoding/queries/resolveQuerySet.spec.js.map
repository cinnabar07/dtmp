{"version":3,"file":"resolveQuerySet.spec.js","names":["description","makeTestGroup","GPUConst","kResourceStates","ValidationTest","g","kQueryCount","test","desc","params","u","combine","fn","t","querySetState","destinationState","shouldBeValid","shouldSubmitSuccess","querySet","createQuerySetWithState","destination","createBufferWithState","size","usage","GPUBufferUsage","QUERY_RESOLVE","encoder","createEncoder","resolveQuerySet","validateFinishAndSubmit","paramsSubcasesOnly","firstQuery","queryCount","createQuerySetTracked","type","count","createBufferTracked","validateFinish","BufferUsage","STORAGE","bufferUsage","destinationOffset","combineWithParams","bufferSize","_success","querySetMismatched","bufferMismatched","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","querySetDevice","mismatchedDevice","device","trackForCleanup","createQuerySet","bufferDevice","buffer","globalThis","_TRAMPOLINE_","createBuffer"],"sources":["../../../../../../src/webgpu/api/validation/encoding/queries/resolveQuerySet.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for resolveQuerySet.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';import { GPUConst } from '../../../../constants.js';\nimport { kResourceStates } from '../../../../gpu_test.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\nexport const kQueryCount = 2;\n\ng.test('queryset_and_destination_buffer_state').\ndesc(\n  `\nTests that resolve query set must be with valid query set and destination buffer.\n- {invalid, destroyed} GPUQuerySet results in validation error.\n- {invalid, destroyed} destination buffer results in validation error.\n  `\n).\nparams((u) =>\nu //\n.combine('querySetState', kResourceStates).\ncombine('destinationState', kResourceStates)\n).\nfn((t) => {\n  const { querySetState, destinationState } = t.params;\n\n  const shouldBeValid = querySetState !== 'invalid' && destinationState !== 'invalid';\n  const shouldSubmitSuccess = querySetState === 'valid' && destinationState === 'valid';\n\n  const querySet = t.createQuerySetWithState(querySetState);\n\n  const destination = t.createBufferWithState(destinationState, {\n    size: kQueryCount * 8,\n    usage: GPUBufferUsage.QUERY_RESOLVE\n  });\n\n  const encoder = t.createEncoder('non-pass');\n  encoder.encoder.resolveQuerySet(querySet, 0, 1, destination, 0);\n  encoder.validateFinishAndSubmit(shouldBeValid, shouldSubmitSuccess);\n});\n\ng.test('first_query_and_query_count').\ndesc(\n  `\nTests that resolve query set with invalid firstQuery and queryCount:\n- firstQuery and/or queryCount out of range\n  `\n).\nparamsSubcasesOnly([\n{ firstQuery: 0, queryCount: kQueryCount }, // control case\n{ firstQuery: 0, queryCount: kQueryCount + 1 },\n{ firstQuery: 1, queryCount: kQueryCount },\n{ firstQuery: kQueryCount, queryCount: 1 }]\n).\nfn((t) => {\n  const { firstQuery, queryCount } = t.params;\n\n  const querySet = t.createQuerySetTracked({ type: 'occlusion', count: kQueryCount });\n  const destination = t.createBufferTracked({\n    size: kQueryCount * 8,\n    usage: GPUBufferUsage.QUERY_RESOLVE\n  });\n\n  const encoder = t.createEncoder('non-pass');\n  encoder.encoder.resolveQuerySet(querySet, firstQuery, queryCount, destination, 0);\n  encoder.validateFinish(firstQuery + queryCount <= kQueryCount);\n});\n\ng.test('destination_buffer_usage').\ndesc(\n  `\nTests that resolve query set with invalid destinationBuffer:\n- Buffer usage {with, without} QUERY_RESOLVE\n  `\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('bufferUsage', [\nGPUConst.BufferUsage.STORAGE,\nGPUConst.BufferUsage.QUERY_RESOLVE // control case\n])\n).\nfn((t) => {\n  const querySet = t.createQuerySetTracked({ type: 'occlusion', count: kQueryCount });\n  const destination = t.createBufferTracked({\n    size: kQueryCount * 8,\n    usage: t.params.bufferUsage\n  });\n\n  const encoder = t.createEncoder('non-pass');\n  encoder.encoder.resolveQuerySet(querySet, 0, kQueryCount, destination, 0);\n  encoder.validateFinish(t.params.bufferUsage === GPUConst.BufferUsage.QUERY_RESOLVE);\n});\n\ng.test('destination_offset_alignment').\ndesc(\n  `\nTests that resolve query set with invalid destinationOffset:\n- destinationOffset is not a multiple of 256\n  `\n).\nparamsSubcasesOnly((u) => u.combine('destinationOffset', [0, 128, 256, 384])).\nfn((t) => {\n  const { destinationOffset } = t.params;\n  const querySet = t.createQuerySetTracked({ type: 'occlusion', count: kQueryCount });\n  const destination = t.createBufferTracked({\n    size: 512,\n    usage: GPUBufferUsage.QUERY_RESOLVE\n  });\n\n  const encoder = t.createEncoder('non-pass');\n  encoder.encoder.resolveQuerySet(querySet, 0, kQueryCount, destination, destinationOffset);\n  encoder.validateFinish(destinationOffset % 256 === 0);\n});\n\ng.test('resolve_buffer_oob').\ndesc(\n  `\nTests that resolve query set with the size oob:\n- The size of destinationBuffer - destinationOffset < queryCount * 8\n  `\n).\nparamsSubcasesOnly((u) =>\nu.combineWithParams([\n{ queryCount: 2, bufferSize: 16, destinationOffset: 0, _success: true },\n{ queryCount: 3, bufferSize: 16, destinationOffset: 0, _success: false },\n{ queryCount: 2, bufferSize: 16, destinationOffset: 256, _success: false },\n{ queryCount: 2, bufferSize: 272, destinationOffset: 256, _success: true },\n{ queryCount: 2, bufferSize: 264, destinationOffset: 256, _success: false }]\n)\n).\nfn((t) => {\n  const { queryCount, bufferSize, destinationOffset, _success } = t.params;\n  const querySet = t.createQuerySetTracked({ type: 'occlusion', count: queryCount });\n  const destination = t.createBufferTracked({\n    size: bufferSize,\n    usage: GPUBufferUsage.QUERY_RESOLVE\n  });\n\n  const encoder = t.createEncoder('non-pass');\n  encoder.encoder.resolveQuerySet(querySet, 0, queryCount, destination, destinationOffset);\n  encoder.validateFinish(_success);\n});\n\ng.test('query_set_buffer,device_mismatch').\ndesc(\n  'Tests resolveQuerySet cannot be called with a query set or destination buffer created from another device'\n).\nparamsSubcasesOnly([\n{ querySetMismatched: false, bufferMismatched: false }, // control case\n{ querySetMismatched: true, bufferMismatched: false },\n{ querySetMismatched: false, bufferMismatched: true }]\n).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { querySetMismatched, bufferMismatched } = t.params;\n\n  const kQueryCount = 1;\n\n  const querySetDevice = querySetMismatched ? t.mismatchedDevice : t.device;\n  const querySet = t.trackForCleanup(\n    querySetDevice.createQuerySet({\n      type: 'occlusion',\n      count: kQueryCount\n    })\n  );\n\n  const bufferDevice = bufferMismatched ? t.mismatchedDevice : t.device;\n  const buffer = t.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n  bufferDevice, bufferDevice.createBuffer, [{\n    size: kQueryCount * 8,\n    usage: GPUBufferUsage.QUERY_RESOLVE\n  }], () => bufferDevice.createBuffer({ size: kQueryCount * 8, usage: GPUBufferUsage.QUERY_RESOLVE }))\n  );\n\n  const encoder = t.createEncoder('non-pass');\n  encoder.encoder.resolveQuerySet(querySet, 0, kQueryCount, buffer, 0);\n  encoder.validateFinish(!(querySetMismatched || bufferMismatched));\n});"],"mappings":"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","ignoreList":[]}