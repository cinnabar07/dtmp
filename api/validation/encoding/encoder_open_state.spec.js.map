{"version":3,"file":"encoder_open_state.spec.js","names":["description","makeTestGroup","keysOf","unreachable","ValidationTest","beginRenderPassWithQuerySet","F","createRenderPipelineForTest","device","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","targets","format","writeMask","createBindGroupForTest","createBindGroup","entries","binding","resource","createSampler","createBindGroupLayout","visibility","GPUShaderStage","FRAGMENT","sampler","type","g","kEncoderCommandInfo","beginComputePass","beginRenderPass","clearBuffer","copyBufferToBuffer","copyBufferToTexture","copyTextureToBuffer","copyTextureToTexture","insertDebugMarker","popDebugGroup","pushDebugGroup","writeTimestamp","resolveQuerySet","kEncoderCommands","kRenderPassEncoderCommandInfo","draw","drawIndexed","drawIndexedIndirect","drawIndirect","multiDrawIndexedIndirect","multiDrawIndirect","setIndexBuffer","setBindGroup","setVertexBuffer","setPipeline","setViewport","setScissorRect","setBlendConstant","setStencilReference","beginOcclusionQuery","endOcclusionQuery","executeBundles","kRenderPassEncoderCommands","kRenderBundleEncoderCommandInfo","kRenderBundleEncoderCommands","kComputePassEncoderCommandInfo","dispatchWorkgroups","dispatchWorkgroupsIndirect","kComputePassEncoderCommands","test","desc","params","u","combine","beginSubcases","beforeAllSubcases","t","command","selectDeviceOrSkipTestCase","fn","finishBeforeCommand","srcBuffer","createBufferTracked","size","usage","GPUBufferUsage","COPY_SRC","GPUTextureUsage","COPY_DST","dstBuffer","QUERY_RESOLVE","textureSize","width","height","textureFormat","srcTexture","createTextureTracked","dstTexture","querySet","createQuerySetTracked","count","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","finish","expectValidationError","colorAttachments","buffer","texture","ex","skipIf","TypeError","renderPass","INDIRECT","VERTEX","pipeline","bindGroup","end","kNumTestPoints","kViewportMinDepth","kViewportMaxDepth","r","b","a","bundleEncoder","createRenderBundleEncoder","colorFormats","computePass","indirectBuffer","computePipeline","createNoOpComputePipeline"],"sources":["../../../../../src/webgpu/api/validation/encoding/encoder_open_state.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests to all commands of GPUCommandEncoder, GPUComputePassEncoder, and\nGPURenderPassEncoder when the encoder is not finished.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { unreachable } from '../../../../common/util/util.js';\nimport { ValidationTest } from '../validation_test.js';\n\nimport { beginRenderPassWithQuerySet } from './queries/common.js';\n\nclass F extends ValidationTest {\n  createRenderPipelineForTest() {\n    return this.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: this.device.createShaderModule({\n          code: `\n            @vertex fn main() -> @builtin(position) vec4<f32> {\n              return vec4<f32>();\n            }\n          `\n        }),\n        entryPoint: 'main'\n      },\n      fragment: {\n        module: this.device.createShaderModule({\n          code: `@fragment fn main() {}`\n        }),\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm', writeMask: 0 }]\n      }\n    });\n  }\n\n  createBindGroupForTest() {\n    return this.device.createBindGroup({\n      entries: [\n      {\n        binding: 0,\n        resource: this.device.createSampler()\n      }],\n\n      layout: this.device.createBindGroupLayout({\n        entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.FRAGMENT,\n          sampler: { type: 'filtering' }\n        }]\n\n      })\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\n// MAINTENANCE_TODO: Remove writeTimestamp from here once it's (hopefully) added back to the spec.\n\n\n\nconst kEncoderCommandInfo =\n\n{\n  beginComputePass: {},\n  beginRenderPass: {},\n  clearBuffer: {},\n  copyBufferToBuffer: {},\n  copyBufferToTexture: {},\n  copyTextureToBuffer: {},\n  copyTextureToTexture: {},\n  insertDebugMarker: {},\n  popDebugGroup: {},\n  pushDebugGroup: {},\n  writeTimestamp: {},\n  resolveQuerySet: {}\n};\nconst kEncoderCommands = keysOf(kEncoderCommandInfo);\n\n// MAINTENANCE_TODO: Remove multiDrawIndirect and multiDrawIndexedIndirect once https://github.com/gpuweb/gpuweb/pull/2315 is merged.\n\n\n\n\nconst kRenderPassEncoderCommandInfo =\n\n{\n  draw: {},\n  drawIndexed: {},\n  drawIndexedIndirect: {},\n  drawIndirect: {},\n  multiDrawIndexedIndirect: {},\n  multiDrawIndirect: {},\n  setIndexBuffer: {},\n  setBindGroup: {},\n  setVertexBuffer: {},\n  setPipeline: {},\n  setViewport: {},\n  setScissorRect: {},\n  setBlendConstant: {},\n  setStencilReference: {},\n  beginOcclusionQuery: {},\n  endOcclusionQuery: {},\n  executeBundles: {},\n  pushDebugGroup: {},\n  popDebugGroup: {},\n  insertDebugMarker: {}\n};\nconst kRenderPassEncoderCommands = keysOf(kRenderPassEncoderCommandInfo);\n\n\n\n\n\nconst kRenderBundleEncoderCommandInfo =\n\n{\n  draw: {},\n  drawIndexed: {},\n  drawIndexedIndirect: {},\n  drawIndirect: {},\n  setPipeline: {},\n  setBindGroup: {},\n  setIndexBuffer: {},\n  setVertexBuffer: {},\n  pushDebugGroup: {},\n  popDebugGroup: {},\n  insertDebugMarker: {}\n};\nconst kRenderBundleEncoderCommands = keysOf(kRenderBundleEncoderCommandInfo);\n\n// MAINTENANCE_TODO: remove the deprecated 'dispatch' and 'dispatchIndirect' here once they're\n// removed from `@webgpu/types`.\n\n\n\n\nconst kComputePassEncoderCommandInfo =\n\n{\n  setBindGroup: {},\n  setPipeline: {},\n  dispatchWorkgroups: {},\n  dispatchWorkgroupsIndirect: {},\n  pushDebugGroup: {},\n  popDebugGroup: {},\n  insertDebugMarker: {}\n};\nconst kComputePassEncoderCommands = keysOf(kComputePassEncoderCommandInfo);\n\ng.test('non_pass_commands').\ndesc(\n  `\n  Test that functions of GPUCommandEncoder generate a validation error if the encoder is already\n  finished.\n\n  TODO: writeTimestamp is removed from the spec so it's skipped if it TypeErrors.\n  `\n).\nparams((u) =>\nu.\ncombine('command', kEncoderCommands).\nbeginSubcases().\ncombine('finishBeforeCommand', [false, true])\n).\nbeforeAllSubcases((t) => {\n  switch (t.params.command) {\n    case 'writeTimestamp':\n      t.selectDeviceOrSkipTestCase('timestamp-query');\n      break;\n  }\n}).\nfn((t) => {\n  const { command, finishBeforeCommand } = t.params;\n\n  const srcBuffer = t.createBufferTracked({\n    size: 16,\n    usage: GPUBufferUsage.COPY_SRC | GPUTextureUsage.COPY_DST\n  });\n  const dstBuffer = t.createBufferTracked({\n    size: 16,\n    usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.QUERY_RESOLVE\n  });\n\n  const textureSize = { width: 1, height: 1 };\n  const textureFormat = 'rgba8unorm';\n  const srcTexture = t.createTextureTracked({\n    size: textureSize,\n    format: textureFormat,\n    usage: GPUTextureUsage.COPY_SRC\n  });\n  const dstTexture = t.createTextureTracked({\n    size: textureSize,\n    format: textureFormat,\n    usage: GPUTextureUsage.COPY_DST\n  });\n\n  const querySet = t.createQuerySetTracked({\n    type: command === 'writeTimestamp' ? 'timestamp' : 'occlusion',\n    count: 1\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n\n  if (finishBeforeCommand) encoder.finish();\n\n  t.expectValidationError(() => {\n    switch (command) {\n      case 'beginComputePass':\n        {\n          encoder.beginComputePass();\n        }\n        break;\n      case 'beginRenderPass':\n        {\n          encoder.beginRenderPass({ colorAttachments: [] });\n        }\n        break;\n      case 'clearBuffer':\n        {\n          encoder.clearBuffer(dstBuffer, 0, 16);\n        }\n        break;\n      case 'copyBufferToBuffer':\n        {\n          encoder.copyBufferToBuffer(srcBuffer, 0, dstBuffer, 0, 0);\n        }\n        break;\n      case 'copyBufferToTexture':\n        {\n          encoder.copyBufferToTexture(\n            { buffer: srcBuffer },\n            { texture: dstTexture },\n            textureSize\n          );\n        }\n        break;\n      case 'copyTextureToBuffer':\n        {\n          encoder.copyTextureToBuffer(\n            { texture: srcTexture },\n            { buffer: dstBuffer },\n            textureSize\n          );\n        }\n        break;\n      case 'copyTextureToTexture':\n        {\n          encoder.copyTextureToTexture(\n            { texture: srcTexture },\n            { texture: dstTexture },\n            textureSize\n          );\n        }\n        break;\n      case 'insertDebugMarker':\n        {\n          encoder.insertDebugMarker('marker');\n        }\n        break;\n      case 'pushDebugGroup':\n        {\n          encoder.pushDebugGroup('group');\n        }\n        break;\n      case 'popDebugGroup':\n        {\n          encoder.popDebugGroup();\n        }\n        break;\n      case 'writeTimestamp':\n        try {\n\n          encoder.writeTimestamp(querySet, 0);\n        } catch (ex) {\n          t.skipIf(ex instanceof TypeError, 'writeTimestamp is actually not available');\n        }\n        break;\n      case 'resolveQuerySet':\n        {\n          encoder.resolveQuerySet(querySet, 0, 1, dstBuffer, 0);\n        }\n        break;\n      default:\n        unreachable();\n    }\n  }, finishBeforeCommand);\n});\n\ng.test('render_pass_commands').\ndesc(\n  `\n    Test that functions of GPURenderPassEncoder generate a validation error if the encoder or the\n    pass is already finished.\n\n    - TODO: Consider testing: nothing before command, end before command, end+finish before command.\n  `\n).\nparams((u) =>\nu.\ncombine('command', kRenderPassEncoderCommands).\nbeginSubcases().\ncombine('finishBeforeCommand', [false, true])\n).\nbeforeAllSubcases((t) => {\n  const { command } = t.params;\n  if (command === 'multiDrawIndirect' || command === 'multiDrawIndexedIndirect') {\n    t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect');\n  }\n}).\nfn((t) => {\n  const { command, finishBeforeCommand } = t.params;\n\n  const querySet = t.createQuerySetTracked({ type: 'occlusion', count: 1 });\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const renderPass = beginRenderPassWithQuerySet(t, encoder, querySet);\n\n  const buffer = t.createBufferTracked({\n    size: 12,\n    usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.VERTEX\n  });\n\n  const pipeline = t.createRenderPipelineForTest();\n\n  const bindGroup = t.createBindGroupForTest();\n\n  if (finishBeforeCommand) {\n    renderPass.end();\n    encoder.finish();\n  }\n\n  t.expectValidationError(() => {\n    switch (command) {\n      case 'draw':\n        {\n          renderPass.draw(1);\n        }\n        break;\n      case 'drawIndexed':\n        {\n          renderPass.drawIndexed(1);\n        }\n        break;\n      case 'drawIndirect':\n        {\n          renderPass.drawIndirect(buffer, 1);\n        }\n        break;\n      case 'setIndexBuffer':\n        {\n          renderPass.setIndexBuffer(buffer, 'uint32');\n        }\n        break;\n      case 'drawIndexedIndirect':\n        {\n          renderPass.drawIndexedIndirect(buffer, 0);\n        }\n        break;\n      case 'multiDrawIndirect':\n        {\n\n          renderPass.multiDrawIndirect(buffer, 0, 1);\n        }\n        break;\n      case 'multiDrawIndexedIndirect':\n        {\n\n          renderPass.multiDrawIndexedIndirect(buffer, 0, 1);\n        }\n        break;\n      case 'setBindGroup':\n        {\n          renderPass.setBindGroup(0, bindGroup);\n        }\n        break;\n      case 'setVertexBuffer':\n        {\n          renderPass.setVertexBuffer(1, buffer);\n        }\n        break;\n      case 'setPipeline':\n        {\n          renderPass.setPipeline(pipeline);\n        }\n        break;\n      case 'setViewport':\n        {\n          const kNumTestPoints = 8;\n          const kViewportMinDepth = 0;\n          const kViewportMaxDepth = 1;\n          renderPass.setViewport(0, 0, kNumTestPoints, 0, kViewportMinDepth, kViewportMaxDepth);\n        }\n        break;\n      case 'setScissorRect':\n        {\n          renderPass.setScissorRect(0, 0, 0, 0);\n        }\n        break;\n      case 'setBlendConstant':\n        {\n          renderPass.setBlendConstant({ r: 1.0, g: 1.0, b: 1.0, a: 1.0 });\n        }\n        break;\n      case 'setStencilReference':\n        {\n          renderPass.setStencilReference(0);\n        }\n        break;\n      case 'beginOcclusionQuery':\n        {\n          renderPass.beginOcclusionQuery(0);\n        }\n        break;\n      case 'endOcclusionQuery':\n        {\n          renderPass.endOcclusionQuery();\n        }\n        break;\n      case 'executeBundles':\n        {\n          renderPass.executeBundles([]);\n        }\n        break;\n      case 'pushDebugGroup':\n        {\n          encoder.pushDebugGroup('group');\n        }\n        break;\n      case 'popDebugGroup':\n        {\n          encoder.popDebugGroup();\n        }\n        break;\n      case 'insertDebugMarker':\n        {\n          encoder.insertDebugMarker('marker');\n        }\n        break;\n      default:\n        unreachable();\n    }\n  }, finishBeforeCommand);\n});\n\ng.test('render_bundle_commands').\ndesc(\n  `\n    Test that functions of GPURenderBundleEncoder generate a validation error if the encoder or the\n    pass is already finished.\n  `\n).\nparams((u) =>\nu.\ncombine('command', kRenderBundleEncoderCommands).\nbeginSubcases().\ncombine('finishBeforeCommand', [false, true])\n).\nfn((t) => {\n  const { command, finishBeforeCommand } = t.params;\n\n  const buffer = t.createBufferTracked({\n    size: 12,\n    usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.VERTEX\n  });\n\n  const pipeline = t.createRenderPipelineForTest();\n\n  const bindGroup = t.createBindGroupForTest();\n\n  const bundleEncoder = t.device.createRenderBundleEncoder({\n    colorFormats: ['rgba8unorm']\n  });\n\n  if (finishBeforeCommand) {\n    bundleEncoder.finish();\n  }\n\n  t.expectValidationError(() => {\n    switch (command) {\n      case 'draw':\n        {\n          bundleEncoder.draw(1);\n        }\n        break;\n      case 'drawIndexed':\n        {\n          bundleEncoder.drawIndexed(1);\n        }\n        break;\n      case 'drawIndexedIndirect':\n        {\n          bundleEncoder.drawIndexedIndirect(buffer, 0);\n        }\n        break;\n      case 'drawIndirect':\n        {\n          bundleEncoder.drawIndirect(buffer, 1);\n        }\n        break;\n      case 'setPipeline':\n        {\n          bundleEncoder.setPipeline(pipeline);\n        }\n        break;\n      case 'setBindGroup':\n        {\n          bundleEncoder.setBindGroup(0, bindGroup);\n        }\n        break;\n      case 'setIndexBuffer':\n        {\n          bundleEncoder.setIndexBuffer(buffer, 'uint32');\n        }\n        break;\n      case 'setVertexBuffer':\n        {\n          bundleEncoder.setVertexBuffer(1, buffer);\n        }\n        break;\n      case 'pushDebugGroup':\n        {\n          bundleEncoder.pushDebugGroup('group');\n        }\n        break;\n      case 'popDebugGroup':\n        {\n          bundleEncoder.popDebugGroup();\n        }\n        break;\n      case 'insertDebugMarker':\n        {\n          bundleEncoder.insertDebugMarker('marker');\n        }\n        break;\n      default:\n        unreachable();\n    }\n  }, finishBeforeCommand);\n});\n\ng.test('compute_pass_commands').\ndesc(\n  `\n    Test that functions of GPUComputePassEncoder generate a validation error if the encoder or the\n    pass is already finished.\n\n    - TODO: Consider testing: nothing before command, end before command, end+finish before command.\n  `\n).\nparams((u) =>\nu.\ncombine('command', kComputePassEncoderCommands).\nbeginSubcases().\ncombine('finishBeforeCommand', [false, true])\n).\nfn((t) => {\n  const { command, finishBeforeCommand } = t.params;\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const computePass = encoder.beginComputePass();\n\n  const indirectBuffer = t.createBufferTracked({\n    size: 12,\n    usage: GPUBufferUsage.INDIRECT\n  });\n\n  const computePipeline = t.createNoOpComputePipeline();\n\n  const bindGroup = t.createBindGroupForTest();\n\n  if (finishBeforeCommand) {\n    computePass.end();\n    encoder.finish();\n  }\n\n  t.expectValidationError(() => {\n    switch (command) {\n      case 'setBindGroup':\n        {\n          computePass.setBindGroup(0, bindGroup);\n        }\n        break;\n      case 'setPipeline':\n        {\n          computePass.setPipeline(computePipeline);\n        }\n        break;\n      case 'dispatchWorkgroups':\n        {\n          computePass.dispatchWorkgroups(0);\n        }\n        break;\n      case 'dispatchWorkgroupsIndirect':\n        {\n          computePass.dispatchWorkgroupsIndirect(indirectBuffer, 0);\n        }\n        break;\n      case 'pushDebugGroup':\n        {\n          computePass.pushDebugGroup('group');\n        }\n        break;\n      case 'popDebugGroup':\n        {\n          computePass.popDebugGroup();\n        }\n        break;\n      case 'insertDebugMarker':\n        {\n          computePass.insertDebugMarker('marker');\n        }\n        break;\n      default:\n        unreachable();\n    }\n  }, finishBeforeCommand);\n});"],"mappings":"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","ignoreList":[]}