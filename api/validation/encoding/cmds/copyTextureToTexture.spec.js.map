{"version":3,"file":"copyTextureToTexture.spec.js","names":["description","makeTestGroup","kTextureUsages","kTextureDimensions","kTextureFormatInfo","kAllTextureFormats","kCompressedTextureFormats","kDepthStencilFormats","kFeaturesForFormats","filterFormatsByFeature","textureDimensionAndFormatCompatible","kResourceStates","align","lcm","ValidationTest","F","TestCopyTextureToTexture","source","destination","copySize","expectation","commandEncoder","globalThis","_TRAMPOLINE_","device","createCommandEncoder","copyTextureToTexture","expectValidationError","finish","cmd","queue","submit","GetPhysicalSubresourceSize","dimension","textureSize","format","mipLevel","virtualWidthAtLevel","Math","max","width","virtualHeightAtLevel","height","physicalWidthAtLevel","blockWidth","physicalHeightAtLevel","blockHeight","depthOrArrayLayers","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","srcState","dstState","params","textureDesc","size","usage","GPUTextureUsage","COPY_SRC","COPY_DST","srcTexture","createTextureWithState","dstTexture","isSubmitSuccess","isFinishSuccess","texture","srcMismatched","dstMismatched","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","srcTextureDevice","mismatchedDevice","trackForCleanup","createTexture","dstTextureDevice","beginSubcases","combineWithParams","srcLevelCount","dstLevelCount","srcCopyLevel","dstCopyLevel","unless","p","createTextureTracked","mipLevelCount","isSuccess","srcUsage","dstUsage","skipIf","isCompatibility","srcSampleCount","dstSampleCount","RENDER_ATTACHMENT","sampleCount","x","y","z","expand","srcCopyOrigin","dstCopyOrigin","copyWidth","copyHeight","kWidth","kHeight","origin","srcFormatFeature","dstFormatFeature","selectDeviceOrSkipTestCase","srcFormat","dstFormat","skipIfTextureFormatNotSupported","skipIfCopyTextureToTextureNotSupportedForFormat","srcFormatInfo","dstFormatInfo","srcBaseFormat","baseFormat","dstBaseFormat","feature","copyBoxOffsets","srcTextureSize","dstTextureSize","kMipLevelCount","srcSizeAtLevel","dstSizeAtLevel","copyOrigin","min","kFormat","copyDepth","srcCopyOriginZ","dstCopyOriginZ","copyExtentDepth","kArrayLayerCount","testTexture","sourceAspect","destinationAspect","kTextureSize","kValidAspectsForFormat","rgba8unorm","depth24plus","depth32float","stencil8","depth16unorm","isSourceAspectValid","includes","isDestinationAspectValid","aspect","filter","texelBlockWidth","texelBlockHeight","isSuccessForCompressedFormats"],"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/copyTextureToTexture.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\ncopyTextureToTexture tests.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kTextureUsages, kTextureDimensions } from '../../../../capability_info.js';\nimport {\n  kTextureFormatInfo,\n  kAllTextureFormats,\n  kCompressedTextureFormats,\n  kDepthStencilFormats,\n  kFeaturesForFormats,\n  filterFormatsByFeature,\n  textureDimensionAndFormatCompatible } from\n'../../../../format_info.js';\nimport { kResourceStates } from '../../../../gpu_test.js';\nimport { align, lcm } from '../../../../util/math.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  TestCopyTextureToTexture(\n  source,\n  destination,\n  copySize,\n  expectation)\n  {\n    const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", this.device, this.device.createCommandEncoder, [], () => this.device.createCommandEncoder());\n    commandEncoder.copyTextureToTexture(source, destination, copySize);\n\n    if (expectation === 'FinishError') {\n      this.expectValidationError(() => {\n        commandEncoder.finish();\n      });\n    } else {\n      const cmd = commandEncoder.finish();\n      this.expectValidationError(() => {\n        globalThis._TRAMPOLINE_(\"submit\", this.device, this.device.queue.submit, [[cmd]], () => this.device.queue.submit([cmd]));\n      }, expectation === 'SubmitError');\n    }\n  }\n\n  GetPhysicalSubresourceSize(\n  dimension,\n  textureSize,\n  format,\n  mipLevel)\n  {\n    const virtualWidthAtLevel = Math.max(textureSize.width >> mipLevel, 1);\n    const virtualHeightAtLevel = Math.max(textureSize.height >> mipLevel, 1);\n    const physicalWidthAtLevel = align(virtualWidthAtLevel, kTextureFormatInfo[format].blockWidth);\n    const physicalHeightAtLevel = align(\n      virtualHeightAtLevel,\n      kTextureFormatInfo[format].blockHeight\n    );\n\n    switch (dimension) {\n      case '1d':\n        return { width: physicalWidthAtLevel, height: 1, depthOrArrayLayers: 1 };\n      case '2d':\n        return {\n          width: physicalWidthAtLevel,\n          height: physicalHeightAtLevel,\n          depthOrArrayLayers: textureSize.depthOrArrayLayers\n        };\n      case '3d':\n        return {\n          width: physicalWidthAtLevel,\n          height: physicalHeightAtLevel,\n          depthOrArrayLayers: Math.max(textureSize.depthOrArrayLayers >> mipLevel, 1)\n        };\n    }\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('copy_with_invalid_or_destroyed_texture').\ndesc('Test copyTextureToTexture is an error when one of the textures is invalid or destroyed.').\nparamsSubcasesOnly((u) =>\nu //\n.combine('srcState', kResourceStates).\ncombine('dstState', kResourceStates)\n).\nfn((t) => {\n  const { srcState, dstState } = t.params;\n\n  const textureDesc = {\n    size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST\n  };\n\n  const srcTexture = t.createTextureWithState(srcState, textureDesc);\n  const dstTexture = t.createTextureWithState(dstState, textureDesc);\n\n  const isSubmitSuccess = srcState === 'valid' && dstState === 'valid';\n  const isFinishSuccess = srcState !== 'invalid' && dstState !== 'invalid';\n  const expectation = isFinishSuccess ?\n  isSubmitSuccess ?\n  'Success' :\n  'SubmitError' :\n  'FinishError';\n\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture },\n    { texture: dstTexture },\n    { width: 1, height: 1, depthOrArrayLayers: 1 },\n    expectation\n  );\n});\n\ng.test('texture,device_mismatch').\ndesc(\n  'Tests copyTextureToTexture cannot be called with src texture or dst texture created from another device.'\n).\nparamsSubcasesOnly([\n{ srcMismatched: false, dstMismatched: false }, // control case\n{ srcMismatched: true, dstMismatched: false },\n{ srcMismatched: false, dstMismatched: true }]\n).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { srcMismatched, dstMismatched } = t.params;\n\n  const size = { width: 4, height: 4, depthOrArrayLayers: 1 };\n  const format = 'rgba8unorm';\n\n  const srcTextureDevice = srcMismatched ? t.mismatchedDevice : t.device;\n  const srcTexture = t.trackForCleanup(\n    srcTextureDevice.createTexture({\n      size,\n      format,\n      usage: GPUTextureUsage.COPY_SRC\n    })\n  );\n\n  const dstTextureDevice = dstMismatched ? t.mismatchedDevice : t.device;\n  const dstTexture = t.trackForCleanup(\n    dstTextureDevice.createTexture({\n      size,\n      format,\n      usage: GPUTextureUsage.COPY_DST\n    })\n  );\n\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture },\n    { texture: dstTexture },\n    { width: 1, height: 1, depthOrArrayLayers: 1 },\n    srcMismatched || dstMismatched ? 'FinishError' : 'Success'\n  );\n});\n\ng.test('mipmap_level').\ndesc(\n  `\nTest copyTextureToTexture must specify mipLevels that are in range.\n- for various dimensions\n- for various mip level count in the texture\n- for various copy target mip level (in range and not in range)\n`\n).\nparams((u) =>\nu //\n.combine('dimension', kTextureDimensions).\nbeginSubcases().\ncombineWithParams([\n{ srcLevelCount: 1, dstLevelCount: 1, srcCopyLevel: 0, dstCopyLevel: 0 },\n{ srcLevelCount: 1, dstLevelCount: 1, srcCopyLevel: 1, dstCopyLevel: 0 },\n{ srcLevelCount: 1, dstLevelCount: 1, srcCopyLevel: 0, dstCopyLevel: 1 },\n{ srcLevelCount: 3, dstLevelCount: 3, srcCopyLevel: 0, dstCopyLevel: 0 },\n{ srcLevelCount: 3, dstLevelCount: 3, srcCopyLevel: 2, dstCopyLevel: 0 },\n{ srcLevelCount: 3, dstLevelCount: 3, srcCopyLevel: 3, dstCopyLevel: 0 },\n{ srcLevelCount: 3, dstLevelCount: 3, srcCopyLevel: 0, dstCopyLevel: 2 },\n{ srcLevelCount: 3, dstLevelCount: 3, srcCopyLevel: 0, dstCopyLevel: 3 }]\n).\nunless((p) => p.dimension === '1d' && (p.srcLevelCount !== 1 || p.dstLevelCount !== 1))\n).\n\nfn((t) => {\n  const { srcLevelCount, dstLevelCount, srcCopyLevel, dstCopyLevel, dimension } = t.params;\n\n  const srcTexture = t.createTextureTracked({\n    size: { width: 32, height: 1, depthOrArrayLayers: 1 },\n    dimension,\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_SRC,\n    mipLevelCount: srcLevelCount\n  });\n  const dstTexture = t.createTextureTracked({\n    size: { width: 32, height: 1, depthOrArrayLayers: 1 },\n    dimension,\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_DST,\n    mipLevelCount: dstLevelCount\n  });\n\n  const isSuccess = srcCopyLevel < srcLevelCount && dstCopyLevel < dstLevelCount;\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture, mipLevel: srcCopyLevel },\n    { texture: dstTexture, mipLevel: dstCopyLevel },\n    { width: 1, height: 1, depthOrArrayLayers: 1 },\n    isSuccess ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('texture_usage').\ndesc(\n  `\nTest that copyTextureToTexture source/destination need COPY_SRC/COPY_DST usages.\n- for all possible source texture usages\n- for all possible destination texture usages\n`\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('srcUsage', kTextureUsages).\ncombine('dstUsage', kTextureUsages)\n).\nfn((t) => {\n  const { srcUsage, dstUsage } = t.params;\n\n  const srcTexture = t.createTextureTracked({\n    size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: srcUsage\n  });\n  const dstTexture = t.createTextureTracked({\n    size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: dstUsage\n  });\n\n  const isSuccess =\n  srcUsage === GPUTextureUsage.COPY_SRC && dstUsage === GPUTextureUsage.COPY_DST;\n\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture },\n    { texture: dstTexture },\n    { width: 1, height: 1, depthOrArrayLayers: 1 },\n    isSuccess ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('sample_count').\ndesc(\n  `\nTest that textures in copyTextureToTexture must have the same sample count.\n- for various source texture sample count\n- for various destination texture sample count\n`\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('srcSampleCount', [1, 4]).\ncombine('dstSampleCount', [1, 4])\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && (t.params.srcSampleCount !== 1 || t.params.dstSampleCount !== 1),\n    'multisample textures are not copyable in compatibility mode'\n  );\n}).\nfn((t) => {\n  const { srcSampleCount, dstSampleCount } = t.params;\n\n  const srcTexture = t.createTextureTracked({\n    size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    sampleCount: srcSampleCount\n  });\n  const dstTexture = t.createTextureTracked({\n    size: { width: 4, height: 4, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\n    sampleCount: dstSampleCount\n  });\n\n  const isSuccess = srcSampleCount === dstSampleCount;\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture },\n    { texture: dstTexture },\n    { width: 4, height: 4, depthOrArrayLayers: 1 },\n    isSuccess ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('multisampled_copy_restrictions').\ndesc(\n  `\nTest that copyTextureToTexture of multisampled texture must copy a whole subresource to a whole subresource.\n- for various origin for the source and destination of the copies.\n\nNote: this is only tested for 2D textures as it is the only dimension compatible with multisampling.\nTODO: Check the source and destination constraints separately.\n`\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('srcCopyOrigin', [\n{ x: 0, y: 0, z: 0 },\n{ x: 1, y: 0, z: 0 },\n{ x: 0, y: 1, z: 0 },\n{ x: 1, y: 1, z: 0 }]\n).\ncombine('dstCopyOrigin', [\n{ x: 0, y: 0, z: 0 },\n{ x: 1, y: 0, z: 0 },\n{ x: 0, y: 1, z: 0 },\n{ x: 1, y: 1, z: 0 }]\n).\nexpand('copyWidth', (p) => [32 - Math.max(p.srcCopyOrigin.x, p.dstCopyOrigin.x), 16]).\nexpand('copyHeight', (p) => [16 - Math.max(p.srcCopyOrigin.y, p.dstCopyOrigin.y), 8])\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(t.isCompatibility, 'multisample textures are not copyable in compatibility mode');\n}).\nfn((t) => {\n  const { srcCopyOrigin, dstCopyOrigin, copyWidth, copyHeight } = t.params;\n\n  const kWidth = 32;\n  const kHeight = 16;\n\n  // Currently we don't support multisampled 2D array textures and the mipmap level count of the\n  // multisampled textures must be 1.\n  const srcTexture = t.createTextureTracked({\n    size: { width: kWidth, height: kHeight, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    sampleCount: 4\n  });\n  const dstTexture = t.createTextureTracked({\n    size: { width: kWidth, height: kHeight, depthOrArrayLayers: 1 },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\n    sampleCount: 4\n  });\n\n  const isSuccess = copyWidth === kWidth && copyHeight === kHeight;\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture, origin: srcCopyOrigin },\n    { texture: dstTexture, origin: dstCopyOrigin },\n    { width: copyWidth, height: copyHeight, depthOrArrayLayers: 1 },\n    isSuccess ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('texture_format_compatibility').\ndesc(\n  `\nTest the formats of textures in copyTextureToTexture must be copy-compatible.\n- for all source texture formats\n- for all destination texture formats\n`\n).\nparams((u) =>\nu.\ncombine('srcFormatFeature', kFeaturesForFormats).\ncombine('dstFormatFeature', kFeaturesForFormats).\nbeginSubcases().\nexpand('srcFormat', ({ srcFormatFeature }) =>\nfilterFormatsByFeature(srcFormatFeature, kAllTextureFormats)\n).\nexpand('dstFormat', ({ dstFormatFeature }) =>\nfilterFormatsByFeature(dstFormatFeature, kAllTextureFormats)\n)\n).\nbeforeAllSubcases((t) => {\n  const { srcFormatFeature, dstFormatFeature } = t.params;\n  t.selectDeviceOrSkipTestCase([srcFormatFeature, dstFormatFeature]);\n}).\nfn((t) => {\n  const { srcFormat, dstFormat } = t.params;\n\n  t.skipIfTextureFormatNotSupported(srcFormat, dstFormat);\n  t.skipIfCopyTextureToTextureNotSupportedForFormat(srcFormat, dstFormat);\n\n  const srcFormatInfo = kTextureFormatInfo[srcFormat];\n  const dstFormatInfo = kTextureFormatInfo[dstFormat];\n\n  const textureSize = {\n    width: lcm(srcFormatInfo.blockWidth, dstFormatInfo.blockWidth),\n    height: lcm(srcFormatInfo.blockHeight, dstFormatInfo.blockHeight),\n    depthOrArrayLayers: 1\n  };\n\n  const srcTexture = t.createTextureTracked({\n    size: textureSize,\n    format: srcFormat,\n    usage: GPUTextureUsage.COPY_SRC\n  });\n\n  const dstTexture = t.createTextureTracked({\n    size: textureSize,\n    format: dstFormat,\n    usage: GPUTextureUsage.COPY_DST\n  });\n\n  // Allow copy between compatible format textures.\n  const srcBaseFormat = kTextureFormatInfo[srcFormat].baseFormat ?? srcFormat;\n  const dstBaseFormat = kTextureFormatInfo[dstFormat].baseFormat ?? dstFormat;\n  const isSuccess = srcBaseFormat === dstBaseFormat;\n\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture },\n    { texture: dstTexture },\n    textureSize,\n    isSuccess ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('depth_stencil_copy_restrictions').\ndesc(\n  `\nTest that depth textures subresources must be entirely copied in copyTextureToTexture\n- for various depth-stencil formats\n- for various copy origin and size offsets\n- for various source and destination texture sizes\n- for various source and destination mip levels\n\nNote: this is only tested for 2D textures as it is the only dimension compatible with depth-stencil.\n`\n).\nparams((u) =>\nu.\ncombine('format', kDepthStencilFormats).\nbeginSubcases().\ncombine('copyBoxOffsets', [\n{ x: 0, y: 0, width: 0, height: 0 },\n{ x: 1, y: 0, width: 0, height: 0 },\n{ x: 0, y: 1, width: 0, height: 0 },\n{ x: 0, y: 0, width: -1, height: 0 },\n{ x: 0, y: 0, width: 0, height: -1 }]\n).\ncombine('srcTextureSize', [\n{ width: 64, height: 64, depthOrArrayLayers: 1 },\n{ width: 64, height: 32, depthOrArrayLayers: 1 },\n{ width: 32, height: 32, depthOrArrayLayers: 1 }]\n).\ncombine('dstTextureSize', [\n{ width: 64, height: 64, depthOrArrayLayers: 1 },\n{ width: 64, height: 32, depthOrArrayLayers: 1 },\n{ width: 32, height: 32, depthOrArrayLayers: 1 }]\n).\ncombine('srcCopyLevel', [1, 2]).\ncombine('dstCopyLevel', [0, 1])\n).\nbeforeAllSubcases((t) => {\n  const { format } = t.params;\n  t.selectDeviceOrSkipTestCase(kTextureFormatInfo[format].feature);\n}).\nfn((t) => {\n  const { format, copyBoxOffsets, srcTextureSize, dstTextureSize, srcCopyLevel, dstCopyLevel } =\n  t.params;\n  const kMipLevelCount = 3;\n\n  const srcTexture = t.createTextureTracked({\n    size: { width: srcTextureSize.width, height: srcTextureSize.height, depthOrArrayLayers: 1 },\n    format,\n    mipLevelCount: kMipLevelCount,\n    usage: GPUTextureUsage.COPY_SRC\n  });\n  const dstTexture = t.createTextureTracked({\n    size: { width: dstTextureSize.width, height: dstTextureSize.height, depthOrArrayLayers: 1 },\n    format,\n    mipLevelCount: kMipLevelCount,\n    usage: GPUTextureUsage.COPY_DST\n  });\n\n  const srcSizeAtLevel = t.GetPhysicalSubresourceSize('2d', srcTextureSize, format, srcCopyLevel);\n  const dstSizeAtLevel = t.GetPhysicalSubresourceSize('2d', dstTextureSize, format, dstCopyLevel);\n\n  const copyOrigin = { x: copyBoxOffsets.x, y: copyBoxOffsets.y, z: 0 };\n\n  const copyWidth =\n  Math.min(srcSizeAtLevel.width, dstSizeAtLevel.width) + copyBoxOffsets.width - copyOrigin.x;\n  const copyHeight =\n  Math.min(srcSizeAtLevel.height, dstSizeAtLevel.height) + copyBoxOffsets.height - copyOrigin.y;\n\n  // Depth/stencil copies must copy whole subresources.\n  const isSuccess =\n  copyOrigin.x === 0 &&\n  copyOrigin.y === 0 &&\n  copyWidth === srcSizeAtLevel.width &&\n  copyHeight === srcSizeAtLevel.height &&\n  copyWidth === dstSizeAtLevel.width &&\n  copyHeight === dstSizeAtLevel.height;\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture, origin: { x: 0, y: 0, z: 0 }, mipLevel: srcCopyLevel },\n    { texture: dstTexture, origin: copyOrigin, mipLevel: dstCopyLevel },\n    { width: copyWidth, height: copyHeight, depthOrArrayLayers: 1 },\n    isSuccess ? 'Success' : 'FinishError'\n  );\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture, origin: copyOrigin, mipLevel: srcCopyLevel },\n    { texture: dstTexture, origin: { x: 0, y: 0, z: 0 }, mipLevel: dstCopyLevel },\n    { width: copyWidth, height: copyHeight, depthOrArrayLayers: 1 },\n    isSuccess ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('copy_ranges').\ndesc(\n  `\nTest that copyTextureToTexture copy boxes must be in range of the subresource.\n- for various dimensions\n- for various offsets to a full copy for the copy origin/size\n- for various copy mip levels\n`\n).\nparams((u) =>\nu.\ncombine('dimension', kTextureDimensions)\n//.beginSubcases()\n.combine('copyBoxOffsets', [\n{ x: 0, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 1, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 1, y: 0, z: 0, width: -1, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 1, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 1, z: 0, width: 0, height: -1, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 1, width: 0, height: 1, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 2, width: 0, height: 1, depthOrArrayLayers: 0 },\n{ x: 0, y: 0, z: 0, width: 1, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 0, width: 0, height: 1, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: 1 },\n{ x: 0, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: 0 },\n{ x: 0, y: 0, z: 1, width: 0, height: 0, depthOrArrayLayers: -1 },\n{ x: 0, y: 0, z: 2, width: 0, height: 0, depthOrArrayLayers: -1 }]\n).\nunless(\n  (p) =>\n  p.dimension === '1d' && (\n  p.copyBoxOffsets.y !== 0 ||\n  p.copyBoxOffsets.z !== 0 ||\n  p.copyBoxOffsets.height !== 0 ||\n  p.copyBoxOffsets.depthOrArrayLayers !== 0)\n).\ncombine('srcCopyLevel', [0, 1, 3]).\ncombine('dstCopyLevel', [0, 1, 3]).\nunless((p) => p.dimension === '1d' && (p.srcCopyLevel !== 0 || p.dstCopyLevel !== 0))\n).\nfn((t) => {\n  const { dimension, copyBoxOffsets, srcCopyLevel, dstCopyLevel } = t.params;\n\n  const textureSize = { width: 16, height: 8, depthOrArrayLayers: 3 };\n  let mipLevelCount = 4;\n  if (dimension === '1d') {\n    mipLevelCount = 1;\n    textureSize.height = 1;\n    textureSize.depthOrArrayLayers = 1;\n  }\n  const kFormat = 'rgba8unorm';\n\n  const srcTexture = t.createTextureTracked({\n    size: textureSize,\n    format: kFormat,\n    dimension,\n    mipLevelCount,\n    usage: GPUTextureUsage.COPY_SRC\n  });\n  const dstTexture = t.createTextureTracked({\n    size: textureSize,\n    format: kFormat,\n    dimension,\n    mipLevelCount,\n    usage: GPUTextureUsage.COPY_DST\n  });\n\n  const srcSizeAtLevel = t.GetPhysicalSubresourceSize(\n    dimension,\n    textureSize,\n    kFormat,\n    srcCopyLevel\n  );\n  const dstSizeAtLevel = t.GetPhysicalSubresourceSize(\n    dimension,\n    textureSize,\n    kFormat,\n    dstCopyLevel\n  );\n\n  const copyOrigin = { x: copyBoxOffsets.x, y: copyBoxOffsets.y, z: copyBoxOffsets.z };\n\n  const copyWidth = Math.max(\n    Math.min(srcSizeAtLevel.width, dstSizeAtLevel.width) + copyBoxOffsets.width - copyOrigin.x,\n    0\n  );\n  const copyHeight = Math.max(\n    Math.min(srcSizeAtLevel.height, dstSizeAtLevel.height) + copyBoxOffsets.height - copyOrigin.y,\n    0\n  );\n  const copyDepth =\n  textureSize.depthOrArrayLayers + copyBoxOffsets.depthOrArrayLayers - copyOrigin.z;\n\n  {\n    let isSuccess =\n    copyWidth <= srcSizeAtLevel.width &&\n    copyHeight <= srcSizeAtLevel.height &&\n    copyOrigin.x + copyWidth <= dstSizeAtLevel.width &&\n    copyOrigin.y + copyHeight <= dstSizeAtLevel.height;\n\n    if (dimension === '3d') {\n      isSuccess =\n      isSuccess &&\n      copyDepth <= srcSizeAtLevel.depthOrArrayLayers &&\n      copyOrigin.z + copyDepth <= dstSizeAtLevel.depthOrArrayLayers;\n    } else {\n      isSuccess =\n      isSuccess &&\n      copyDepth <= textureSize.depthOrArrayLayers &&\n      copyOrigin.z + copyDepth <= textureSize.depthOrArrayLayers;\n    }\n\n    t.TestCopyTextureToTexture(\n      { texture: srcTexture, origin: { x: 0, y: 0, z: 0 }, mipLevel: srcCopyLevel },\n      { texture: dstTexture, origin: copyOrigin, mipLevel: dstCopyLevel },\n      { width: copyWidth, height: copyHeight, depthOrArrayLayers: copyDepth },\n      isSuccess ? 'Success' : 'FinishError'\n    );\n  }\n\n  {\n    let isSuccess =\n    copyOrigin.x + copyWidth <= srcSizeAtLevel.width &&\n    copyOrigin.y + copyHeight <= srcSizeAtLevel.height &&\n    copyWidth <= dstSizeAtLevel.width &&\n    copyHeight <= dstSizeAtLevel.height;\n\n    if (dimension === '3d') {\n      isSuccess =\n      isSuccess &&\n      copyDepth <= dstSizeAtLevel.depthOrArrayLayers &&\n      copyOrigin.z + copyDepth <= srcSizeAtLevel.depthOrArrayLayers;\n    } else {\n      isSuccess =\n      isSuccess &&\n      copyDepth <= textureSize.depthOrArrayLayers &&\n      copyOrigin.z + copyDepth <= textureSize.depthOrArrayLayers;\n    }\n\n    t.TestCopyTextureToTexture(\n      { texture: srcTexture, origin: copyOrigin, mipLevel: srcCopyLevel },\n      { texture: dstTexture, origin: { x: 0, y: 0, z: 0 }, mipLevel: dstCopyLevel },\n      { width: copyWidth, height: copyHeight, depthOrArrayLayers: copyDepth },\n      isSuccess ? 'Success' : 'FinishError'\n    );\n  }\n});\n\ng.test('copy_within_same_texture').\ndesc(\n  `\nTest that it is an error to use copyTextureToTexture from one subresource to itself.\n- for various starting source/destination array layers.\n- for various copy sizes in number of array layers\n\nTODO: Extend to check the copy is allowed between different mip levels.\nTODO: Extend to 1D and 3D textures.`\n).\nparamsSubcasesOnly((u) =>\nu //\n.combine('srcCopyOriginZ', [0, 2, 4]).\ncombine('dstCopyOriginZ', [0, 2, 4]).\ncombine('copyExtentDepth', [1, 2, 3])\n).\nfn((t) => {\n  const { srcCopyOriginZ, dstCopyOriginZ, copyExtentDepth } = t.params;\n\n  const kArrayLayerCount = 7;\n\n  const testTexture = t.createTextureTracked({\n    size: { width: 16, height: 16, depthOrArrayLayers: kArrayLayerCount },\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST\n  });\n\n  const isSuccess =\n  Math.min(srcCopyOriginZ, dstCopyOriginZ) + copyExtentDepth <=\n  Math.max(srcCopyOriginZ, dstCopyOriginZ);\n  t.TestCopyTextureToTexture(\n    { texture: testTexture, origin: { x: 0, y: 0, z: srcCopyOriginZ } },\n    { texture: testTexture, origin: { x: 0, y: 0, z: dstCopyOriginZ } },\n    { width: 16, height: 16, depthOrArrayLayers: copyExtentDepth },\n    isSuccess ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('copy_aspects').\ndesc(\n  `\nTest the validations on the member 'aspect' of GPUTexelCopyTextureInfo in CopyTextureToTexture().\n- for all the color and depth-stencil formats: the texture copy aspects must be both 'all'.\n- for all the depth-only formats: the texture copy aspects must be either 'all' or 'depth-only'.\n- for all the stencil-only formats: the texture copy aspects must be either 'all' or 'stencil-only'.\n`\n).\nparams((u) =>\nu.\ncombine('format', ['rgba8unorm', ...kDepthStencilFormats]).\nbeginSubcases().\ncombine('sourceAspect', ['all', 'depth-only', 'stencil-only']).\ncombine('destinationAspect', ['all', 'depth-only', 'stencil-only'])\n).\nbeforeAllSubcases((t) => {\n  const { format } = t.params;\n  t.selectDeviceOrSkipTestCase(kTextureFormatInfo[format].feature);\n}).\nfn((t) => {\n  const { format, sourceAspect, destinationAspect } = t.params;\n\n  const kTextureSize = { width: 16, height: 8, depthOrArrayLayers: 1 };\n\n  const srcTexture = t.createTextureTracked({\n    size: kTextureSize,\n    format,\n    usage: GPUTextureUsage.COPY_SRC\n  });\n  const dstTexture = t.createTextureTracked({\n    size: kTextureSize,\n    format,\n    usage: GPUTextureUsage.COPY_DST\n  });\n\n  // MAINTENANCE_TODO: get the valid aspects from capability_info.ts.\n  const kValidAspectsForFormat = {\n    rgba8unorm: ['all'],\n\n    // kUnsizedDepthStencilFormats\n    depth24plus: ['all', 'depth-only'],\n    'depth24plus-stencil8': ['all'],\n    'depth32float-stencil8': ['all'],\n\n    // kSizedDepthStencilFormats\n    depth32float: ['all', 'depth-only'],\n    stencil8: ['all', 'stencil-only'],\n    depth16unorm: ['all', 'depth-only']\n  };\n\n  const isSourceAspectValid = kValidAspectsForFormat[format].includes(sourceAspect);\n  const isDestinationAspectValid = kValidAspectsForFormat[format].includes(destinationAspect);\n\n  t.TestCopyTextureToTexture(\n    { texture: srcTexture, origin: { x: 0, y: 0, z: 0 }, aspect: sourceAspect },\n    { texture: dstTexture, origin: { x: 0, y: 0, z: 0 }, aspect: destinationAspect },\n    kTextureSize,\n    isSourceAspectValid && isDestinationAspectValid ? 'Success' : 'FinishError'\n  );\n});\n\ng.test('copy_ranges_with_compressed_texture_formats').\ndesc(\n  `\nTest that copyTextureToTexture copy boxes must be in range of the subresource and aligned to the block size\n- for various dimensions\n- for various offsets to a full copy for the copy origin/size\n- for various copy mip levels\n\nTODO: Express the offsets in \"block size\" so as to be able to test non-4x4 compressed formats\n`\n).\nparams((u) =>\nu.\ncombine('format', kCompressedTextureFormats).\ncombine('dimension', kTextureDimensions).\nfilter(({ dimension, format }) => textureDimensionAndFormatCompatible(dimension, format)).\nbeginSubcases().\ncombine('copyBoxOffsets', [\n{ x: 0, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 1, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 4, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 0, width: -1, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 0, width: -4, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 1, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 4, z: 0, width: 0, height: 0, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 0, width: 0, height: -1, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 0, width: 0, height: -4, depthOrArrayLayers: -2 },\n{ x: 0, y: 0, z: 0, width: 0, height: 0, depthOrArrayLayers: 0 },\n{ x: 0, y: 0, z: 1, width: 0, height: 0, depthOrArrayLayers: -1 }]\n).\ncombine('srcCopyLevel', [0, 1, 2]).\ncombine('dstCopyLevel', [0, 1, 2])\n).\nbeforeAllSubcases((t) => {\n  const { format } = t.params;\n  t.selectDeviceOrSkipTestCase(kTextureFormatInfo[format].feature);\n  t.skipIfCopyTextureToTextureNotSupportedForFormat(format);\n}).\nfn((t) => {\n  const { format, dimension, copyBoxOffsets, srcCopyLevel, dstCopyLevel } = t.params;\n  const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n\n  const kTextureSize = {\n    width: 15 * blockWidth,\n    height: 12 * blockHeight,\n    depthOrArrayLayers: 3\n  };\n  const kMipLevelCount = 4;\n\n  const srcTexture = t.createTextureTracked({\n    size: kTextureSize,\n    format,\n    dimension,\n    mipLevelCount: kMipLevelCount,\n    usage: GPUTextureUsage.COPY_SRC\n  });\n  const dstTexture = t.createTextureTracked({\n    size: kTextureSize,\n    format,\n    dimension,\n    mipLevelCount: kMipLevelCount,\n    usage: GPUTextureUsage.COPY_DST\n  });\n\n  const srcSizeAtLevel = t.GetPhysicalSubresourceSize(\n    dimension,\n    kTextureSize,\n    format,\n    srcCopyLevel\n  );\n  const dstSizeAtLevel = t.GetPhysicalSubresourceSize(\n    dimension,\n    kTextureSize,\n    format,\n    dstCopyLevel\n  );\n\n  const copyOrigin = { x: copyBoxOffsets.x, y: copyBoxOffsets.y, z: copyBoxOffsets.z };\n\n  const copyWidth = Math.max(\n    Math.min(srcSizeAtLevel.width, dstSizeAtLevel.width) + copyBoxOffsets.width - copyOrigin.x,\n    0\n  );\n  const copyHeight = Math.max(\n    Math.min(srcSizeAtLevel.height, dstSizeAtLevel.height) + copyBoxOffsets.height - copyOrigin.y,\n    0\n  );\n  const copyDepth =\n  kTextureSize.depthOrArrayLayers + copyBoxOffsets.depthOrArrayLayers - copyOrigin.z;\n\n  const texelBlockWidth = kTextureFormatInfo[format].blockWidth;\n  const texelBlockHeight = kTextureFormatInfo[format].blockHeight;\n\n  const isSuccessForCompressedFormats =\n  copyOrigin.x % texelBlockWidth === 0 &&\n  copyOrigin.y % texelBlockHeight === 0 &&\n  copyWidth % texelBlockWidth === 0 &&\n  copyHeight % texelBlockHeight === 0;\n\n  {\n    const isSuccess =\n    isSuccessForCompressedFormats &&\n    copyWidth <= srcSizeAtLevel.width &&\n    copyHeight <= srcSizeAtLevel.height &&\n    copyOrigin.x + copyWidth <= dstSizeAtLevel.width &&\n    copyOrigin.y + copyHeight <= dstSizeAtLevel.height &&\n    copyOrigin.z + copyDepth <= kTextureSize.depthOrArrayLayers;\n\n    t.TestCopyTextureToTexture(\n      { texture: srcTexture, origin: { x: 0, y: 0, z: 0 }, mipLevel: srcCopyLevel },\n      { texture: dstTexture, origin: copyOrigin, mipLevel: dstCopyLevel },\n      { width: copyWidth, height: copyHeight, depthOrArrayLayers: copyDepth },\n      isSuccess ? 'Success' : 'FinishError'\n    );\n  }\n\n  {\n    const isSuccess =\n    isSuccessForCompressedFormats &&\n    copyOrigin.x + copyWidth <= srcSizeAtLevel.width &&\n    copyOrigin.y + copyHeight <= srcSizeAtLevel.height &&\n    copyWidth <= dstSizeAtLevel.width &&\n    copyHeight <= dstSizeAtLevel.height &&\n    copyOrigin.z + copyDepth <= kTextureSize.depthOrArrayLayers;\n\n    t.TestCopyTextureToTexture(\n      { texture: srcTexture, origin: copyOrigin, mipLevel: srcCopyLevel },\n      { texture: dstTexture, origin: { x: 0, y: 0, z: 0 }, mipLevel: dstCopyLevel },\n      { width: copyWidth, height: copyHeight, depthOrArrayLayers: copyDepth },\n      isSuccess ? 'Success' : 'FinishError'\n    );\n  }\n});"],"mappings":"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","ignoreList":[]}