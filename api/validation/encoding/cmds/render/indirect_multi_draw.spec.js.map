{"version":3,"file":"indirect_multi_draw.spec.js","names":["description","kUnitCaseParamsBuilder","makeTestGroup","GPUConst","kMaxUnsignedLongValue","kMaxUnsignedLongLongValue","kResourceStates","ValidationTest","kIndirectMultiDrawTestParams","combine","F","makeIndexBuffer","createBufferTracked","size","usage","GPUBufferUsage","INDEX","g","test","desc","beforeAllSubcases","t","selectDeviceOrSkipTestCase","paramsSubcasesOnly","filter","p","useDrawCountBuffer","drawCountState","indirectState","fn","indexed","params","indirectBuffer","createBufferWithState","INDIRECT","drawCountBuffer","undefined","encoder","validateFinishAndSubmit","createEncoder","setPipeline","createNoOpRenderPipeline","setIndexBuffer","multiDrawIndexedIndirect","multiDrawIndirect","shouldBeValid","submitShouldSucceedIfValid","combineWithParams","indirectMismatched","drawCountMismatched","selectMismatchedDeviceOrSkipTestCase","indirectDevice","mismatchedDevice","device","drawCountDevice","trackForCleanup","globalThis","_TRAMPOLINE_","createBuffer","validateFinish","BufferUsage","VERTEX","indirectUsage","drawCountUsage","shouldSucceed","indirectOffset","drawCountOffset","u","expandWithParams","drawParamsSize","maxDrawCount","offset","exactRequiredSize","bufferSize","paramsSize","valid","kDrawCountSize"],"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/indirect_multi_draw.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for multiDrawIndirect/multiDrawIndexedIndirect on render pass.\n`;import { kUnitCaseParamsBuilder } from '../../../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport {\n  GPUConst,\n  kMaxUnsignedLongValue,\n  kMaxUnsignedLongLongValue } from\n'../../../../../constants.js';\nimport { kResourceStates } from '../../../../../gpu_test.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\nconst kIndirectMultiDrawTestParams = kUnitCaseParamsBuilder.\ncombine('indexed', [true, false]).\ncombine('useDrawCountBuffer', [true, false]);\n\nclass F extends ValidationTest {\n  makeIndexBuffer() {\n    return this.createBufferTracked({\n      size: 16,\n      usage: GPUBufferUsage.INDEX\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('buffers_state').\ndesc(\n  `\nTests indirect and draw count buffers must be valid.\n  `\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect');\n}).\n\nparamsSubcasesOnly(\n  kIndirectMultiDrawTestParams.\n  combine('indirectState', kResourceStates).\n  combine('drawCountState', kResourceStates)\n  // drawCountState only matters if useDrawCountBuffer=true\n  .filter((p) => p.useDrawCountBuffer || p.drawCountState === 'valid')\n  // Filter out a few unnecessary cases that would hit two errors in the same API call\n  .filter(\n    (p) =>\n    p.indirectState === 'valid' ||\n    p.drawCountState === 'valid' ||\n    p.indirectState !== p.drawCountState\n  )\n).\nfn((t) => {\n  const { indexed, indirectState, useDrawCountBuffer, drawCountState } = t.params;\n  const indirectBuffer = t.createBufferWithState(indirectState, {\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  });\n  const drawCountBuffer = useDrawCountBuffer ?\n  t.createBufferWithState(drawCountState, {\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  }) :\n  undefined;\n\n  const { encoder, validateFinishAndSubmit } = t.createEncoder('render pass');\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n  if (indexed) {\n    encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n\n    encoder.multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n  } else {\n\n    encoder.multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n  }\n\n  const shouldBeValid =\n  indirectState !== 'invalid' && (!drawCountBuffer || drawCountState !== 'invalid');\n  const submitShouldSucceedIfValid =\n  indirectState !== 'destroyed' && (!drawCountBuffer || drawCountState !== 'destroyed');\n  validateFinishAndSubmit(shouldBeValid, submitShouldSucceedIfValid);\n});\n\ng.test('buffers,device_mismatch').\ndesc(\n  'Tests multiDraw(Indexed)Indirect cannot be called with buffers created from another device'\n).\nparamsSubcasesOnly(\n  kIndirectMultiDrawTestParams.\n  combineWithParams([\n  { indirectMismatched: false, drawCountMismatched: false }, // control case\n  { indirectMismatched: true, drawCountMismatched: false },\n  { indirectMismatched: false, drawCountMismatched: true }]\n  )\n  // drawCountMismatched only matters if useDrawCountBuffer=true\n  .filter((p) => p.useDrawCountBuffer || !p.drawCountMismatched)\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect');\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { indexed, useDrawCountBuffer, indirectMismatched, drawCountMismatched } = t.params;\n\n  const indirectDevice = indirectMismatched ? t.mismatchedDevice : t.device;\n  const drawCountDevice = drawCountMismatched ? t.mismatchedDevice : t.device;\n\n  const indirectBuffer = t.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n  indirectDevice, indirectDevice.createBuffer, [{\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  }], () => indirectDevice.createBuffer({ size: 256, usage: GPUBufferUsage.INDIRECT }))\n  );\n  const drawCountBuffer = useDrawCountBuffer ?\n  t.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n  drawCountDevice, drawCountDevice.createBuffer, [{\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  }], () => drawCountDevice.createBuffer({ size: 256, usage: GPUBufferUsage.INDIRECT }))\n  ) :\n  undefined;\n\n  const { encoder, validateFinish } = t.createEncoder('render pass');\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n  if (indexed) {\n    encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n\n    encoder.multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n  } else {\n\n    encoder.multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n  }\n  validateFinish(!indirectMismatched && !drawCountMismatched);\n});\n\ng.test('indirect_buffer_usage').\ndesc(\n  `\nTests indirect and draw count buffers must have 'Indirect' usage.\n  `\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect');\n}).\nparamsSubcasesOnly(\n  kIndirectMultiDrawTestParams.\n  combine('indirectUsage', [\n  GPUConst.BufferUsage.INDIRECT,\n  GPUConst.BufferUsage.VERTEX,\n  GPUConst.BufferUsage.VERTEX | GPUConst.BufferUsage.INDIRECT]\n  ).\n  combine('drawCountUsage', [\n  GPUConst.BufferUsage.INDIRECT,\n  GPUConst.BufferUsage.VERTEX,\n  GPUConst.BufferUsage.VERTEX | GPUConst.BufferUsage.INDIRECT]\n  )\n).\nfn((t) => {\n  const { indexed, indirectUsage, useDrawCountBuffer, drawCountUsage } = t.params;\n\n  const indirectBuffer = t.createBufferTracked({\n    size: 256,\n    usage: indirectUsage\n  });\n  const drawCountBuffer = useDrawCountBuffer ?\n  t.createBufferTracked({\n    size: 256,\n    usage: drawCountUsage\n  }) :\n  undefined;\n\n  const { encoder, validateFinish } = t.createEncoder('render pass');\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n  if (indexed) {\n    encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n\n    encoder.multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n  } else {\n\n    encoder.multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer);\n  }\n  const shouldSucceed =\n  (indirectUsage & GPUBufferUsage.INDIRECT) !== 0 &&\n  (!drawCountBuffer || drawCountUsage & GPUBufferUsage.INDIRECT) !== 0;\n  validateFinish(shouldSucceed);\n});\n\ng.test('offsets_alignment').\ndesc(\n  `\nTests indirect and draw count offsets must be a multiple of 4.\n  `\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect');\n}).\nparamsSubcasesOnly(\n  kIndirectMultiDrawTestParams.combineWithParams([\n  // Valid\n  { indirectOffset: 0, drawCountOffset: 0 },\n  { indirectOffset: 4, drawCountOffset: 0 },\n  { indirectOffset: 0, drawCountOffset: 4 },\n  // Invalid\n  { indirectOffset: 2, drawCountOffset: 0 },\n  { indirectOffset: 6, drawCountOffset: 0 },\n  { indirectOffset: 0, drawCountOffset: 2 },\n  { indirectOffset: 0, drawCountOffset: 6 }]\n  )\n).\nfn((t) => {\n  const { indexed, indirectOffset, useDrawCountBuffer, drawCountOffset } = t.params;\n\n  const indirectBuffer = t.createBufferTracked({\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  });\n  const drawCountBuffer = useDrawCountBuffer ?\n  t.createBufferTracked({\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  }) :\n  undefined;\n\n  const { encoder, validateFinish } = t.createEncoder('render pass');\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n  if (indexed) {\n    encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n\n    encoder.multiDrawIndexedIndirect(\n      indirectBuffer,\n      indirectOffset,\n      1,\n      drawCountBuffer,\n      drawCountOffset\n    );\n  } else {\n\n    encoder.multiDrawIndirect(\n      indirectBuffer,\n      indirectOffset,\n      1,\n      drawCountBuffer,\n      drawCountOffset\n    );\n  }\n\n  // We need to figure out if https://github.com/gpuweb/gpuweb/pull/2315/files#r1773031950 applies.\n  validateFinish(indirectOffset % 4 === 0 && (!useDrawCountBuffer || drawCountOffset % 4 === 0));\n});\n\ng.test('indirectBuffer_range').\ndesc(\n  `\nTests multi indirect draw calls with various indirect offsets and buffer sizes without draw count buffer.\n`\n).\nparamsSubcasesOnly((u) =>\nu.\ncombine('indexed', [true, false]) //\n.expandWithParams(function* (p) {\n  const drawParamsSize = p.indexed ? 20 : 16;\n\n  // Simple OOB test cases, using a delta from the exact required size\n  for (const { maxDrawCount, offset } of [\n  { maxDrawCount: 1, offset: 0 },\n  { maxDrawCount: 1, offset: 4 },\n  { maxDrawCount: 1, offset: drawParamsSize + 4 },\n  { maxDrawCount: 2, offset: 0 },\n  { maxDrawCount: 6, offset: drawParamsSize }])\n  {\n    const exactRequiredSize = offset + maxDrawCount * drawParamsSize;\n    yield { offset, maxDrawCount, bufferSize: exactRequiredSize };\n    yield { offset, maxDrawCount, bufferSize: exactRequiredSize - 1 };\n  }\n\n  // Additional test cases\n  // - Buffer size is 0\n  yield { offset: 0, maxDrawCount: 1, bufferSize: 0 };\n  // - Buffer size is unaligned (OK)\n  yield { offset: 0, maxDrawCount: 1, bufferSize: drawParamsSize + 1 };\n  // - In-bounds, but non-multiple of 4 offset\n  yield { offset: 2, maxDrawCount: 1, bufferSize: drawParamsSize + 8 };\n  yield { offset: 6, maxDrawCount: 1, bufferSize: drawParamsSize + 8 };\n  // - Out of bounds, (offset + (drawParamsSize * maxDrawCount)) may overflow\n  yield { offset: kMaxUnsignedLongLongValue, maxDrawCount: 1, bufferSize: 1024 };\n  yield { offset: 0, maxDrawCount: kMaxUnsignedLongValue, bufferSize: 1024 };\n})\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect');\n}).\nfn((t) => {\n  const { indexed, offset, maxDrawCount, bufferSize } = t.params;\n\n  const indirectBuffer = t.createBufferTracked({\n    size: bufferSize,\n    usage: GPUBufferUsage.INDIRECT\n  });\n\n  const { encoder, validateFinish } = t.createEncoder('render pass');\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n  if (indexed) {\n    encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n\n    encoder.multiDrawIndexedIndirect(indirectBuffer, offset, maxDrawCount);\n  } else {\n\n    encoder.multiDrawIndirect(indirectBuffer, offset, maxDrawCount);\n  }\n\n  const paramsSize = indexed ? 20 : 16;\n  const exactRequiredSize = offset + maxDrawCount * paramsSize;\n  const valid = offset % 4 === 0 && bufferSize >= exactRequiredSize;\n  validateFinish(valid);\n});\n\ng.test('drawCountBuffer_range').\ndesc(\n  `\nTests multi indirect draw calls with various draw count offsets, and draw count buffer sizes.\n  `\n).\nparamsSubcasesOnly((u) =>\nu.\ncombine('indexed', [true, false]) //\n.combineWithParams([\n// In bounds\n{ offset: 0, bufferSize: 4 },\n{ offset: 0, bufferSize: 5 },\n// In bounds, but non-multiple of 4 offset\n{ offset: 2, bufferSize: 8 },\n// Out of bounds, offset too big for drawCountBuffer\n{ offset: 4, bufferSize: 7 },\n// Out of bounds, (offset + kDrawCountSize) may overflow\n{ offset: kMaxUnsignedLongLongValue, bufferSize: 1024 }]\n)\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('chromium-experimental-multi-draw-indirect');\n}).\nfn((t) => {\n  const { indexed, bufferSize, offset } = t.params;\n\n  const indirectBuffer = t.createBufferTracked({\n    size: indexed ? 20 : 16,\n    usage: GPUBufferUsage.INDIRECT\n  });\n  const drawCountBuffer = t.createBufferTracked({\n    size: bufferSize,\n    usage: GPUBufferUsage.INDIRECT\n  });\n\n  const { encoder, validateFinish } = t.createEncoder('render pass');\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n  if (indexed) {\n    encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n\n    encoder.multiDrawIndexedIndirect(indirectBuffer, 0, 1, drawCountBuffer, offset);\n  } else {\n\n    encoder.multiDrawIndirect(indirectBuffer, 0, 1, drawCountBuffer, offset);\n  }\n\n  const kDrawCountSize = 4;\n  const valid = offset % 4 === 0 && offset + kDrawCountSize <= bufferSize;\n  validateFinish(valid);\n});"],"mappings":"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","ignoreList":[]}