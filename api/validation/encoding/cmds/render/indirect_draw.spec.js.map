{"version":3,"file":"indirect_draw.spec.js","names":["description","makeTestGroup","GPUConst","kResourceStates","ValidationTest","kRenderEncodeTypeParams","kIndirectDrawTestParams","combine","F","makeIndexBuffer","createBufferTracked","size","usage","GPUBufferUsage","INDEX","g","test","desc","paramsSubcasesOnly","fn","t","encoderType","indexed","state","params","pipeline","createNoOpRenderPipeline","indirectBuffer","createBufferWithState","INDIRECT","encoder","validateFinishAndSubmitGivenState","createEncoder","setPipeline","indexBuffer","setIndexBuffer","drawIndexedIndirect","drawIndirect","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","sourceDevice","mismatchedDevice","device","trackForCleanup","globalThis","_TRAMPOLINE_","createBuffer","validateFinish","BufferUsage","COPY_DST","indirectOffset","expandWithParams","p","indirectParamsSize","bufferSize","_valid"],"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/indirect_draw.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for drawIndirect/drawIndexedIndirect on render pass and render bundle.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../../../constants.js';\nimport { kResourceStates } from '../../../../../gpu_test.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\nimport { kRenderEncodeTypeParams } from './render.js';\n\nconst kIndirectDrawTestParams = kRenderEncodeTypeParams.combine('indexed', [true, false]);\n\nclass F extends ValidationTest {\n  makeIndexBuffer() {\n    return this.createBufferTracked({\n      size: 16,\n      usage: GPUBufferUsage.INDEX\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('indirect_buffer_state').\ndesc(\n  `\nTests indirect buffer must be valid.\n  `\n).\nparamsSubcasesOnly(kIndirectDrawTestParams.combine('state', kResourceStates)).\nfn((t) => {\n  const { encoderType, indexed, state } = t.params;\n  const pipeline = t.createNoOpRenderPipeline();\n  const indirectBuffer = t.createBufferWithState(state, {\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  });\n\n  const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder(encoderType);\n  encoder.setPipeline(pipeline);\n  if (indexed) {\n    const indexBuffer = t.makeIndexBuffer();\n    encoder.setIndexBuffer(indexBuffer, 'uint32');\n    encoder.drawIndexedIndirect(indirectBuffer, 0);\n  } else {\n    encoder.drawIndirect(indirectBuffer, 0);\n  }\n\n  validateFinishAndSubmitGivenState(state);\n});\n\ng.test('indirect_buffer,device_mismatch').\ndesc(\n  'Tests draw(Indexed)Indirect cannot be called with an indirect buffer created from another device'\n).\nparamsSubcasesOnly(kIndirectDrawTestParams.combine('mismatched', [true, false])).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { encoderType, indexed, mismatched } = t.params;\n\n  const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n  const indirectBuffer = t.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n  sourceDevice, sourceDevice.createBuffer, [{\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  }], () => sourceDevice.createBuffer({ size: 256, usage: GPUBufferUsage.INDIRECT }))\n  );\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n\n  if (indexed) {\n    encoder.setIndexBuffer(t.makeIndexBuffer(), 'uint32');\n    encoder.drawIndexedIndirect(indirectBuffer, 0);\n  } else {\n    encoder.drawIndirect(indirectBuffer, 0);\n  }\n  validateFinish(!mismatched);\n});\n\ng.test('indirect_buffer_usage').\ndesc(\n  `\nTests indirect buffer must have 'Indirect' usage.\n  `\n).\nparamsSubcasesOnly(\n  kIndirectDrawTestParams.combine('usage', [\n  GPUConst.BufferUsage.INDIRECT, // control case\n  GPUConst.BufferUsage.COPY_DST,\n  GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.INDIRECT]\n  )\n).\nfn((t) => {\n  const { encoderType, indexed, usage } = t.params;\n  const indirectBuffer = t.createBufferTracked({\n    size: 256,\n    usage\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setPipeline(t.createNoOpRenderPipeline());\n  if (indexed) {\n    const indexBuffer = t.makeIndexBuffer();\n    encoder.setIndexBuffer(indexBuffer, 'uint32');\n    encoder.drawIndexedIndirect(indirectBuffer, 0);\n  } else {\n    encoder.drawIndirect(indirectBuffer, 0);\n  }\n  validateFinish((usage & GPUBufferUsage.INDIRECT) !== 0);\n});\n\ng.test('indirect_offset_alignment').\ndesc(\n  `\nTests indirect offset must be a multiple of 4.\n  `\n).\nparamsSubcasesOnly(kIndirectDrawTestParams.combine('indirectOffset', [0, 2, 4])).\nfn((t) => {\n  const { encoderType, indexed, indirectOffset } = t.params;\n  const pipeline = t.createNoOpRenderPipeline();\n  const indirectBuffer = t.createBufferTracked({\n    size: 256,\n    usage: GPUBufferUsage.INDIRECT\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setPipeline(pipeline);\n  if (indexed) {\n    const indexBuffer = t.makeIndexBuffer();\n    encoder.setIndexBuffer(indexBuffer, 'uint32');\n    encoder.drawIndexedIndirect(indirectBuffer, indirectOffset);\n  } else {\n    encoder.drawIndirect(indirectBuffer, indirectOffset);\n  }\n\n  validateFinish(indirectOffset % 4 === 0);\n});\n\ng.test('indirect_offset_oob').\ndesc(\n  `\nTests indirect draw calls with various indirect offsets and buffer sizes.\n- (offset, b.size) is\n  - (0, 0)\n  - (0, min size) (control case)\n  - (0, min size + 1) (control case)\n  - (0, min size - 1)\n  - (0, min size - min alignment)\n  - (min alignment, min size + min alignment)\n  - (min alignment, min size + min alignment - 1)\n  - (min alignment / 2, min size + min alignment)\n  - (min alignment +/- 1, min size + min alignment)\n  - (min size, min size)\n  - (min size + min alignment, min size)\n  - min size = indirect draw parameters size\n  - x =(drawIndirect, drawIndexedIndirect)\n  `\n).\nparamsSubcasesOnly(\n  kIndirectDrawTestParams.expandWithParams((p) => {\n    const indirectParamsSize = p.indexed ? 20 : 16;\n    return [\n    { indirectOffset: 0, bufferSize: 0, _valid: false },\n    { indirectOffset: 0, bufferSize: indirectParamsSize, _valid: true },\n    { indirectOffset: 0, bufferSize: indirectParamsSize + 1, _valid: true },\n    { indirectOffset: 0, bufferSize: indirectParamsSize - 1, _valid: false },\n    { indirectOffset: 0, bufferSize: indirectParamsSize - 4, _valid: false },\n    { indirectOffset: 4, bufferSize: indirectParamsSize + 4, _valid: true },\n    { indirectOffset: 4, bufferSize: indirectParamsSize + 3, _valid: false },\n    { indirectOffset: 2, bufferSize: indirectParamsSize + 4, _valid: false },\n    { indirectOffset: 3, bufferSize: indirectParamsSize + 4, _valid: false },\n    { indirectOffset: 5, bufferSize: indirectParamsSize + 4, _valid: false },\n    { indirectOffset: indirectParamsSize, bufferSize: indirectParamsSize, _valid: false },\n    { indirectOffset: indirectParamsSize + 4, bufferSize: indirectParamsSize, _valid: false }];\n\n  })\n).\nfn((t) => {\n  const { encoderType, indexed, indirectOffset, bufferSize, _valid } = t.params;\n  const pipeline = t.createNoOpRenderPipeline();\n  const indirectBuffer = t.createBufferTracked({\n    size: bufferSize,\n    usage: GPUBufferUsage.INDIRECT\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setPipeline(pipeline);\n  if (indexed) {\n    const indexBuffer = t.makeIndexBuffer();\n    encoder.setIndexBuffer(indexBuffer, 'uint32');\n    encoder.drawIndexedIndirect(indirectBuffer, indirectOffset);\n  } else {\n    encoder.drawIndirect(indirectBuffer, indirectOffset);\n  }\n\n  validateFinish(_valid);\n});"],"mappings":"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","ignoreList":[]}