{"version":3,"file":"setIndexBuffer.spec.js","names":["description","makeTestGroup","GPUConst","kResourceStates","ValidationTest","kRenderEncodeTypeParams","buildBufferOffsetAndSizeOOBTestParams","g","test","desc","paramsSubcasesOnly","combine","fn","t","encoderType","state","params","indexBuffer","createBufferWithState","size","usage","GPUBufferUsage","INDEX","encoder","validateFinishAndSubmitGivenState","createEncoder","setIndexBuffer","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","sourceDevice","mismatchedDevice","device","trackForCleanup","globalThis","_TRAMPOLINE_","createBuffer","validateFinish","BufferUsage","COPY_DST","createBufferTracked","expand","p","indexFormat","offset","alignment","Uint16Array","BYTES_PER_ELEMENT","Uint32Array","_valid"],"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/setIndexBuffer.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for setIndexBuffer on render pass and render bundle.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../../../constants.js';\nimport { kResourceStates } from '../../../../../gpu_test.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\nimport { kRenderEncodeTypeParams, buildBufferOffsetAndSizeOOBTestParams } from './render.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('index_buffer_state').\ndesc(\n  `\nTests index buffer must be valid.\n  `\n).\nparamsSubcasesOnly(kRenderEncodeTypeParams.combine('state', kResourceStates)).\nfn((t) => {\n  const { encoderType, state } = t.params;\n  const indexBuffer = t.createBufferWithState(state, {\n    size: 16,\n    usage: GPUBufferUsage.INDEX\n  });\n\n  const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder(encoderType);\n  encoder.setIndexBuffer(indexBuffer, 'uint32');\n  validateFinishAndSubmitGivenState(state);\n});\n\ng.test('index_buffer,device_mismatch').\ndesc('Tests setIndexBuffer cannot be called with an index buffer created from another device').\nparamsSubcasesOnly(kRenderEncodeTypeParams.combine('mismatched', [true, false])).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { encoderType, mismatched } = t.params;\n  const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n  const indexBuffer = t.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n  sourceDevice, sourceDevice.createBuffer, [{\n    size: 16,\n    usage: GPUBufferUsage.INDEX\n  }], () => sourceDevice.createBuffer({ size: 16, usage: GPUBufferUsage.INDEX }))\n  );\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setIndexBuffer(indexBuffer, 'uint32');\n  validateFinish(!mismatched);\n});\n\ng.test('index_buffer_usage').\ndesc(\n  `\nTests index buffer must have 'Index' usage.\n  `\n).\nparamsSubcasesOnly(\n  kRenderEncodeTypeParams.combine('usage', [\n  GPUConst.BufferUsage.INDEX, // control case\n  GPUConst.BufferUsage.COPY_DST,\n  GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.INDEX]\n  )\n).\nfn((t) => {\n  const { encoderType, usage } = t.params;\n  const indexBuffer = t.createBufferTracked({\n    size: 16,\n    usage\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setIndexBuffer(indexBuffer, 'uint32');\n  validateFinish((usage & GPUBufferUsage.INDEX) !== 0);\n});\n\ng.test('offset_alignment').\ndesc(\n  `\nTests offset must be a multiple of index formatâ€™s byte size.\n  `\n).\nparamsSubcasesOnly(\n  kRenderEncodeTypeParams.\n  combine('indexFormat', ['uint16', 'uint32']).\n  expand('offset', (p) => {\n    return p.indexFormat === 'uint16' ? [0, 1, 2] : [0, 2, 4];\n  })\n).\nfn((t) => {\n  const { encoderType, indexFormat, offset } = t.params;\n  const indexBuffer = t.createBufferTracked({\n    size: 16,\n    usage: GPUBufferUsage.INDEX\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setIndexBuffer(indexBuffer, indexFormat, offset);\n\n  const alignment =\n  indexFormat === 'uint16' ? Uint16Array.BYTES_PER_ELEMENT : Uint32Array.BYTES_PER_ELEMENT;\n  validateFinish(offset % alignment === 0);\n});\n\ng.test('offset_and_size_oob').\ndesc(\n  `\nTests offset and size cannot be larger than index buffer size.\n  `\n).\nparamsSubcasesOnly(buildBufferOffsetAndSizeOOBTestParams(4, 256)).\nfn((t) => {\n  const { encoderType, offset, size, _valid } = t.params;\n  const indexBuffer = t.createBufferTracked({\n    size: 256,\n    usage: GPUBufferUsage.INDEX\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setIndexBuffer(indexBuffer, 'uint32', offset, size);\n  validateFinish(_valid);\n});"],"mappings":"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","ignoreList":[]}