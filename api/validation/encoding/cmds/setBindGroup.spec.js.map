{"version":3,"file":"setBindGroup.spec.js","names":["description","makeTestGroup","makeValueTestVariant","range","unreachable","kBufferBindingTypes","kMinDynamicBufferOffsetAlignment","kResourceStates","kProgrammableEncoderTypes","ValidationTest","F","encoderTypeToStageFlag","encoderType","GPUShaderStage","COMPUTE","FRAGMENT","createBindingResourceWithState","resourceType","state","texture","createTextureWithState","view","createView","globalThis","_TRAMPOLINE_","destroy","buffer","createBufferWithState","size","usage","GPUBufferUsage","STORAGE","createBindGroup","indices","device","pushErrorScope","Array","length","fill","layout","createBindGroupLayout","entries","map","binding","visibility","type","bindGroup","resource","popErrorScope","g","test","desc","params","u","combine","fn","t","maxBindGroups","limits","runTest","index","encoder","validateFinishAndSubmit","createEncoder","setBindGroup","debug","beginSubcases","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","useU32Array","mismatched","sourceDevice","mismatchedDevice","trackForCleanup","createBuffer","hasDynamicOffset","validateFinish","Uint32Array","dynamicOffsets","combineWithParams","_success","kBindingSize","bindGroupLayout","uniformBuffer","createBufferTracked","UNIFORM","storageBuffer","useU32array","paramsSubcasesOnly","offsets","dynamicOffsetsDataStart","dynamicOffsetsDataLength","i","doSetBindGroup","shouldThrow","mult","add","dynamicOffsetVariant","minAlignment","dynamicOffset","isValid"],"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/setBindGroup.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nsetBindGroup validation tests.\n\nTODO: merge these notes and implement.\n> (Note: If there are errors with using certain binding types in certain passes, test those in the file for that pass type, not here.)\n>\n> - state tracking (probably separate file)\n>     - x= {compute pass, render pass}\n>     - {null, compatible, incompatible} current pipeline (should have no effect without draw/dispatch)\n>     - setBindGroup in different orders (e.g. 0,1,2 vs 2,0,1)\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { makeValueTestVariant, range, unreachable } from '../../../../../common/util/util.js';\nimport {\n  kBufferBindingTypes,\n  kMinDynamicBufferOffsetAlignment } from\n'../../../../capability_info.js';\nimport { kResourceStates } from '../../../../gpu_test.js';\nimport {\n  kProgrammableEncoderTypes } from\n\n'../../../../util/command_buffer_maker.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  encoderTypeToStageFlag(encoderType) {\n    switch (encoderType) {\n      case 'compute pass':\n        return GPUShaderStage.COMPUTE;\n      case 'render pass':\n      case 'render bundle':\n        return GPUShaderStage.FRAGMENT;\n      default:\n        unreachable('Unknown encoder type');\n    }\n  }\n\n  createBindingResourceWithState(\n  resourceType,\n  state)\n  {\n    switch (resourceType) {\n      case 'texture':{\n          const texture = this.createTextureWithState('valid');\n          const view = texture.createView();\n          if (state === 'destroyed') {\n            globalThis._TRAMPOLINE_(\"destroy\", texture, texture.destroy, [], () => texture.destroy());\n          }\n          return view;\n        }\n      case 'buffer':\n        return {\n          buffer: this.createBufferWithState(state, {\n            size: 4,\n            usage: GPUBufferUsage.STORAGE\n          })\n        };\n      default:\n        unreachable('unknown resource type');\n    }\n  }\n\n  /**\n   * If state is 'invalid', creates an invalid bind group with valid resources.\n   * If state is 'destroyed', creates a valid bind group with destroyed resources.\n   */\n  createBindGroup(\n  state,\n  resourceType,\n  encoderType,\n  indices)\n  {\n    if (state === 'invalid') {\n      this.device.pushErrorScope('validation');\n      indices = new Array(indices.length + 1).fill(0);\n    }\n\n    const layout = this.device.createBindGroupLayout({\n      entries: indices.map((binding) => ({\n        binding,\n        visibility: this.encoderTypeToStageFlag(encoderType),\n        ...(resourceType === 'buffer' ? { buffer: { type: 'storage' } } : { texture: {} })\n      }))\n    });\n    const bindGroup = this.device.createBindGroup({\n      layout,\n      entries: indices.map((binding) => ({\n        binding,\n        resource: this.createBindingResourceWithState(\n          resourceType,\n          state === 'destroyed' ? state : 'valid'\n        )\n      }))\n    });\n\n    if (state === 'invalid') {\n      void this.device.popErrorScope();\n    }\n    return bindGroup;\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('state_and_binding_index').\ndesc('Tests that setBindGroup correctly handles {valid, invalid, destroyed} bindGroups.').\nparams((u) =>\nu.\ncombine('encoderType', kProgrammableEncoderTypes).\ncombine('state', kResourceStates).\ncombine('resourceType', ['buffer', 'texture'])\n).\nfn((t) => {\n  const { encoderType, state, resourceType } = t.params;\n  const maxBindGroups = t.device.limits.maxBindGroups;\n\n  function runTest(index) {\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n    encoder.setBindGroup(index, t.createBindGroup(state, resourceType, encoderType, [index]));\n\n    validateFinishAndSubmit(state !== 'invalid' && index < maxBindGroups, state !== 'destroyed');\n  }\n\n  // MAINTENANCE_TODO: move to subcases() once we can query the device limits\n  for (const index of [1, maxBindGroups - 1, maxBindGroups]) {\n    t.debug(`test bind group index ${index}`);\n    runTest(index);\n  }\n});\n\ng.test('bind_group,device_mismatch').\ndesc(\n  `\n    Tests setBindGroup cannot be called with a bind group created from another device\n    - x= setBindGroup {sequence overload, Uint32Array overload}\n    `\n).\nparams((u) =>\nu.\ncombine('encoderType', kProgrammableEncoderTypes).\nbeginSubcases().\ncombine('useU32Array', [true, false]).\ncombine('mismatched', [true, false])\n).\nbeforeAllSubcases((t) => {\n  t.selectMismatchedDeviceOrSkipTestCase(undefined);\n}).\nfn((t) => {\n  const { encoderType, useU32Array, mismatched } = t.params;\n  const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n  const buffer = t.trackForCleanup(globalThis._TRAMPOLINE_(\"createBuffer\",\n  sourceDevice, sourceDevice.createBuffer, [{\n    size: 4,\n    usage: GPUBufferUsage.STORAGE\n  }], () => sourceDevice.createBuffer({ size: 4, usage: GPUBufferUsage.STORAGE }))\n  );\n\n  const layout = sourceDevice.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: t.encoderTypeToStageFlag(encoderType),\n      buffer: { type: 'storage', hasDynamicOffset: useU32Array }\n    }]\n\n  });\n\n  const bindGroup = sourceDevice.createBindGroup({\n    layout,\n    entries: [\n    {\n      binding: 0,\n      resource: { buffer }\n    }]\n\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  if (useU32Array) {\n    encoder.setBindGroup(0, bindGroup, new Uint32Array([0]), 0, 1);\n  } else {\n    encoder.setBindGroup(0, bindGroup);\n  }\n  validateFinish(!mismatched);\n});\n\ng.test('dynamic_offsets_passed_but_not_expected').\ndesc('Tests that setBindGroup correctly errors on unexpected dynamicOffsets.').\nparams((u) => u.combine('encoderType', kProgrammableEncoderTypes)).\nfn((t) => {\n  const { encoderType } = t.params;\n  const bindGroup = t.createBindGroup('valid', 'buffer', encoderType, []);\n  const dynamicOffsets = [0];\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setBindGroup(0, bindGroup, dynamicOffsets);\n  validateFinish(false);\n});\n\ng.test('dynamic_offsets_match_expectations_in_pass_encoder').\ndesc('Tests that given dynamicOffsets match the specified bindGroup.').\nparams((u) =>\nu.\ncombine('encoderType', kProgrammableEncoderTypes).\ncombineWithParams([\n{ dynamicOffsets: [256, 0], _success: true }, // Dynamic offsets aligned\n{ dynamicOffsets: [1, 2], _success: false }, // Dynamic offsets not aligned\n\n// Wrong number of dynamic offsets\n{ dynamicOffsets: [256, 0, 0], _success: false },\n{ dynamicOffsets: [256], _success: false },\n{ dynamicOffsets: [], _success: false },\n\n// Dynamic uniform buffer out of bounds because of binding size\n{ dynamicOffsets: [512, 0], _success: false },\n{ dynamicOffsets: [1024, 0], _success: false },\n{ dynamicOffsets: [0xffffffff, 0], _success: false },\n\n// Dynamic storage buffer out of bounds because of binding size\n{ dynamicOffsets: [0, 512], _success: false },\n{ dynamicOffsets: [0, 1024], _success: false },\n{ dynamicOffsets: [0, 0xffffffff], _success: false }]\n).\ncombine('useU32array', [false, true])\n).\nfn((t) => {\n  const kBindingSize = 12;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT,\n      buffer: {\n        type: 'uniform',\n        hasDynamicOffset: true\n      }\n    },\n    {\n      binding: 1,\n      visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT,\n      buffer: {\n        type: 'storage',\n        hasDynamicOffset: true\n      }\n    }]\n\n  });\n\n  const uniformBuffer = t.createBufferTracked({\n    size: 2 * kMinDynamicBufferOffsetAlignment + 8,\n    usage: GPUBufferUsage.UNIFORM\n  });\n\n  const storageBuffer = t.createBufferTracked({\n    size: 2 * kMinDynamicBufferOffsetAlignment + 8,\n    usage: GPUBufferUsage.STORAGE\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: bindGroupLayout,\n    entries: [\n    {\n      binding: 0,\n      resource: {\n        buffer: uniformBuffer,\n        size: kBindingSize\n      }\n    },\n    {\n      binding: 1,\n      resource: {\n        buffer: storageBuffer,\n        size: kBindingSize\n      }\n    }]\n\n  });\n\n  const { encoderType, dynamicOffsets, useU32array, _success } = t.params;\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  if (useU32array) {\n    encoder.setBindGroup(0, bindGroup, new Uint32Array(dynamicOffsets), 0, dynamicOffsets.length);\n  } else {\n    encoder.setBindGroup(0, bindGroup, dynamicOffsets);\n  }\n  validateFinish(_success);\n});\n\ng.test('u32array_start_and_length').\ndesc('Tests that dynamicOffsetsData(Start|Length) apply to the given Uint32Array.').\nparamsSubcasesOnly([\n// dynamicOffsetsDataLength > offsets.length\n{\n  offsets: [0],\n  dynamicOffsetsDataStart: 0,\n  dynamicOffsetsDataLength: 2,\n  _success: false\n},\n// dynamicOffsetsDataStart + dynamicOffsetsDataLength > offsets.length\n{\n  offsets: [0],\n  dynamicOffsetsDataStart: 1,\n  dynamicOffsetsDataLength: 1,\n  _success: false\n},\n{\n  offsets: [0, 0],\n  dynamicOffsetsDataStart: 1,\n  dynamicOffsetsDataLength: 1,\n  _success: true\n},\n{\n  offsets: [0, 0, 0],\n  dynamicOffsetsDataStart: 1,\n  dynamicOffsetsDataLength: 1,\n  _success: true\n},\n{\n  offsets: [0, 0],\n  dynamicOffsetsDataStart: 0,\n  dynamicOffsetsDataLength: 2,\n  _success: true\n}]\n).\nfn((t) => {\n  const { offsets, dynamicOffsetsDataStart, dynamicOffsetsDataLength, _success } = t.params;\n  const kBindingSize = 8;\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: range(dynamicOffsetsDataLength, (i) => ({\n      binding: i,\n      visibility: GPUShaderStage.FRAGMENT,\n      buffer: {\n        type: 'storage',\n        hasDynamicOffset: true\n      }\n    }))\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: bindGroupLayout,\n    entries: range(dynamicOffsetsDataLength, (i) => ({\n      binding: i,\n      resource: {\n        buffer: t.createBufferWithState('valid', {\n          size: kBindingSize,\n          usage: GPUBufferUsage.STORAGE\n        }),\n        size: kBindingSize\n      }\n    }))\n  });\n\n  const { encoder, validateFinish } = t.createEncoder('render pass');\n\n  const doSetBindGroup = () => {\n    encoder.setBindGroup(\n      0,\n      bindGroup,\n      new Uint32Array(offsets),\n      dynamicOffsetsDataStart,\n      dynamicOffsetsDataLength\n    );\n  };\n\n  if (_success) {\n    doSetBindGroup();\n  } else {\n    t.shouldThrow('RangeError', doSetBindGroup);\n  }\n\n  // RangeError in setBindGroup does not cause the encoder to become invalid.\n  validateFinish(true);\n});\n\ng.test('buffer_dynamic_offsets').\ndesc(\n  `\n    Test that the dynamic offsets of the BufferLayout is a multiple of\n    'minUniformBufferOffsetAlignment|minStorageBufferOffsetAlignment' if the BindGroup entry defines\n    buffer and the buffer type is 'uniform|storage|read-only-storage'.\n  `\n).\nparams((u) =>\nu //\n.combine('type', kBufferBindingTypes).\ncombine('encoderType', kProgrammableEncoderTypes).\nbeginSubcases().\ncombine('dynamicOffsetVariant', [\n{ mult: 1, add: 0 },\n{ mult: 0.5, add: 0 },\n{ mult: 1.5, add: 0 },\n{ mult: 2, add: 0 },\n{ mult: 1, add: 2 }]\n)\n).\nfn((t) => {\n  const { type, dynamicOffsetVariant, encoderType } = t.params;\n  const kBindingSize = 12;\n\n  const minAlignment =\n  t.device.limits[\n  type === 'uniform' ? 'minUniformBufferOffsetAlignment' : 'minStorageBufferOffsetAlignment'];\n\n  const dynamicOffset = makeValueTestVariant(minAlignment, dynamicOffsetVariant);\n\n  const bindGroupLayout = t.device.createBindGroupLayout({\n    entries: [\n    {\n      binding: 0,\n      visibility: GPUShaderStage.COMPUTE,\n      buffer: { type, hasDynamicOffset: true }\n    }]\n\n  });\n\n  const usage = type === 'uniform' ? GPUBufferUsage.UNIFORM : GPUBufferUsage.STORAGE;\n  const isValid = dynamicOffset % minAlignment === 0;\n\n  const buffer = t.createBufferTracked({\n    size: 3 * kMinDynamicBufferOffsetAlignment,\n    usage\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    entries: [{ binding: 0, resource: { buffer, size: kBindingSize } }],\n    layout: bindGroupLayout\n  });\n\n  const { encoder, validateFinish } = t.createEncoder(encoderType);\n  encoder.setBindGroup(0, bindGroup, [dynamicOffset]);\n  validateFinish(isValid);\n});"],"mappings":"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","ignoreList":[]}