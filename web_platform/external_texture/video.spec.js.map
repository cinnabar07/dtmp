{"version":3,"file":"video.spec.js","names":["description","makeTestGroup","TextureUploadingUtils","createCanvas","startPlayingAndWaitForVideo","getVideoFrameFromVideoElement","getVideoElement","captureCameraFrame","convertToUnorm8","kPredefinedColorSpace","kVideoNames","kVideoInfo","kVideoExpectedColors","kHeight","kWidth","kFormat","g","createExternalTextureSamplingTestPipeline","t","colorAttachmentFormat","pipeline","device","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","targets","format","primitive","topology","createExternalTextureSamplingTestBindGroup","checkNonStandardIsZeroCopy","source","dstColorSpace","linearSampler","createSampler","externalTexture","importExternalTexture","colorSpace","expectZeroCopyNonStandard","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","expect","isZeroCopy","checkNonStandardIsZeroCopyIfAvailable","GPUExternalTexture","prototype","hasOwnProperty","test","desc","params","u","combineWithParams","combine","fn","videoName","sourceType","VideoFrame","skip","videoElement","colorAttachment","createTextureTracked","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","commandEncoder","globalThis","_TRAMPOLINE_","createCommandEncoder","passEncoder","beginRenderPass","colorAttachments","view","createView","clearValue","r","b","a","loadOp","storeOp","setPipeline","setBindGroup","draw","end","queue","submit","finish","srcColorSpace","presentColors","display","expectSinglePixelComparisonsAreOkInTexture","texture","coord","x","y","exp","topLeftColor","topRightColor","bottomLeftColor","bottomRightColor","videoFrameFormat","canvas","canvasContext","getContext","ctx","rectWidth","Math","floor","rectHeight","fillStyle","fillRect","imageData","getImageData","frameInit","codedWidth","codedHeight","timestamp","frame","data","buffer","textureFormat","undefined","expected","topLeft","Uint8Array","topRight","bottomLeft","bottomRight","srcVideoHeight","srcVideoWidth","coded","cropParams","subRect","color","cropParam","visibleRect","close","outputTexture","STORAGE_BINDING","createComputePipeline","compute","constants","frameWidth","displayWidth","videoWidth","frameHeight","displayHeight","videoHeight","bg","encoder","pass","beginComputePass","dispatchWorkgroups","drawImage","expectedView","getExpectedDstPixelsFromSrcPixels","srcPixels","srcOrigin","srcSize","dstOrigin","dstSize","subRectSize","flipSrcBeforeCopy","srcDoFlipYDuringCopy","conversion","srcPremultiplied","dstPremultiplied","expectTexelViewComparisonIsOkInTexture"],"sources":["../../../../src/webgpu/web_platform/external_texture/video.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests for external textures from HTMLVideoElement (and other video-type sources?).\n\n- videos with various encodings/formats (webm vp8, webm vp9, ogg theora, mp4), video color spaces\n  (bt.601, bt.709, bt.2020) and dst color spaces(display-p3, srgb)\n\nTODO: consider whether external_texture and copyToTexture video tests should be in the same file\nTODO(#3193): Test video in BT.2020 color space\n`;import { makeTestGroup } from '../../../common/framework/test_group.js';\n\nimport { TextureUploadingUtils } from '../../util/copy_to_texture.js';\nimport { createCanvas } from '../../util/create_elements.js';\nimport {\n  startPlayingAndWaitForVideo,\n  getVideoFrameFromVideoElement,\n  getVideoElement,\n  captureCameraFrame,\n  convertToUnorm8,\n  kPredefinedColorSpace,\n  kVideoNames,\n  kVideoInfo,\n  kVideoExpectedColors } from\n'../../web_platform/util.js';\n\nconst kHeight = 16;\nconst kWidth = 16;\nconst kFormat = 'rgba8unorm';\n\nexport const g = makeTestGroup(TextureUploadingUtils);\n\nfunction createExternalTextureSamplingTestPipeline(\nt,\ncolorAttachmentFormat = kFormat)\n{\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({\n        code: `\n        struct VertexOutput {\n          @builtin(position) Position : vec4f,\n          @location(0) fragUV : vec2f,\n        }\n\n        @vertex fn main(@builtin(vertex_index) VertexIndex : u32) -> VertexOutput {\n            const pos = array(\n              vec2( 1.0,  1.0),\n              vec2( 1.0, -1.0),\n              vec2(-1.0, -1.0),\n              vec2( 1.0,  1.0),\n              vec2(-1.0, -1.0),\n              vec2(-1.0,  1.0),\n            );\n\n            const uv = array(\n              vec2(1.0, 0.0),\n              vec2(1.0, 1.0),\n              vec2(0.0, 1.0),\n              vec2(1.0, 0.0),\n              vec2(0.0, 1.0),\n              vec2(0.0, 0.0),\n            );\n\n            var output : VertexOutput;\n            output.Position = vec4(pos[VertexIndex], 0.0, 1.0);\n            output.fragUV = uv[VertexIndex];\n            return output;\n        }\n        `\n      }),\n      entryPoint: 'main'\n    },\n    fragment: {\n      module: t.device.createShaderModule({\n        code: `\n        @group(0) @binding(0) var s : sampler;\n        @group(0) @binding(1) var t : texture_external;\n\n        @fragment fn main(@location(0) fragUV : vec2f)\n                                 -> @location(0) vec4f {\n            return textureSampleBaseClampToEdge(t, s, fragUV);\n        }\n        `\n      }),\n      entryPoint: 'main',\n      targets: [\n      {\n        format: colorAttachmentFormat\n      }]\n\n    },\n    primitive: { topology: 'triangle-list' }\n  });\n\n  return pipeline;\n}\n\nfunction createExternalTextureSamplingTestBindGroup(\nt,\ncheckNonStandardIsZeroCopy,\nsource,\npipeline,\ndstColorSpace)\n{\n  const linearSampler = t.device.createSampler();\n\n  const externalTexture = t.device.importExternalTexture({\n    source,\n    colorSpace: dstColorSpace\n  });\n\n  if (checkNonStandardIsZeroCopy) {\n    expectZeroCopyNonStandard(t, externalTexture);\n  }\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n    {\n      binding: 0,\n      resource: linearSampler\n    },\n    {\n      binding: 1,\n      resource: externalTexture\n    }]\n\n  });\n\n  return bindGroup;\n}\n\n/**\n * Expect the non-standard `externalTexture.isZeroCopy` is true.\n */\nfunction expectZeroCopyNonStandard(t, externalTexture) {\n\n  t.expect(externalTexture.isZeroCopy, '0-copy import failed.');\n}\n\n/**\n * `externalTexture.isZeroCopy` is a non-standard Chrome API for testing only.\n * It is exposed by enabling chrome://flags/#enable-webgpu-developer-features\n *\n * If the API is available, this function adds a parameter `checkNonStandardIsZeroCopy`.\n * Cases with that parameter set to `true` will fail if `externalTexture.isZeroCopy` is not true.\n */\nfunction checkNonStandardIsZeroCopyIfAvailable() {\n  if (\n  typeof GPUExternalTexture !== 'undefined' &&\n\n  GPUExternalTexture.prototype.hasOwnProperty('isZeroCopy'))\n  {\n    return [{}, { checkNonStandardIsZeroCopy: true }];\n  } else {\n    return [{}];\n  }\n}\n\ng.test('importExternalTexture,sample').\ndesc(\n  `\nTests that we can import an HTMLVideoElement/VideoFrame into a GPUExternalTexture, sample from it\nfor several combinations of video format, video color spaces and dst color spaces.\n`\n).\nparams((u) =>\nu //\n.combineWithParams(checkNonStandardIsZeroCopyIfAvailable()).\ncombine('videoName', kVideoNames).\ncombine('sourceType', ['VideoElement', 'VideoFrame']).\ncombine('dstColorSpace', kPredefinedColorSpace)\n).\nfn(async (t) => {\n  const { videoName, sourceType, dstColorSpace } = t.params;\n\n  if (sourceType === 'VideoFrame' && typeof VideoFrame === 'undefined') {\n    t.skip('WebCodec is not supported');\n  }\n\n  const videoElement = getVideoElement(t, videoName);\n\n  await startPlayingAndWaitForVideo(videoElement, async () => {\n    const source =\n    sourceType === 'VideoFrame' ?\n    await getVideoFrameFromVideoElement(t, videoElement) :\n    videoElement;\n\n    const colorAttachment = t.createTextureTracked({\n      format: kFormat,\n      size: { width: kWidth, height: kHeight, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n    });\n\n    const pipeline = createExternalTextureSamplingTestPipeline(t);\n    const bindGroup = createExternalTextureSamplingTestBindGroup(\n      t,\n      t.params.checkNonStandardIsZeroCopy,\n      source,\n      pipeline,\n      dstColorSpace\n    );\n\n    const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n    const passEncoder = commandEncoder.beginRenderPass({\n      colorAttachments: [\n      {\n        view: colorAttachment.createView(),\n        clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n        loadOp: 'clear',\n        storeOp: 'store'\n      }]\n\n    });\n    passEncoder.setPipeline(pipeline);\n    passEncoder.setBindGroup(0, bindGroup);\n    passEncoder.draw(6);\n    passEncoder.end();\n    globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[commandEncoder.finish()]], () => t.device.queue.submit([commandEncoder.finish()]));\n\n    const srcColorSpace = kVideoInfo[videoName].colorSpace;\n    const presentColors = kVideoExpectedColors[srcColorSpace][dstColorSpace];\n\n    // visible rect is whole frame, no clipping.\n    const expect = kVideoInfo[videoName].display;\n\n    // For validation, we sample a few pixels away from the edges to avoid compression\n    // artifacts.\n    t.expectSinglePixelComparisonsAreOkInTexture({ texture: colorAttachment }, [\n    // Top-left.\n    {\n      coord: { x: kWidth * 0.25, y: kHeight * 0.25 },\n      exp: convertToUnorm8(presentColors[expect.topLeftColor])\n    },\n    // Top-right.\n    {\n      coord: { x: kWidth * 0.75, y: kHeight * 0.25 },\n      exp: convertToUnorm8(presentColors[expect.topRightColor])\n    },\n    // Bottom-left.\n    {\n      coord: { x: kWidth * 0.25, y: kHeight * 0.75 },\n      exp: convertToUnorm8(presentColors[expect.bottomLeftColor])\n    },\n    // Bottom-right.\n    {\n      coord: { x: kWidth * 0.75, y: kHeight * 0.75 },\n      exp: convertToUnorm8(presentColors[expect.bottomRightColor])\n    }]\n    );\n  });\n});\n\ng.test('importExternalTexture,sample_non_YUV_video_frame').\ndesc(\n  `\nTests that we can import an VideoFrame with non-YUV pixel format into a GPUExternalTexture and sample it.\n`\n).\nparams((u) =>\nu //\n.combine('videoFrameFormat', ['RGBA', 'RGBX', 'BGRA', 'BGRX'])\n).\nfn((t) => {\n  const { videoFrameFormat } = t.params;\n\n  if (typeof VideoFrame === 'undefined') {\n    t.skip('WebCodec is not supported');\n  }\n\n  const canvas = createCanvas(t, 'onscreen', kWidth, kHeight);\n\n  const canvasContext = canvas.getContext('2d');\n\n  if (canvasContext === null) {\n    t.skip(' onscreen canvas 2d context not available');\n  }\n\n  const ctx = canvasContext;\n\n  const rectWidth = Math.floor(kWidth / 2);\n  const rectHeight = Math.floor(kHeight / 2);\n\n  // Red\n  ctx.fillStyle = `rgba(255, 0, 0, 1.0)`;\n  ctx.fillRect(0, 0, rectWidth, rectHeight);\n  // Lime\n  ctx.fillStyle = `rgba(0, 255, 0, 1.0)`;\n  ctx.fillRect(rectWidth, 0, kWidth - rectWidth, rectHeight);\n  // Blue\n  ctx.fillStyle = `rgba(0, 0, 255, 1.0)`;\n  ctx.fillRect(0, rectHeight, rectWidth, kHeight - rectHeight);\n  // Fuchsia\n  ctx.fillStyle = `rgba(255, 0, 255, 1.0)`;\n  ctx.fillRect(rectWidth, rectHeight, kWidth - rectWidth, kHeight - rectHeight);\n\n  const imageData = ctx.getImageData(0, 0, kWidth, kHeight);\n\n  // Create video frame with default color space 'srgb'\n  const frameInit = {\n    format: videoFrameFormat,\n    codedWidth: kWidth,\n    codedHeight: kHeight,\n    timestamp: 0\n  };\n\n  const frame = new VideoFrame(imageData.data.buffer, frameInit);\n  let textureFormat = 'rgba8unorm';\n\n  if (videoFrameFormat === 'BGRA' || videoFrameFormat === 'BGRX') {\n    textureFormat = 'bgra8unorm';\n  }\n\n  const colorAttachment = t.createTextureTracked({\n    format: textureFormat,\n    size: { width: kWidth, height: kHeight, depthOrArrayLayers: 1 },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n\n  const pipeline = createExternalTextureSamplingTestPipeline(t, textureFormat);\n  const bindGroup = createExternalTextureSamplingTestBindGroup(\n    t,\n    undefined /* checkNonStandardIsZeroCopy */,\n    frame,\n    pipeline,\n    'srgb'\n  );\n\n  const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const passEncoder = commandEncoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: colorAttachment.createView(),\n      clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  passEncoder.setPipeline(pipeline);\n  passEncoder.setBindGroup(0, bindGroup);\n  passEncoder.draw(6);\n  passEncoder.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[commandEncoder.finish()]], () => t.device.queue.submit([commandEncoder.finish()]));\n\n  const expected = {\n    topLeft: new Uint8Array([255, 0, 0, 255]),\n    topRight: new Uint8Array([0, 255, 0, 255]),\n    bottomLeft: new Uint8Array([0, 0, 255, 255]),\n    bottomRight: new Uint8Array([255, 0, 255, 255])\n  };\n\n  // For validation, we sample a few pixels away from the edges to avoid compression\n  // artifacts.\n  t.expectSinglePixelComparisonsAreOkInTexture({ texture: colorAttachment }, [\n  // Top-left.\n  {\n    coord: { x: kWidth * 0.25, y: kHeight * 0.25 },\n    exp: expected.topLeft\n  },\n  // Top-right.\n  {\n    coord: { x: kWidth * 0.75, y: kHeight * 0.25 },\n    exp: expected.topRight\n  },\n  // Bottom-left.\n  {\n    coord: { x: kWidth * 0.25, y: kHeight * 0.75 },\n    exp: expected.bottomLeft\n  },\n  // Bottom-right.\n  {\n    coord: { x: kWidth * 0.75, y: kHeight * 0.75 },\n    exp: expected.bottomRight\n  }]\n  );\n});\n\ng.test('importExternalTexture,sampleWithVideoFrameWithVisibleRectParam').\ndesc(\n  `\nTests that we can import VideoFrames and sample the correct sub-rectangle when visibleRect\nparameters are present.\n`\n).\nparams((u) =>\nu //\n.combineWithParams(checkNonStandardIsZeroCopyIfAvailable()).\ncombine('videoName', kVideoNames).\ncombine('dstColorSpace', kPredefinedColorSpace)\n).\nfn(async (t) => {\n  const { videoName, dstColorSpace } = t.params;\n\n  const videoElement = getVideoElement(t, videoName);\n\n  await startPlayingAndWaitForVideo(videoElement, async () => {\n    const source = await getVideoFrameFromVideoElement(t, videoElement);\n\n    // All tested videos are derived from an image showing yellow, red, blue or green in each\n    // quadrant. In this test we crop the video to each quadrant and check that desired color\n    // is sampled from each corner of the cropped image.\n    // visible rect clip applies on raw decoded frame, which defines based on video frame coded size.\n    const srcVideoHeight = source.codedHeight;\n    const srcVideoWidth = source.codedWidth;\n\n    const srcColorSpace = kVideoInfo[videoName].colorSpace;\n    const presentColors = kVideoExpectedColors[srcColorSpace][dstColorSpace];\n\n    // The test crops raw decoded videos first and then apply transform. Expectation should\n    // use coded colors as reference.\n    const expect = kVideoInfo[videoName].coded;\n\n    const cropParams = [\n    // Top left\n    {\n      subRect: { x: 0, y: 0, width: srcVideoWidth / 2, height: srcVideoHeight / 2 },\n      color: convertToUnorm8(presentColors[expect.topLeftColor])\n    },\n    // Top right\n    {\n      subRect: {\n        x: srcVideoWidth / 2,\n        y: 0,\n        width: srcVideoWidth / 2,\n        height: srcVideoHeight / 2\n      },\n      color: convertToUnorm8(presentColors[expect.topRightColor])\n    },\n    // Bottom left\n    {\n      subRect: {\n        x: 0,\n        y: srcVideoHeight / 2,\n        width: srcVideoWidth / 2,\n        height: srcVideoHeight / 2\n      },\n      color: convertToUnorm8(presentColors[expect.bottomLeftColor])\n    },\n    // Bottom right\n    {\n      subRect: {\n        x: srcVideoWidth / 2,\n        y: srcVideoHeight / 2,\n        width: srcVideoWidth / 2,\n        height: srcVideoHeight / 2\n      },\n      color: convertToUnorm8(presentColors[expect.bottomRightColor])\n    }];\n\n\n    for (const cropParam of cropParams) {\n      const subRect = new VideoFrame(source, { visibleRect: cropParam.subRect });\n\n      const colorAttachment = t.createTextureTracked({\n        format: kFormat,\n        size: { width: kWidth, height: kHeight, depthOrArrayLayers: 1 },\n        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n      });\n\n      const pipeline = createExternalTextureSamplingTestPipeline(t);\n      const bindGroup = createExternalTextureSamplingTestBindGroup(\n        t,\n        t.params.checkNonStandardIsZeroCopy,\n        subRect,\n        pipeline,\n        dstColorSpace\n      );\n\n      const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n      const passEncoder = commandEncoder.beginRenderPass({\n        colorAttachments: [\n        {\n          view: colorAttachment.createView(),\n          clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n          storeOp: 'store'\n        }]\n\n      });\n      passEncoder.setPipeline(pipeline);\n      passEncoder.setBindGroup(0, bindGroup);\n      passEncoder.draw(6);\n      passEncoder.end();\n      globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[commandEncoder.finish()]], () => t.device.queue.submit([commandEncoder.finish()]));\n\n      // For validation, we sample a few pixels away from the edges to avoid compression\n      // artifacts.\n      t.expectSinglePixelComparisonsAreOkInTexture({ texture: colorAttachment }, [\n      { coord: { x: kWidth * 0.1, y: kHeight * 0.1 }, exp: cropParam.color },\n      { coord: { x: kWidth * 0.9, y: kHeight * 0.1 }, exp: cropParam.color },\n      { coord: { x: kWidth * 0.1, y: kHeight * 0.9 }, exp: cropParam.color },\n      { coord: { x: kWidth * 0.9, y: kHeight * 0.9 }, exp: cropParam.color }]\n      );\n\n      subRect.close();\n    }\n\n    source.close();\n  });\n});\ng.test('importExternalTexture,compute').\ndesc(\n  `\nTests that we can import an HTMLVideoElement/VideoFrame into a GPUExternalTexture and use it in a\ncompute shader, for several combinations of video format, video color spaces and dst color spaces.\n`\n).\nparams((u) =>\nu //\n.combineWithParams(checkNonStandardIsZeroCopyIfAvailable()).\ncombine('videoName', kVideoNames).\ncombine('sourceType', ['VideoElement', 'VideoFrame']).\ncombine('dstColorSpace', kPredefinedColorSpace)\n).\nfn(async (t) => {\n  const { videoName, sourceType, dstColorSpace } = t.params;\n\n  if (sourceType === 'VideoFrame' && typeof VideoFrame === 'undefined') {\n    t.skip('WebCodec is not supported');\n  }\n\n  const videoElement = getVideoElement(t, videoName);\n\n  await startPlayingAndWaitForVideo(videoElement, async () => {\n    const source =\n    sourceType === 'VideoFrame' ?\n    await getVideoFrameFromVideoElement(t, videoElement) :\n    videoElement;\n    const externalTexture = t.device.importExternalTexture({\n      source,\n      colorSpace: dstColorSpace\n    });\n    if (t.params.checkNonStandardIsZeroCopy) {\n      expectZeroCopyNonStandard(t, externalTexture);\n    }\n    const outputTexture = t.createTextureTracked({\n      format: 'rgba8unorm',\n      size: [2, 2, 1],\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.STORAGE_BINDING\n    });\n\n    // Use display size of VideoFrame and video size of HTMLVideoElement as frame size. These sizes are presenting size which\n    // apply transformation in video metadata if any.\n\n    const pipeline = t.device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        // Shader loads 4 pixels, and then store them in a storage texture.\n        module: t.device.createShaderModule({\n          code: `\n              override frameWidth : i32 = 0;\n              override frameHeight : i32 = 0;\n              @group(0) @binding(0) var t : texture_external;\n              @group(0) @binding(1) var outImage : texture_storage_2d<rgba8unorm, write>;\n\n              @compute @workgroup_size(1) fn main() {\n                let coordTopLeft = vec2<i32>(frameWidth / 4, frameHeight / 4);\n                let coordTopRight = vec2<i32>(frameWidth / 4 * 3, frameHeight / 4);\n                let coordBottomLeft = vec2<i32>(frameWidth / 4, frameHeight / 4 * 3);\n                let coordBottomRight = vec2<i32>(frameWidth / 4 * 3, frameHeight / 4 * 3);\n                var yellow : vec4<f32> = textureLoad(t, coordTopLeft);\n                textureStore(outImage, vec2<i32>(0, 0), yellow);\n                var red : vec4<f32> = textureLoad(t, coordTopRight);\n                textureStore(outImage, vec2<i32>(0, 1), red);\n                var blue : vec4<f32> = textureLoad(t, coordBottomLeft);\n                textureStore(outImage, vec2<i32>(1, 0), blue);\n                var green : vec4<f32> = textureLoad(t, coordBottomRight);\n                textureStore(outImage, vec2<i32>(1, 1), green);\n                return;\n              }\n            `\n        }),\n        entryPoint: 'main',\n\n        // Use display size of VideoFrame and video size of HTMLVideoElement as frame size. These sizes are presenting size which\n        // apply transformation in video metadata if any.\n        constants: {\n          frameWidth:\n          sourceType === 'VideoFrame' ?\n          source.displayWidth :\n          source.videoWidth,\n          frameHeight:\n          sourceType === 'VideoFrame' ?\n          source.displayHeight :\n          source.videoHeight\n        }\n      }\n    });\n\n    const bg = t.device.createBindGroup({\n      entries: [\n      { binding: 0, resource: externalTexture },\n      { binding: 1, resource: outputTexture.createView() }],\n\n      layout: pipeline.getBindGroupLayout(0)\n    });\n\n    const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n    const pass = encoder.beginComputePass();\n    pass.setPipeline(pipeline);\n    pass.setBindGroup(0, bg);\n    pass.dispatchWorkgroups(1);\n    pass.end();\n    globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[encoder.finish()]], () => t.device.queue.submit([encoder.finish()]));\n\n    const srcColorSpace = kVideoInfo[videoName].colorSpace;\n    const presentColors = kVideoExpectedColors[srcColorSpace][dstColorSpace];\n\n    // visible rect is whole frame, no clipping.\n    const expect = kVideoInfo[videoName].display;\n\n    t.expectSinglePixelComparisonsAreOkInTexture({ texture: outputTexture }, [\n    // Top-left.\n    { coord: { x: 0, y: 0 }, exp: convertToUnorm8(presentColors[expect.topLeftColor]) },\n    // Top-right.\n    { coord: { x: 0, y: 1 }, exp: convertToUnorm8(presentColors[expect.topRightColor]) },\n    // Bottom-left.\n    { coord: { x: 1, y: 0 }, exp: convertToUnorm8(presentColors[expect.bottomLeftColor]) },\n    // Bottom-right.\n    { coord: { x: 1, y: 1 }, exp: convertToUnorm8(presentColors[expect.bottomRightColor]) }]\n    );\n  });\n});\n\ng.test('importExternalTexture,cameraCapture').\ndesc(\n  `\nTests that we can import an VideoFrame from webcam into a GPUExternalTexture, sample from it and\ncompared with 2d canvas rendering result.\n`\n).\nparams((u) =>\nu //\n.combineWithParams(checkNonStandardIsZeroCopyIfAvailable()).\ncombine('dstColorSpace', kPredefinedColorSpace)\n).\nfn(async (t) => {\n  const { dstColorSpace } = t.params;\n\n  const frame = await captureCameraFrame(t);\n\n  if (frame.displayHeight === 0 || frame.displayWidth === 0) {\n    t.skip('Captured video frame has 0 height or width.');\n  }\n\n  const frameWidth = frame.displayWidth;\n  const frameHeight = frame.displayHeight;\n\n  // Use WebGPU + GPUExternalTexture to render the captured frame.\n  const colorAttachment = t.createTextureTracked({\n    format: kFormat,\n    size: { width: frameWidth, height: frameHeight },\n    usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT\n  });\n\n  const pipeline = createExternalTextureSamplingTestPipeline(t);\n  const bindGroup = createExternalTextureSamplingTestBindGroup(\n    t,\n    t.params.checkNonStandardIsZeroCopy,\n    frame,\n    pipeline,\n    dstColorSpace\n  );\n\n  const commandEncoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const passEncoder = commandEncoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: colorAttachment.createView(),\n      clearValue: { r: 0.0, g: 0.0, b: 0.0, a: 1.0 },\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  passEncoder.setPipeline(pipeline);\n  passEncoder.setBindGroup(0, bindGroup);\n  passEncoder.draw(6);\n  passEncoder.end();\n  globalThis._TRAMPOLINE_(\"submit\", t.device, t.device.queue.submit, [[commandEncoder.finish()]], () => t.device.queue.submit([commandEncoder.finish()]));\n\n  // Use 2d context canvas as expected result.\n  const canvas = createCanvas(t, 'onscreen', frameWidth, frameHeight);\n\n  const canvasContext = canvas.getContext('2d', { colorSpace: dstColorSpace });\n\n  if (canvasContext === null) {\n    t.skip(' onscreen canvas 2d context not available');\n  }\n\n  const ctx = canvasContext;\n  ctx.drawImage(frame, 0, 0, frameWidth, frameHeight);\n\n  const imageData = ctx.getImageData(0, 0, frameWidth, frameHeight, {\n    colorSpace: dstColorSpace\n  });\n\n  const expectedView = t.getExpectedDstPixelsFromSrcPixels({\n    srcPixels: imageData.data,\n    srcOrigin: [0, 0],\n    srcSize: [frameWidth, frameHeight],\n    dstOrigin: [0, 0],\n    dstSize: [frameWidth, frameHeight],\n    subRectSize: [frameWidth, frameHeight],\n    format: 'rgba8unorm',\n    flipSrcBeforeCopy: false,\n    srcDoFlipYDuringCopy: false,\n    conversion: {\n      srcPremultiplied: false,\n      dstPremultiplied: true\n    }\n  });\n\n  t.expectTexelViewComparisonIsOkInTexture({ texture: colorAttachment }, expectedView, [\n  frameWidth,\n  frameHeight,\n  1]\n  );\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,yCAAyC,CAEzE,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,YAAY,QAAQ,+BAA+B;AAC5D;EACEC,2BAA2B;EAC3BC,6BAA6B;EAC7BC,eAAe;EACfC,kBAAkB;EAClBC,eAAe;EACfC,qBAAqB;EACrBC,WAAW;EACXC,UAAU;EACVC,oBAAoB;AACtB,4BAA4B;;AAE5B,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,MAAM,GAAG,EAAE;AACjB,MAAMC,OAAO,GAAG,YAAY;;AAE5B,OAAO,MAAMC,CAAC,GAAGf,aAAa,CAACC,qBAAqB,CAAC;;AAErD,SAASe,yCAAyCA;AAClDC,CAAC;AACDC,qBAAqB,GAAGJ,OAAO;AAC/B;EACE,MAAMK,QAAQ,GAAGF,CAAC,CAACG,MAAM,CAACC,oBAAoB,CAAC;IAC7CC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACNC,MAAM,EAAEP,CAAC,CAACG,MAAM,CAACK,kBAAkB,CAAC;QAClCC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM,CAAC,CAAC;MACFC,UAAU,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACRJ,MAAM,EAAEP,CAAC,CAACG,MAAM,CAACK,kBAAkB,CAAC;QAClCC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM,CAAC,CAAC;MACFC,UAAU,EAAE,MAAM;MAClBE,OAAO,EAAE;MACT;QACEC,MAAM,EAAEZ;MACV,CAAC;;IAEH,CAAC;IACDa,SAAS,EAAE,EAAEC,QAAQ,EAAE,eAAe,CAAC;EACzC,CAAC,CAAC;;EAEF,OAAOb,QAAQ;AACjB;;AAEA,SAASc,0CAA0CA;AACnDhB,CAAC;AACDiB,0BAA0B;AAC1BC,MAAM;AACNhB,QAAQ;AACRiB,aAAa;AACb;EACE,MAAMC,aAAa,GAAGpB,CAAC,CAACG,MAAM,CAACkB,aAAa,CAAC,CAAC;;EAE9C,MAAMC,eAAe,GAAGtB,CAAC,CAACG,MAAM,CAACoB,qBAAqB,CAAC;IACrDL,MAAM;IACNM,UAAU,EAAEL;EACd,CAAC,CAAC;;EAEF,IAAIF,0BAA0B,EAAE;IAC9BQ,yBAAyB,CAACzB,CAAC,EAAEsB,eAAe,CAAC;EAC/C;EACA,MAAMI,SAAS,GAAG1B,CAAC,CAACG,MAAM,CAACwB,eAAe,CAAC;IACzCtB,MAAM,EAAEH,QAAQ,CAAC0B,kBAAkB,CAAC,CAAC,CAAC;IACtCC,OAAO,EAAE;IACT;MACEC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAEX;IACZ,CAAC;IACD;MACEU,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAET;IACZ,CAAC;;EAEH,CAAC,CAAC;;EAEF,OAAOI,SAAS;AAClB;;AAEA;AACA;AACA;AACA,SAASD,yBAAyBA,CAACzB,CAAC,EAAEsB,eAAe,EAAE;;EAErDtB,CAAC,CAACgC,MAAM,CAACV,eAAe,CAACW,UAAU,EAAE,uBAAuB,CAAC;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qCAAqCA,CAAA,EAAG;EAC/C;EACA,OAAOC,kBAAkB,KAAK,WAAW;;EAEzCA,kBAAkB,CAACC,SAAS,CAACC,cAAc,CAAC,YAAY,CAAC;EACzD;IACE,OAAO,CAAC,CAAC,CAAC,EAAE,EAAEpB,0BAA0B,EAAE,IAAI,CAAC,CAAC,CAAC;EACnD,CAAC,MAAM;IACL,OAAO,CAAC,CAAC,CAAC,CAAC;EACb;AACF;;AAEAnB,CAAC,CAACwC,IAAI,CAAC,8BAA8B,CAAC;AACtCC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC,CAAC;AAAA,CACDC,iBAAiB,CAACR,qCAAqC,CAAC,CAAC,CAAC;AAC3DS,OAAO,CAAC,WAAW,EAAEnD,WAAW,CAAC;AACjCmD,OAAO,CAAC,YAAY,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AACrDA,OAAO,CAAC,eAAe,EAAEpD,qBAAqB;AAC9C,CAAC;AACDqD,EAAE,CAAC,OAAO5C,CAAC,KAAK;EACd,MAAM,EAAE6C,SAAS,EAAEC,UAAU,EAAE3B,aAAa,CAAC,CAAC,GAAGnB,CAAC,CAACwC,MAAM;;EAEzD,IAAIM,UAAU,KAAK,YAAY,IAAI,OAAOC,UAAU,KAAK,WAAW,EAAE;IACpE/C,CAAC,CAACgD,IAAI,CAAC,2BAA2B,CAAC;EACrC;;EAEA,MAAMC,YAAY,GAAG7D,eAAe,CAACY,CAAC,EAAE6C,SAAS,CAAC;;EAElD,MAAM3D,2BAA2B,CAAC+D,YAAY,EAAE,YAAY;IAC1D,MAAM/B,MAAM;IACZ4B,UAAU,KAAK,YAAY;IAC3B,MAAM3D,6BAA6B,CAACa,CAAC,EAAEiD,YAAY,CAAC;IACpDA,YAAY;;IAEZ,MAAMC,eAAe,GAAGlD,CAAC,CAACmD,oBAAoB,CAAC;MAC7CtC,MAAM,EAAEhB,OAAO;MACfuD,IAAI,EAAE,EAAEC,KAAK,EAAEzD,MAAM,EAAE0D,MAAM,EAAE3D,OAAO,EAAE4D,kBAAkB,EAAE,CAAC,CAAC,CAAC;MAC/DC,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAACE;IACpD,CAAC,CAAC;;IAEF,MAAMzD,QAAQ,GAAGH,yCAAyC,CAACC,CAAC,CAAC;IAC7D,MAAM0B,SAAS,GAAGV,0CAA0C;MAC1DhB,CAAC;MACDA,CAAC,CAACwC,MAAM,CAACvB,0BAA0B;MACnCC,MAAM;MACNhB,QAAQ;MACRiB;IACF,CAAC;;IAED,MAAMyC,cAAc,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAA4D,oBAAA,YAAR/D,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,GAAE,CAAC;IAC1J,MAAMC,WAAW,GAAGJ,cAAc,CAACK,eAAe,CAAC;MACjDC,gBAAgB,EAAE;MAClB;QACEC,IAAI,EAAEjB,eAAe,CAACkB,UAAU,CAAC,CAAC;QAClCC,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAExE,CAAC,EAAE,GAAG,EAAEyE,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9CC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;MACX,CAAC;;IAEH,CAAC,CAAC;IACFV,WAAW,CAACW,WAAW,CAACzE,QAAQ,CAAC;IACjC8D,WAAW,CAACY,YAAY,CAAC,CAAC,EAAElD,SAAS,CAAC;IACtCsC,WAAW,CAACa,IAAI,CAAC,CAAC,CAAC;IACnBb,WAAW,CAACc,GAAG,CAAC,CAAC;IACjBjB,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,EAAE,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAApB,UAAA,CAAAC,YAAA,WAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAAAC,MAAA,GAAQ,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,SAA/CjF,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;;IAEvJ,MAAMC,aAAa,GAAGzF,UAAU,CAACoD,SAAS,CAAC,CAACrB,UAAU;IACtD,MAAM2D,aAAa,GAAGzF,oBAAoB,CAACwF,aAAa,CAAC,CAAC/D,aAAa,CAAC;;IAExE;IACA,MAAMa,MAAM,GAAGvC,UAAU,CAACoD,SAAS,CAAC,CAACuC,OAAO;;IAE5C;IACA;IACApF,CAAC,CAACqF,0CAA0C,CAAC,EAAEC,OAAO,EAAEpC,eAAe,CAAC,CAAC,EAAE;IAC3E;IACA;MACEqC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;MAC9C+F,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC2D,YAAY,CAAC;IACzD,CAAC;IACD;IACA;MACEJ,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;MAC9C+F,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC4D,aAAa,CAAC;IAC1D,CAAC;IACD;IACA;MACEL,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;MAC9C+F,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC6D,eAAe,CAAC;IAC5D,CAAC;IACD;IACA;MACEN,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;MAC9C+F,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC8D,gBAAgB,CAAC;IAC7D,CAAC;IACD,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEFhG,CAAC,CAACwC,IAAI,CAAC,kDAAkD,CAAC;AAC1DC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC,CAAC;AAAA,CACDE,OAAO,CAAC,kBAAkB,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;AAC7D,CAAC;AACDC,EAAE,CAAC,CAAC5C,CAAC,KAAK;EACR,MAAM,EAAE+F,gBAAgB,CAAC,CAAC,GAAG/F,CAAC,CAACwC,MAAM;;EAErC,IAAI,OAAOO,UAAU,KAAK,WAAW,EAAE;IACrC/C,CAAC,CAACgD,IAAI,CAAC,2BAA2B,CAAC;EACrC;;EAEA,MAAMgD,MAAM,GAAG/G,YAAY,CAACe,CAAC,EAAE,UAAU,EAAEJ,MAAM,EAAED,OAAO,CAAC;;EAE3D,MAAMsG,aAAa,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;;EAE7C,IAAID,aAAa,KAAK,IAAI,EAAE;IAC1BjG,CAAC,CAACgD,IAAI,CAAC,2CAA2C,CAAC;EACrD;;EAEA,MAAMmD,GAAG,GAAGF,aAAa;;EAEzB,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC1G,MAAM,GAAG,CAAC,CAAC;EACxC,MAAM2G,UAAU,GAAGF,IAAI,CAACC,KAAK,CAAC3G,OAAO,GAAG,CAAC,CAAC;;EAE1C;EACAwG,GAAG,CAACK,SAAS,GAAG,sBAAsB;EACtCL,GAAG,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEL,SAAS,EAAEG,UAAU,CAAC;EACzC;EACAJ,GAAG,CAACK,SAAS,GAAG,sBAAsB;EACtCL,GAAG,CAACM,QAAQ,CAACL,SAAS,EAAE,CAAC,EAAExG,MAAM,GAAGwG,SAAS,EAAEG,UAAU,CAAC;EAC1D;EACAJ,GAAG,CAACK,SAAS,GAAG,sBAAsB;EACtCL,GAAG,CAACM,QAAQ,CAAC,CAAC,EAAEF,UAAU,EAAEH,SAAS,EAAEzG,OAAO,GAAG4G,UAAU,CAAC;EAC5D;EACAJ,GAAG,CAACK,SAAS,GAAG,wBAAwB;EACxCL,GAAG,CAACM,QAAQ,CAACL,SAAS,EAAEG,UAAU,EAAE3G,MAAM,GAAGwG,SAAS,EAAEzG,OAAO,GAAG4G,UAAU,CAAC;;EAE7E,MAAMG,SAAS,GAAGP,GAAG,CAACQ,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE/G,MAAM,EAAED,OAAO,CAAC;;EAEzD;EACA,MAAMiH,SAAS,GAAG;IAChB/F,MAAM,EAAEkF,gBAAgB;IACxBc,UAAU,EAAEjH,MAAM;IAClBkH,WAAW,EAAEnH,OAAO;IACpBoH,SAAS,EAAE;EACb,CAAC;;EAED,MAAMC,KAAK,GAAG,IAAIjE,UAAU,CAAC2D,SAAS,CAACO,IAAI,CAACC,MAAM,EAAEN,SAAS,CAAC;EAC9D,IAAIO,aAAa,GAAG,YAAY;;EAEhC,IAAIpB,gBAAgB,KAAK,MAAM,IAAIA,gBAAgB,KAAK,MAAM,EAAE;IAC9DoB,aAAa,GAAG,YAAY;EAC9B;;EAEA,MAAMjE,eAAe,GAAGlD,CAAC,CAACmD,oBAAoB,CAAC;IAC7CtC,MAAM,EAAEsG,aAAa;IACrB/D,IAAI,EAAE,EAAEC,KAAK,EAAEzD,MAAM,EAAE0D,MAAM,EAAE3D,OAAO,EAAE4D,kBAAkB,EAAE,CAAC,CAAC,CAAC;IAC/DC,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAACE;EACpD,CAAC,CAAC;;EAEF,MAAMzD,QAAQ,GAAGH,yCAAyC,CAACC,CAAC,EAAEmH,aAAa,CAAC;EAC5E,MAAMzF,SAAS,GAAGV,0CAA0C;IAC1DhB,CAAC;IACDoH,SAAS,CAAC;IACVJ,KAAK;IACL9G,QAAQ;IACR;EACF,CAAC;;EAED,MAAM0D,cAAc,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAA4D,oBAAA,YAAR/D,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,GAAE,CAAC;EAC1J,MAAMC,WAAW,GAAGJ,cAAc,CAACK,eAAe,CAAC;IACjDC,gBAAgB,EAAE;IAClB;MACEC,IAAI,EAAEjB,eAAe,CAACkB,UAAU,CAAC,CAAC;MAClCC,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAExE,CAAC,EAAE,GAAG,EAAEyE,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9CC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC;;EAEH,CAAC,CAAC;EACFV,WAAW,CAACW,WAAW,CAACzE,QAAQ,CAAC;EACjC8D,WAAW,CAACY,YAAY,CAAC,CAAC,EAAElD,SAAS,CAAC;EACtCsC,WAAW,CAACa,IAAI,CAAC,CAAC,CAAC;EACnBb,WAAW,CAACc,GAAG,CAAC,CAAC;EACjBjB,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,EAAE,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAApB,UAAA,CAAAC,YAAA,WAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAAAC,MAAA,GAAQ,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,SAA/CjF,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;;EAEvJ,MAAMoC,QAAQ,GAAG;IACfC,OAAO,EAAE,IAAIC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACzCC,QAAQ,EAAE,IAAID,UAAU,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1CE,UAAU,EAAE,IAAIF,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5CG,WAAW,EAAE,IAAIH,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EAChD,CAAC;;EAED;EACA;EACAvH,CAAC,CAACqF,0CAA0C,CAAC,EAAEC,OAAO,EAAEpC,eAAe,CAAC,CAAC,EAAE;EAC3E;EACA;IACEqC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9C+F,GAAG,EAAE2B,QAAQ,CAACC;EAChB,CAAC;EACD;EACA;IACE/B,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9C+F,GAAG,EAAE2B,QAAQ,CAACG;EAChB,CAAC;EACD;EACA;IACEjC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9C+F,GAAG,EAAE2B,QAAQ,CAACI;EAChB,CAAC;EACD;EACA;IACElC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,IAAI,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9C+F,GAAG,EAAE2B,QAAQ,CAACK;EAChB,CAAC;EACD,CAAC;AACH,CAAC,CAAC;;AAEF5H,CAAC,CAACwC,IAAI,CAAC,gEAAgE,CAAC;AACxEC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC,CAAC;AAAA,CACDC,iBAAiB,CAACR,qCAAqC,CAAC,CAAC,CAAC;AAC3DS,OAAO,CAAC,WAAW,EAAEnD,WAAW,CAAC;AACjCmD,OAAO,CAAC,eAAe,EAAEpD,qBAAqB;AAC9C,CAAC;AACDqD,EAAE,CAAC,OAAO5C,CAAC,KAAK;EACd,MAAM,EAAE6C,SAAS,EAAE1B,aAAa,CAAC,CAAC,GAAGnB,CAAC,CAACwC,MAAM;;EAE7C,MAAMS,YAAY,GAAG7D,eAAe,CAACY,CAAC,EAAE6C,SAAS,CAAC;;EAElD,MAAM3D,2BAA2B,CAAC+D,YAAY,EAAE,YAAY;IAC1D,MAAM/B,MAAM,GAAG,MAAM/B,6BAA6B,CAACa,CAAC,EAAEiD,YAAY,CAAC;;IAEnE;IACA;IACA;IACA;IACA,MAAM0E,cAAc,GAAGzG,MAAM,CAAC4F,WAAW;IACzC,MAAMc,aAAa,GAAG1G,MAAM,CAAC2F,UAAU;;IAEvC,MAAM3B,aAAa,GAAGzF,UAAU,CAACoD,SAAS,CAAC,CAACrB,UAAU;IACtD,MAAM2D,aAAa,GAAGzF,oBAAoB,CAACwF,aAAa,CAAC,CAAC/D,aAAa,CAAC;;IAExE;IACA;IACA,MAAMa,MAAM,GAAGvC,UAAU,CAACoD,SAAS,CAAC,CAACgF,KAAK;;IAE1C,MAAMC,UAAU,GAAG;IACnB;IACA;MACEC,OAAO,EAAE,EAAEvC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEpC,KAAK,EAAEuE,aAAa,GAAG,CAAC,EAAEtE,MAAM,EAAEqE,cAAc,GAAG,CAAC,CAAC,CAAC;MAC7EK,KAAK,EAAE1I,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC2D,YAAY,CAAC;IAC3D,CAAC;IACD;IACA;MACEoC,OAAO,EAAE;QACPvC,CAAC,EAAEoC,aAAa,GAAG,CAAC;QACpBnC,CAAC,EAAE,CAAC;QACJpC,KAAK,EAAEuE,aAAa,GAAG,CAAC;QACxBtE,MAAM,EAAEqE,cAAc,GAAG;MAC3B,CAAC;MACDK,KAAK,EAAE1I,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC4D,aAAa,CAAC;IAC5D,CAAC;IACD;IACA;MACEmC,OAAO,EAAE;QACPvC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAEkC,cAAc,GAAG,CAAC;QACrBtE,KAAK,EAAEuE,aAAa,GAAG,CAAC;QACxBtE,MAAM,EAAEqE,cAAc,GAAG;MAC3B,CAAC;MACDK,KAAK,EAAE1I,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC6D,eAAe,CAAC;IAC9D,CAAC;IACD;IACA;MACEkC,OAAO,EAAE;QACPvC,CAAC,EAAEoC,aAAa,GAAG,CAAC;QACpBnC,CAAC,EAAEkC,cAAc,GAAG,CAAC;QACrBtE,KAAK,EAAEuE,aAAa,GAAG,CAAC;QACxBtE,MAAM,EAAEqE,cAAc,GAAG;MAC3B,CAAC;MACDK,KAAK,EAAE1I,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC8D,gBAAgB,CAAC;IAC/D,CAAC,CAAC;;;IAGF,KAAK,MAAMmC,SAAS,IAAIH,UAAU,EAAE;MAClC,MAAMC,OAAO,GAAG,IAAIhF,UAAU,CAAC7B,MAAM,EAAE,EAAEgH,WAAW,EAAED,SAAS,CAACF,OAAO,CAAC,CAAC,CAAC;;MAE1E,MAAM7E,eAAe,GAAGlD,CAAC,CAACmD,oBAAoB,CAAC;QAC7CtC,MAAM,EAAEhB,OAAO;QACfuD,IAAI,EAAE,EAAEC,KAAK,EAAEzD,MAAM,EAAE0D,MAAM,EAAE3D,OAAO,EAAE4D,kBAAkB,EAAE,CAAC,CAAC,CAAC;QAC/DC,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAACE;MACpD,CAAC,CAAC;;MAEF,MAAMzD,QAAQ,GAAGH,yCAAyC,CAACC,CAAC,CAAC;MAC7D,MAAM0B,SAAS,GAAGV,0CAA0C;QAC1DhB,CAAC;QACDA,CAAC,CAACwC,MAAM,CAACvB,0BAA0B;QACnC8G,OAAO;QACP7H,QAAQ;QACRiB;MACF,CAAC;;MAED,MAAMyC,cAAc,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAA4D,oBAAA,YAAR/D,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,GAAE,CAAC;MAC1J,MAAMC,WAAW,GAAGJ,cAAc,CAACK,eAAe,CAAC;QACjDC,gBAAgB,EAAE;QAClB;UACEC,IAAI,EAAEjB,eAAe,CAACkB,UAAU,CAAC,CAAC;UAClCC,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAExE,CAAC,EAAE,GAAG,EAAEyE,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;UAC9CC,MAAM,EAAE,OAAO;UACfC,OAAO,EAAE;QACX,CAAC;;MAEH,CAAC,CAAC;MACFV,WAAW,CAACW,WAAW,CAACzE,QAAQ,CAAC;MACjC8D,WAAW,CAACY,YAAY,CAAC,CAAC,EAAElD,SAAS,CAAC;MACtCsC,WAAW,CAACa,IAAI,CAAC,CAAC,CAAC;MACnBb,WAAW,CAACc,GAAG,CAAC,CAAC;MACjBjB,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,EAAE,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAApB,UAAA,CAAAC,YAAA,WAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAAAC,MAAA,GAAQ,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,SAA/CjF,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;;MAEvJ;MACA;MACAjF,CAAC,CAACqF,0CAA0C,CAAC,EAAEC,OAAO,EAAEpC,eAAe,CAAC,CAAC,EAAE;MAC3E,EAAEqC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,GAAG,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,GAAG,CAAC,CAAC,EAAE+F,GAAG,EAAEuC,SAAS,CAACD,KAAK,CAAC,CAAC;MACtE,EAAEzC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,GAAG,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,GAAG,CAAC,CAAC,EAAE+F,GAAG,EAAEuC,SAAS,CAACD,KAAK,CAAC,CAAC;MACtE,EAAEzC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,GAAG,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,GAAG,CAAC,CAAC,EAAE+F,GAAG,EAAEuC,SAAS,CAACD,KAAK,CAAC,CAAC;MACtE,EAAEzC,KAAK,EAAE,EAAEC,CAAC,EAAE5F,MAAM,GAAG,GAAG,EAAE6F,CAAC,EAAE9F,OAAO,GAAG,GAAG,CAAC,CAAC,EAAE+F,GAAG,EAAEuC,SAAS,CAACD,KAAK,CAAC,CAAC;MACtE,CAAC;;MAEDD,OAAO,CAACI,KAAK,CAAC,CAAC;IACjB;;IAEAjH,MAAM,CAACiH,KAAK,CAAC,CAAC;EAChB,CAAC,CAAC;AACJ,CAAC,CAAC;AACFrI,CAAC,CAACwC,IAAI,CAAC,+BAA+B,CAAC;AACvCC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC,CAAC;AAAA,CACDC,iBAAiB,CAACR,qCAAqC,CAAC,CAAC,CAAC;AAC3DS,OAAO,CAAC,WAAW,EAAEnD,WAAW,CAAC;AACjCmD,OAAO,CAAC,YAAY,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AACrDA,OAAO,CAAC,eAAe,EAAEpD,qBAAqB;AAC9C,CAAC;AACDqD,EAAE,CAAC,OAAO5C,CAAC,KAAK;EACd,MAAM,EAAE6C,SAAS,EAAEC,UAAU,EAAE3B,aAAa,CAAC,CAAC,GAAGnB,CAAC,CAACwC,MAAM;;EAEzD,IAAIM,UAAU,KAAK,YAAY,IAAI,OAAOC,UAAU,KAAK,WAAW,EAAE;IACpE/C,CAAC,CAACgD,IAAI,CAAC,2BAA2B,CAAC;EACrC;;EAEA,MAAMC,YAAY,GAAG7D,eAAe,CAACY,CAAC,EAAE6C,SAAS,CAAC;;EAElD,MAAM3D,2BAA2B,CAAC+D,YAAY,EAAE,YAAY;IAC1D,MAAM/B,MAAM;IACZ4B,UAAU,KAAK,YAAY;IAC3B,MAAM3D,6BAA6B,CAACa,CAAC,EAAEiD,YAAY,CAAC;IACpDA,YAAY;IACZ,MAAM3B,eAAe,GAAGtB,CAAC,CAACG,MAAM,CAACoB,qBAAqB,CAAC;MACrDL,MAAM;MACNM,UAAU,EAAEL;IACd,CAAC,CAAC;IACF,IAAInB,CAAC,CAACwC,MAAM,CAACvB,0BAA0B,EAAE;MACvCQ,yBAAyB,CAACzB,CAAC,EAAEsB,eAAe,CAAC;IAC/C;IACA,MAAM8G,aAAa,GAAGpI,CAAC,CAACmD,oBAAoB,CAAC;MAC3CtC,MAAM,EAAE,YAAY;MACpBuC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACfI,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAAC4E;IACpD,CAAC,CAAC;;IAEF;IACA;;IAEA,MAAMnI,QAAQ,GAAGF,CAAC,CAACG,MAAM,CAACmI,qBAAqB,CAAC;MAC9CjI,MAAM,EAAE,MAAM;MACdkI,OAAO,EAAE;QACP;QACAhI,MAAM,EAAEP,CAAC,CAACG,MAAM,CAACK,kBAAkB,CAAC;UAClCC,IAAI,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,CAAC,CAAC;QACFC,UAAU,EAAE,MAAM;;QAElB;QACA;QACA8H,SAAS,EAAE;UACTC,UAAU;UACV3F,UAAU,KAAK,YAAY;UAC3B5B,MAAM,CAACwH,YAAY;UACnBxH,MAAM,CAACyH,UAAU;UACjBC,WAAW;UACX9F,UAAU,KAAK,YAAY;UAC3B5B,MAAM,CAAC2H,aAAa;UACpB3H,MAAM,CAAC4H;QACT;MACF;IACF,CAAC,CAAC;;IAEF,MAAMC,EAAE,GAAG/I,CAAC,CAACG,MAAM,CAACwB,eAAe,CAAC;MAClCE,OAAO,EAAE;MACT,EAAEC,OAAO,EAAE,CAAC,EAAEC,QAAQ,EAAET,eAAe,CAAC,CAAC;MACzC,EAAEQ,OAAO,EAAE,CAAC,EAAEC,QAAQ,EAAEqG,aAAa,CAAChE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;MAErD/D,MAAM,EAAEH,QAAQ,CAAC0B,kBAAkB,CAAC,CAAC;IACvC,CAAC,CAAC;;IAEF,MAAMoH,OAAO,GAAGnF,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAA4D,oBAAA,YAAR/D,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,GAAE,CAAC;IACnJ,MAAMkF,IAAI,GAAGD,OAAO,CAACE,gBAAgB,CAAC,CAAC;IACvCD,IAAI,CAACtE,WAAW,CAACzE,QAAQ,CAAC;IAC1B+I,IAAI,CAACrE,YAAY,CAAC,CAAC,EAAEmE,EAAE,CAAC;IACxBE,IAAI,CAACE,kBAAkB,CAAC,CAAC,CAAC;IAC1BF,IAAI,CAACnE,GAAG,CAAC,CAAC;IACVjB,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,EAAE,CAAC,CAACgE,OAAO,CAAC/D,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAApB,UAAA,CAAAC,YAAA,WAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAAAC,MAAA,GAAQ,CAACgE,OAAO,CAAC/D,MAAM,CAAC,CAAC,CAAC,SAAxCjF,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,CAAC,CAACgE,OAAO,CAAC/D,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;;IAEzI,MAAMC,aAAa,GAAGzF,UAAU,CAACoD,SAAS,CAAC,CAACrB,UAAU;IACtD,MAAM2D,aAAa,GAAGzF,oBAAoB,CAACwF,aAAa,CAAC,CAAC/D,aAAa,CAAC;;IAExE;IACA,MAAMa,MAAM,GAAGvC,UAAU,CAACoD,SAAS,CAAC,CAACuC,OAAO;;IAE5CpF,CAAC,CAACqF,0CAA0C,CAAC,EAAEC,OAAO,EAAE8C,aAAa,CAAC,CAAC,EAAE;IACzE;IACA,EAAE7C,KAAK,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEC,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC2D,YAAY,CAAC,CAAC,CAAC,CAAC;IACnF;IACA,EAAEJ,KAAK,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEC,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC4D,aAAa,CAAC,CAAC,CAAC,CAAC;IACpF;IACA,EAAEL,KAAK,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEC,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC6D,eAAe,CAAC,CAAC,CAAC,CAAC;IACtF;IACA,EAAEN,KAAK,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEC,GAAG,EAAEpG,eAAe,CAAC6F,aAAa,CAACnD,MAAM,CAAC8D,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACvF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEFhG,CAAC,CAACwC,IAAI,CAAC,qCAAqC,CAAC;AAC7CC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC,CAAC;AAAA,CACDC,iBAAiB,CAACR,qCAAqC,CAAC,CAAC,CAAC;AAC3DS,OAAO,CAAC,eAAe,EAAEpD,qBAAqB;AAC9C,CAAC;AACDqD,EAAE,CAAC,OAAO5C,CAAC,KAAK;EACd,MAAM,EAAEmB,aAAa,CAAC,CAAC,GAAGnB,CAAC,CAACwC,MAAM;;EAElC,MAAMwE,KAAK,GAAG,MAAM3H,kBAAkB,CAACW,CAAC,CAAC;;EAEzC,IAAIgH,KAAK,CAAC6B,aAAa,KAAK,CAAC,IAAI7B,KAAK,CAAC0B,YAAY,KAAK,CAAC,EAAE;IACzD1I,CAAC,CAACgD,IAAI,CAAC,6CAA6C,CAAC;EACvD;;EAEA,MAAMyF,UAAU,GAAGzB,KAAK,CAAC0B,YAAY;EACrC,MAAME,WAAW,GAAG5B,KAAK,CAAC6B,aAAa;;EAEvC;EACA,MAAM3F,eAAe,GAAGlD,CAAC,CAACmD,oBAAoB,CAAC;IAC7CtC,MAAM,EAAEhB,OAAO;IACfuD,IAAI,EAAE,EAAEC,KAAK,EAAEoF,UAAU,EAAEnF,MAAM,EAAEsF,WAAW,CAAC,CAAC;IAChDpF,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAACE;EACpD,CAAC,CAAC;;EAEF,MAAMzD,QAAQ,GAAGH,yCAAyC,CAACC,CAAC,CAAC;EAC7D,MAAM0B,SAAS,GAAGV,0CAA0C;IAC1DhB,CAAC;IACDA,CAAC,CAACwC,MAAM,CAACvB,0BAA0B;IACnC+F,KAAK;IACL9G,QAAQ;IACRiB;EACF,CAAC;;EAED,MAAMyC,cAAc,GAAGC,UAAU,CAACC,YAAY,CAAC,sBAAsB,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,EAAE,EAAE,EAAE,MAAAF,UAAA,CAAAC,YAAA,yBAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAA4D,oBAAA,YAAR/D,CAAC,CAACG,MAAM,CAAC4D,oBAAoB,GAAE,CAAC;EAC1J,MAAMC,WAAW,GAAGJ,cAAc,CAACK,eAAe,CAAC;IACjDC,gBAAgB,EAAE;IAClB;MACEC,IAAI,EAAEjB,eAAe,CAACkB,UAAU,CAAC,CAAC;MAClCC,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAExE,CAAC,EAAE,GAAG,EAAEyE,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9CC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC;;EAEH,CAAC,CAAC;EACFV,WAAW,CAACW,WAAW,CAACzE,QAAQ,CAAC;EACjC8D,WAAW,CAACY,YAAY,CAAC,CAAC,EAAElD,SAAS,CAAC;EACtCsC,WAAW,CAACa,IAAI,CAAC,CAAC,CAAC;EACnBb,WAAW,CAACc,GAAG,CAAC,CAAC;EACjBjB,UAAU,CAACC,YAAY,CAAC,QAAQ,EAAE9D,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,EAAE,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,MAAApB,UAAA,CAAAC,YAAA,WAAM9D,CAAC,CAACG,MAAM,EAARH,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAAAC,MAAA,GAAQ,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,SAA/CjF,CAAC,CAACG,MAAM,CAAC4E,KAAK,CAACC,MAAM,CAAC,CAACpB,cAAc,CAACqB,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC;;EAEvJ;EACA,MAAMe,MAAM,GAAG/G,YAAY,CAACe,CAAC,EAAE,UAAU,EAAEyI,UAAU,EAAEG,WAAW,CAAC;;EAEnE,MAAM3C,aAAa,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,EAAE,EAAE1E,UAAU,EAAEL,aAAa,CAAC,CAAC,CAAC;;EAE5E,IAAI8E,aAAa,KAAK,IAAI,EAAE;IAC1BjG,CAAC,CAACgD,IAAI,CAAC,2CAA2C,CAAC;EACrD;;EAEA,MAAMmD,GAAG,GAAGF,aAAa;EACzBE,GAAG,CAACiD,SAAS,CAACpC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEyB,UAAU,EAAEG,WAAW,CAAC;;EAEnD,MAAMlC,SAAS,GAAGP,GAAG,CAACQ,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE8B,UAAU,EAAEG,WAAW,EAAE;IAChEpH,UAAU,EAAEL;EACd,CAAC,CAAC;;EAEF,MAAMkI,YAAY,GAAGrJ,CAAC,CAACsJ,iCAAiC,CAAC;IACvDC,SAAS,EAAE7C,SAAS,CAACO,IAAI;IACzBuC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACjBC,OAAO,EAAE,CAAChB,UAAU,EAAEG,WAAW,CAAC;IAClCc,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACjBC,OAAO,EAAE,CAAClB,UAAU,EAAEG,WAAW,CAAC;IAClCgB,WAAW,EAAE,CAACnB,UAAU,EAAEG,WAAW,CAAC;IACtC/H,MAAM,EAAE,YAAY;IACpBgJ,iBAAiB,EAAE,KAAK;IACxBC,oBAAoB,EAAE,KAAK;IAC3BC,UAAU,EAAE;MACVC,gBAAgB,EAAE,KAAK;MACvBC,gBAAgB,EAAE;IACpB;EACF,CAAC,CAAC;;EAEFjK,CAAC,CAACkK,sCAAsC,CAAC,EAAE5E,OAAO,EAAEpC,eAAe,CAAC,CAAC,EAAEmG,YAAY,EAAE;EACrFZ,UAAU;EACVG,WAAW;EACX,CAAC;EACD,CAAC;AACH,CAAC,CAAC","ignoreList":[]}