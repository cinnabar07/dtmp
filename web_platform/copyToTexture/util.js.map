{"version":3,"file":"util.js","names":["TexelView","kColors","Red","R","G","B","A","Green","Blue","Black","White","SemitransparentWhite","kTestColorsOpaque","kTestColorsAll","makeTestColorsTexelView","testColors","format","width","height","premultiplied","flipY","fromTexelsAsColors","coords","y","pixelPos","x","currentPixel","length"],"sources":["../../../../src/webgpu/web_platform/copyToTexture/util.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { TexelView } from '../../util/texture/texel_view.js';\n\n\n\n// None of the dst texture format is 'uint' or 'sint', so we can always use float value.\nconst kColors = {\n  Red: { R: 1.0, G: 0.0, B: 0.0, A: 1.0 },\n  Green: { R: 0.0, G: 1.0, B: 0.0, A: 1.0 },\n  Blue: { R: 0.0, G: 0.0, B: 1.0, A: 1.0 },\n  Black: { R: 0.0, G: 0.0, B: 0.0, A: 1.0 },\n  White: { R: 1.0, G: 1.0, B: 1.0, A: 1.0 },\n  SemitransparentWhite: { R: 1.0, G: 1.0, B: 1.0, A: 0.6 }\n};\n\nexport const kTestColorsOpaque = [\nkColors.Red,\nkColors.Green,\nkColors.Blue,\nkColors.Black,\nkColors.White];\n\n\nexport const kTestColorsAll = [...kTestColorsOpaque, kColors.SemitransparentWhite];\n\nexport function makeTestColorsTexelView({\n  testColors,\n  format,\n  width,\n  height,\n  premultiplied,\n  flipY\n\n\n\n\n\n\n\n}) {\n  return TexelView.fromTexelsAsColors(format, (coords) => {\n    const y = flipY ? height - coords.y - 1 : coords.y;\n    const pixelPos = y * width + coords.x;\n    const currentPixel = testColors[pixelPos % testColors.length];\n\n    if (premultiplied && currentPixel.A !== 1.0) {\n      return {\n        R: currentPixel.R * currentPixel.A,\n        G: currentPixel.G * currentPixel.A,\n        B: currentPixel.B * currentPixel.A,\n        A: currentPixel.A\n      };\n    } else {\n      return currentPixel;\n    }\n  });\n}"],"mappings":";;IAAA;AACA;AACA,GAAG,SAASA,SAAS,QAAQ,kCAAkC;;AAI/D;AACA,MAAMC,OAAO,GAAG;EACdC,GAAG,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;EACvCC,KAAK,EAAE,EAAEJ,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;EACzCE,IAAI,EAAE,EAAEL,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;EACxCG,KAAK,EAAE,EAAEN,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;EACzCI,KAAK,EAAE,EAAEP,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;EACzCK,oBAAoB,EAAE,EAAER,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC;AACzD,CAAC;;AAED,OAAO,MAAMM,iBAAiB,GAAG;AACjCX,OAAO,CAACC,GAAG;AACXD,OAAO,CAACM,KAAK;AACbN,OAAO,CAACO,IAAI;AACZP,OAAO,CAACQ,KAAK;AACbR,OAAO,CAACS,KAAK,CAAC;;;AAGd,OAAO,MAAMG,cAAc,GAAG,CAAC,GAAGD,iBAAiB,EAAEX,OAAO,CAACU,oBAAoB,CAAC;;AAElF,OAAO,SAASG,uBAAuBA,CAAC;EACtCC,UAAU;EACVC,MAAM;EACNC,KAAK;EACLC,MAAM;EACNC,aAAa;EACbC;;;;;;;;AAQF,CAAC,EAAE;EACD,OAAOpB,SAAS,CAACqB,kBAAkB,CAACL,MAAM,EAAE,CAACM,MAAM,KAAK;IACtD,MAAMC,CAAC,GAAGH,KAAK,GAAGF,MAAM,GAAGI,MAAM,CAACC,CAAC,GAAG,CAAC,GAAGD,MAAM,CAACC,CAAC;IAClD,MAAMC,QAAQ,GAAGD,CAAC,GAAGN,KAAK,GAAGK,MAAM,CAACG,CAAC;IACrC,MAAMC,YAAY,GAAGX,UAAU,CAACS,QAAQ,GAAGT,UAAU,CAACY,MAAM,CAAC;;IAE7D,IAAIR,aAAa,IAAIO,YAAY,CAACpB,CAAC,KAAK,GAAG,EAAE;MAC3C,OAAO;QACLH,CAAC,EAAEuB,YAAY,CAACvB,CAAC,GAAGuB,YAAY,CAACpB,CAAC;QAClCF,CAAC,EAAEsB,YAAY,CAACtB,CAAC,GAAGsB,YAAY,CAACpB,CAAC;QAClCD,CAAC,EAAEqB,YAAY,CAACrB,CAAC,GAAGqB,YAAY,CAACpB,CAAC;QAClCA,CAAC,EAAEoB,YAAY,CAACpB;MAClB,CAAC;IACH,CAAC,MAAM;MACL,OAAOoB,YAAY;IACrB;EACF,CAAC,CAAC;AACJ","ignoreList":[]}