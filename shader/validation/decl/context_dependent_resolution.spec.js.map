{"version":3,"file":"context_dependent_resolution.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kAttributeCases","align","binding","builtin","group","id","interpolate","invariant","location","must_use","size","workgroup_size","compute","fragment","vertex","test","desc","params","u","combine","beginSubcases","fn","t","code","decl","case","expectCompileResult","kBuiltinCases","vertex_index","instance_index","position_vertex","position_fragment","front_facing","frag_depth","sample_index","sample_mask_input","sample_mask_output","local_invocation_id","local_invocation_index","global_invocation_id","workgroup_id","num_workgroups","beforeAllSubcases","wgsl","skipIf","isCompatibility","includes","kDiagnosticSeverityCases","error","warning","off","info","kDiagnosticRuleCases","derivative_uniformity","unknown_rule","unknown","rule","kEnableCases","f16","selectDeviceOrSkipTestCase","kLanguageCases","readonly_and_readwrite_storage_textures","packed_4x8_integer_dot_product","unrestricted_pointer_parameters","pointer_composite_access","hasLanguageFeature","kSwizzleCases","length","i","padEnd","kInterpolationTypeCases","attr","kInterpolationSamplingCases","kInterpolationFlatCases"],"sources":["../../../../../src/webgpu/shader/validation/decl/context_dependent_resolution.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests that context dependent names do not participate in name resolution.\nThat is, a declaration named the same as a context dependent name will not interfere.\n\nContext-dependent names:\n * Attribute names\n * Built-in value names\n * Diagnostic severity control\n * Diagnostic triggering rules\n * Enable extensions\n * Language extensions\n * Swizzles\n * Interpolation type\n * Interpolation sampling\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kAttributeCases = {\n  align: `struct S { @align(16) x : u32 }`,\n  binding: `@group(0) @binding(0) var s : sampler;`,\n  builtin: `@vertex fn main() -> @builtin(position) vec4f { return vec4f(); }`,\n  // const is not writable\n  // diagnostic is a keyword\n  group: `@group(0) @binding(0) var s : sampler;`,\n  id: `@id(1) override x : i32;`,\n  interpolate: `@fragment fn main(@location(0) @interpolate(flat, either) x : i32) { }`,\n  invariant: `@fragment fn main(@builtin(position) @invariant pos : vec4f) { }`,\n  location: `@fragment fn main(@location(0) x : f32) { }`,\n  must_use: `@must_use fn foo() -> u32 { return 0; }`,\n  size: `struct S { @size(4) x : u32 }`,\n  workgroup_size: `@compute @workgroup_size(1) fn main() { }`,\n  compute: `@compute @workgroup_size(1) fn main() { }`,\n  fragment: `@fragment fn main() { }`,\n  vertex: `@vertex fn main() -> @builtin(position) vec4f { return vec4f(); }`\n};\n\ng.test('attribute_names').\ndesc('Tests attribute names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', keysOf(kAttributeCases)).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nfn((t) => {\n  const code = `\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    ${kAttributeCases[t.params.case]}\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kBuiltinCases = {\n  vertex_index: `\n  @vertex\n  fn main(@builtin(vertex_index) idx : u32) -> @builtin(position) vec4f\n  { return vec4f(); }`,\n  instance_index: `\n  @vertex\n  fn main(@builtin(instance_index) idx : u32) -> @builtin(position) vec4f\n  { return vec4f(); }`,\n  position_vertex: `\n  @vertex fn main() -> @builtin(position) vec4f\n  { return vec4f(); }`,\n  position_fragment: `@fragment fn main(@builtin(position) pos : vec4f) { }`,\n  front_facing: `@fragment fn main(@builtin(front_facing) x : bool) { }`,\n  frag_depth: `@fragment fn main() -> @builtin(frag_depth) f32 { return 0; }`,\n  sample_index: `@fragment fn main(@builtin(sample_index) x : u32) { }`,\n  sample_mask_input: `@fragment fn main(@builtin(sample_mask) x : u32) { }`,\n  sample_mask_output: `@fragment fn main() -> @builtin(sample_mask) u32 { return 0; }`,\n  local_invocation_id: `\n  @compute @workgroup_size(1)\n  fn main(@builtin(local_invocation_id) id : vec3u) { }`,\n  local_invocation_index: `\n  @compute @workgroup_size(1)\n  fn main(@builtin(local_invocation_index) id : u32) { }`,\n  global_invocation_id: `\n  @compute @workgroup_size(1)\n  fn main(@builtin(global_invocation_id) id : vec3u) { }`,\n  workgroup_id: `\n  @compute @workgroup_size(1)\n  fn main(@builtin(workgroup_id) id : vec3u) { }`,\n  num_workgroups: `\n  @compute @workgroup_size(1)\n  fn main(@builtin(num_workgroups) id : vec3u) { }`\n};\n\ng.test('builtin_value_names').\ndesc('Tests builtin value names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', keysOf(kBuiltinCases)).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nbeforeAllSubcases((t) => {\n  const wgsl = kBuiltinCases[t.params.case];\n  t.skipIf(\n    t.isCompatibility && wgsl.includes('sample_mask'),\n    'sample_mask is not supported in compatibility mode'\n  );\n  t.skipIf(\n    t.isCompatibility && wgsl.includes('sample_index'),\n    'sample_index is not supported in compatibility mode'\n  );\n}).\nfn((t) => {\n  const code = `\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    ${kBuiltinCases[t.params.case]}\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kDiagnosticSeverityCases = {\n  error: `\n  diagnostic(error, derivative_uniformity);\n  @diagnostic(error, derivative_uniformity) fn foo() { }\n  `,\n  warning: `\n  diagnostic(warning, derivative_uniformity);\n  @diagnostic(warning, derivative_uniformity) fn foo() { }\n  `,\n  off: `\n  diagnostic(off, derivative_uniformity);\n  @diagnostic(off, derivative_uniformity) fn foo() { }\n  `,\n  info: `\n  diagnostic(info, derivative_uniformity);\n  @diagnostic(info, derivative_uniformity) fn foo() { }\n  `\n};\n\ng.test('diagnostic_severity_names').\ndesc('Tests diagnostic severity names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', keysOf(kDiagnosticSeverityCases)).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nfn((t) => {\n  const code = `\n    ${kDiagnosticSeverityCases[t.params.case]}\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kDiagnosticRuleCases = {\n  derivative_uniformity: `\n  diagnostic(off, derivative_uniformity);\n  @diagnostic(warning, derivative_uniformity) fn foo() { }`,\n  unknown_rule: `\n  diagnostic(off, unknown_rule);\n  @diagnostic(warning, unknown_rule) fn foo() { }`,\n  unknown: `\n  diagnostic(off, unknown.rule);\n  @diagnostic(warning, unknown.rule) fn foo() { }`,\n  rule: `\n  diagnostic(off, unknown.rule);\n  @diagnostic(warning, unknown.rule) fn foo() { }`\n};\n\ng.test('diagnostic_rule_names').\ndesc('Tests diagnostic rule names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', keysOf(kDiagnosticRuleCases)).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nfn((t) => {\n  const code = `\n    ${kDiagnosticRuleCases[t.params.case]}\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kEnableCases = {\n  f16: `enable f16;`\n};\n\ng.test('enable_names').\ndesc('Tests enable extension names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', keysOf(kEnableCases)).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const code = `\n    ${kEnableCases[t.params.case]}\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kLanguageCases = {\n  readonly_and_readwrite_storage_textures: `requires readonly_and_readwrite_storage_textures;`,\n  packed_4x8_integer_dot_product: `requires packed_4x8_integer_dot_product;`,\n  unrestricted_pointer_parameters: `requires unrestricted_pointer_parameters;`,\n  pointer_composite_access: `requires pointer_composite_access;`\n};\n\ng.test('language_names').\ndesc('Tests language extension names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', keysOf(kLanguageCases)).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nfn((t) => {\n  t.skipIf(!t.hasLanguageFeature(t.params.case), 'Missing language feature');\n  const code = `\n    ${kLanguageCases[t.params.case]}\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kSwizzleCases = [\n'x',\n'y',\n'z',\n'w',\n'xy',\n'yxz',\n'wxyz',\n'xyxy',\n'r',\n'g',\n'b',\n'a',\n'rgb',\n'arr',\n'bgra',\n'agra'];\n\n\ng.test('swizzle_names').\ndesc('Tests swizzle names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', kSwizzleCases).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nfn((t) => {\n  let code = `${t.params.decl} ${t.params.case} : u32 = 0;\\n`;\n  if (t.params.case.length === 1) {\n    for (let i = 2; i <= 4; i++) {\n      code += `${t.params.decl} ${t.params.case.padEnd(i, t.params.case[0])} : u32 = 0;\\n`;\n    }\n  }\n  code += `fn foo() {\n      var x : vec4f;\n      _ = x.${t.params.case};\n    `;\n  if (t.params.case.length === 1) {\n    for (let i = 2; i <= 4; i++) {\n      code += `_ = x.${t.params.case.padEnd(i, t.params.case[0])};\\n`;\n    }\n  }\n  code += `}\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }`;\n  t.expectCompileResult(true, code);\n});\n\nconst kInterpolationTypeCases = ['perspective', 'linear', 'flat'];\n\ng.test('interpolation_type_names').\ndesc('Tests interpolation type names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', kInterpolationTypeCases).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && t.params.case === 'linear',\n    'compatibility mode does not support linear interpolation type'\n  );\n}).\nfn((t) => {\n  const attr =\n  t.isCompatibility && t.params.case === 'flat' ?\n  `@interpolate(flat, either)` :\n  `@interpolate(${t.params.case})`;\n  const code = `\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    @fragment fn main(@location(0) ${attr} x : f32) { }\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kInterpolationSamplingCases = ['center', 'centroid', 'sample'];\n\ng.test('interpolation_sampling_names').\ndesc('Tests interpolation type names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', kInterpolationSamplingCases).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && t.params.case === 'sample',\n    'compatibility mode does not support sample sampling'\n  );\n}).\nfn((t) => {\n  const code = `\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    @fragment fn main(@location(0) @interpolate(perspective, ${t.params.case}) x : f32) { }\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});\n\nconst kInterpolationFlatCases = ['first', 'either'];\n\ng.test('interpolation_flat_names').\ndesc('Tests interpolation type names do not use name resolution').\nparams((u) =>\nu.\ncombine('case', kInterpolationFlatCases).\nbeginSubcases().\ncombine('decl', ['override', 'const', 'var<private>'])\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && t.params.case === 'first',\n    'compatibility mode does not support first sampling'\n  );\n}).\nfn((t) => {\n  const code = `\n    ${t.params.decl} ${t.params.case} : u32 = 0;\n    @fragment fn main(@location(0) @interpolate(flat, ${t.params.case}) x : u32) { }\n    fn use_var() -> u32 {\n      return ${t.params.case};\n    }\n    `;\n\n  t.expectCompileResult(true, code);\n});"],"mappings":"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","ignoreList":[]}