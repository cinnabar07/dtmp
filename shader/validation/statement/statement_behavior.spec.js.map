{"version":3,"file":"statement_behavior.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kInvalidStatements","break","break_if","continue","loop1","loop2","loop3","loop4","loop5","loop6","loop7","loop8","for1","for2","for3","for4","for5","for6","switch1","sequence1","compound1","test","desc","specURL","params","u","combine","fn","t","body","code","expectCompileResult","kValidStatements","empty","const_assert","let","var1","var2","assign","phony_assign","compound_assign","return","discard","function_call1","function_call2","if1","if2","break1","break2","continue1","while1","while2","while3","switch2","switch3","switch4","sequence2","sequence3","compound2","kInvalidFunctions","next_for_type","next_return_for_type","func","function","kValidFunctions","next_return","unreachable_code_after_return_with_value","no_final_return","no_final_return_unreachable_code"],"sources":["../../../../../src/webgpu/shader/validation/statement/statement_behavior.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTest statement behavior analysis.\n\nFunctions must have a behavior of {Return}, {Next}, or {Return, Next}.\nFunctions with a return type must have a behavior of {Return}.\n\nEach statement in the function must be valid according to the table.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kInvalidStatements = {\n  break: `break`,\n  break_if: `break if true`,\n  continue: `continue`,\n  loop1: `loop { }`,\n  loop2: `loop { continuing { } }`,\n  loop3: `loop { continue; continuing { } }`,\n  loop4: `loop { continuing { break; } }`,\n  loop5: `loop { continuing { continue; } }`,\n  loop6: `loop { continuing { return; } }`,\n  loop7: `loop { continue; break; }`,\n  loop8: `loop { continuing { break if true; return; } }`,\n  for1: `for (;;) { }`,\n  for2: `for (var i = 0; ; i++) { }`,\n  for3: `for (;; break) { }`,\n  for4: `for (;; continue ) { }`,\n  for5: `for (;; return ) { }`,\n  for6: `for (;;) { continue; break; }`,\n  // while loops always have break in their behaviors.\n  switch1: `switch (1) { case 1 { } }`,\n  sequence1: `return; loop { }`,\n  compound1: `{ loop { } }`\n};\n\ng.test('invalid_statements').\ndesc('Test statements with invalid behaviors').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#behaviors-rules').\nparams((u) => u.combine('body', keysOf(kInvalidStatements))).\nfn((t) => {\n  const body = kInvalidStatements[t.params.body];\n  const code = `fn foo() {\n      ${body};\n    }`;\n  t.expectCompileResult(false, code);\n});\n\nconst kValidStatements = {\n  empty: ``,\n  const_assert: `const_assert true`,\n  let: `let x = 1`,\n  var1: `var x = 1`,\n  var2: `var x : i32`,\n  assign: `v = 1`,\n  phony_assign: `_ = 1`,\n  compound_assign: `v += 1`,\n  return: `return`,\n  discard: `discard`,\n  function_call1: `bar()`,\n  function_call2: `workgroupBarrier()`,\n\n  if1: `if true { } else { }`,\n  if2: `if true { }`,\n\n  break1: `loop { break; }`,\n  break2: `loop { if false { break; } }`,\n  break_if: `loop { continuing { break if false; } }`,\n\n  continue1: `loop { continue; continuing { break if true; } }`,\n\n  loop1: `loop { break; }`,\n  loop2: `loop { break; continuing { } }`,\n  loop3: `loop { continue; continuing { break if true; } }`,\n  loop4: `loop { break; continue; }`,\n\n  for1: `for (; true; ) { }`,\n  for2: `for (;;) { break; }`,\n  for3: `for (;true;) { continue; }`,\n\n  while1: `while true { }`,\n  while2: `while true { continue; }`,\n  while3: `while true { continue; break; }`,\n\n  switch1: `switch 1 { default { } }`,\n  switch2: `switch 1 { case 1 { } default { } }`,\n  switch3: `switch 1 { default { break; } }`,\n  switch4: `switch 1 { default { } case 1 { break; } }`,\n\n  sequence1: `return; let x = 1`,\n  sequence2: `if true { } let x = 1`,\n  sequence3: `switch 1 { default { break; return; } }`,\n\n  compound1: `{ }`,\n  compound2: `{ loop { break; } if true { return; } }`\n};\n\ng.test('valid_statements').\ndesc('Test statements with valid behaviors').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#behaviors-rules').\nparams((u) => u.combine('body', keysOf(kValidStatements))).\nfn((t) => {\n  const body = kValidStatements[t.params.body];\n  const code = `\n    var<private> v : i32;\n    fn bar() { }\n    fn foo() {\n      ${body};\n    }`;\n  t.expectCompileResult(true, code);\n});\n\nconst kInvalidFunctions = {\n  next_for_type: `fn foo() -> bool { }`,\n  next_return_for_type: `fn foo() -> bool { if true { return true; } }`\n};\n\ng.test('invalid_functions').\ndesc('Test functions with invalid behaviors').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#behaviors-rules').\nparams((u) => u.combine('function', keysOf(kInvalidFunctions))).\nfn((t) => {\n  const func = kInvalidFunctions[t.params.function];\n  t.expectCompileResult(false, func);\n});\n\nconst kValidFunctions = {\n  empty: `fn foo() { }`,\n  next_return: `fn foo() { if true { return; } }`,\n  unreachable_code_after_return_with_value: `fn foo() -> bool { return false; _ = 0; }`,\n  no_final_return: `fn foo() -> bool { if true { return true; } else { return false; } }`,\n  no_final_return_unreachable_code: `fn foo() -> bool { if true { return true; } else { return false; } _ = 0; _ = 1; }`\n};\n\ng.test('valid_functions').\ndesc('Test functions with valid behaviors').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#behaviors-rules').\nparams((u) => u.combine('function', keysOf(kValidFunctions))).\nfn((t) => {\n  const func = kValidFunctions[t.params.function];\n  t.expectCompileResult(true, func);\n});"],"mappings":"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","ignoreList":[]}