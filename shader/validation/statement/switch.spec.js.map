{"version":3,"file":"switch.spec.js","names":["description","makeTestGroup","keysOf","Type","ShaderValidationTest","kTestTypes","g","test","desc","params","u","combine","beforeAllSubcases","t","type","requires","selectDeviceOrSkipTestCase","fn","code","header","value","pass","expectCompileResult","cond_type","create","wgsl","case_type","case_a_type","case_b_type","kTests","L_default","L_paren_default","L_case_1_2_default","L_case_1_case_2_default","L_case_1_colon_case_2_colon_default_colon","L_case_1_colon_default_colon","L_case_1_colon_default","L_case_1_default_2","L_case_1_default_case_2","L_case_1_default_colon","L_case_1_default","L_case_2_1_default","L_case_2_case_1_default","L_case_2_default_case_1","L_case_builtin_default","L_case_C1_case_C2_default","L_case_C1_default","L_case_default_1","L_case_default_2_1","L_case_default_2_case_1","L_case_default","L_case_expr_default","L_default_break","L_default_case_1_2","L_default_case_1_break","L_default_case_1_case_2","L_default_case_1_colon_break","L_default_case_2_case_1","L_default_colon_break","L_default_colon","L_no_block","L_empty_block","L_no_default","L_default_default","L_default_block_default_block","L_case_1_case_1_default","L_case_C1_case_C1_default","L_case_C2_case_expr_default","L_default_1","L_default_2_case_1","no_cond","no_cond_no_block","lparen_L","L_lparen","lparen_L_lparen","rparen_L_rparen"],"sources":["../../../../../src/webgpu/shader/validation/statement/switch.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validation tests for 'switch' statements'`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { Type } from '../../../util/conversion.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { kTestTypes } from './test_types.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('condition_type').\ndesc(`Tests that a 'switch' condition must be of an integer type`).\nparams((u) => u.combine('type', keysOf(kTestTypes))).\nbeforeAllSubcases((t) => {\n  if (kTestTypes[t.params.type].requires === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type = kTestTypes[t.params.type];\n  const code = `\n${type.requires ? `enable ${type.requires};` : ''}\n\n${type.header ?? ''}\n\nfn f() -> bool {\n  switch ${type.value} {\n    case 1: {\n      return true;\n    }\n    default: {\n      return false;\n    }\n  }\n}\n`;\n\n  const pass =\n  t.params.type === 'i32' || t.params.type === 'u32' || t.params.type === 'abstract-int';\n  t.expectCompileResult(pass, code);\n});\n\ng.test('condition_type_match_case_type').\ndesc(`Tests that a 'switch' condition must have a common type with its case values`).\nparams((u) =>\nu.\ncombine('cond_type', ['i32', 'u32', 'abstract-int']).\ncombine('case_type', ['i32', 'u32', 'abstract-int'])\n).\nfn((t) => {\n  const code = `\nfn f() -> bool {\nswitch ${Type[t.params.cond_type].create(1).wgsl()} {\n  case ${Type[t.params.case_type].create(2).wgsl()}: {\n    return true;\n  }\n  default: {\n    return false;\n  }\n}\n}\n`;\n\n  const pass =\n  t.params.cond_type === t.params.case_type ||\n  t.params.cond_type === 'abstract-int' ||\n  t.params.case_type === 'abstract-int';\n  t.expectCompileResult(pass, code);\n});\n\ng.test('case_types_match').\ndesc(`Tests that switch case types must have a common type`).\nparams((u) =>\nu.\ncombine('case_a_type', ['i32', 'u32', 'abstract-int']).\ncombine('case_b_type', ['i32', 'u32', 'abstract-int'])\n).\nfn((t) => {\n  const code = `\nfn f() -> bool {\nswitch 1 {\n  case ${Type[t.params.case_a_type].create(1).wgsl()}: {\n    return true;\n  }\n  case ${Type[t.params.case_b_type].create(2).wgsl()}: {\n    return true;\n  }\n  default: {\n    return false;\n  }\n}\n}\n`;\n\n  const pass =\n  t.params.case_a_type === t.params.case_b_type ||\n  t.params.case_a_type === 'abstract-int' ||\n  t.params.case_b_type === 'abstract-int';\n  t.expectCompileResult(pass, code);\n});\n\nconst kTests = {\n  L_default: { wgsl: `switch L { default {} }`, pass: true },\n  L_paren_default: { wgsl: `switch (L) { default {} }`, pass: true },\n  L_case_1_2_default: { wgsl: `switch L { case 1, 2 {} default {} }`, pass: true },\n  L_case_1_case_2_default: { wgsl: `switch L { case 1 {} case 2 {} default {} }`, pass: true },\n  L_case_1_colon_case_2_colon_default_colon: {\n    wgsl: `switch L { case 1: {} case 2: {} default: {} }`,\n    pass: true\n  },\n  L_case_1_colon_default_colon: { wgsl: `switch L { case 1: {} default: {} }`, pass: true },\n  L_case_1_colon_default: { wgsl: `switch L { case 1: {} default {} }`, pass: true },\n  L_case_1_default_2: { wgsl: `switch L { case 1, default, 2 {} }`, pass: true },\n  L_case_1_default_case_2: { wgsl: `switch L { case 1 {} default {} case 2 {} }`, pass: true },\n  L_case_1_default_colon: { wgsl: `switch L { case 1 {} default: {} }`, pass: true },\n  L_case_1_default: { wgsl: `switch L { case 1 {} default {} }`, pass: true },\n  L_case_2_1_default: { wgsl: `switch L { case 2, 1 {} default {} }`, pass: true },\n  L_case_2_case_1_default: { wgsl: `switch L { case 2 {} case 1 {} default {} }`, pass: true },\n  L_case_2_default_case_1: { wgsl: `switch L { case 2 {} default {} case 1 {} }`, pass: true },\n  L_case_builtin_default: { wgsl: `switch L { case max(1,2) {} default {} }`, pass: true },\n  L_case_C1_case_C2_default: { wgsl: `switch L { case C1 {} case C2 {} default {} }`, pass: true },\n  L_case_C1_default: { wgsl: `switch L { case C1 {} default {} }`, pass: true },\n  L_case_default_1: { wgsl: `switch L { case default, 1 {} }`, pass: true },\n  L_case_default_2_1: { wgsl: `switch L { case default, 2, 1 {} }`, pass: true },\n  L_case_default_2_case_1: { wgsl: `switch L { case default, 2 {} case 1 {} }`, pass: true },\n  L_case_default: { wgsl: `switch L { case default {} }`, pass: true },\n  L_case_expr_default: { wgsl: `switch L { case 1+1 {} default {} }`, pass: true },\n  L_default_break: { wgsl: `switch L { default { break; } }`, pass: true },\n  L_default_case_1_2: { wgsl: `switch L { default {} case 1, 2 {} }`, pass: true },\n  L_default_case_1_break: { wgsl: `switch L { default {} case 1 { break; } }`, pass: true },\n  L_default_case_1_case_2: { wgsl: `switch L { default {} case 1 {} case 2 {} }`, pass: true },\n  L_default_case_1_colon_break: { wgsl: `switch L { default {} case 1: { break; } }`, pass: true },\n  L_default_case_2_case_1: { wgsl: `switch L { default {} case 2 {} case 1 {} }`, pass: true },\n  L_default_colon_break: { wgsl: `switch L { default: { break; } }`, pass: true },\n  L_default_colon: { wgsl: `switch L { default: {} }`, pass: true },\n\n  L_no_block: { wgsl: `switch L`, pass: false },\n  L_empty_block: { wgsl: `switch L {}`, pass: false },\n  L_no_default: { wgsl: `switch L { case 1 {} }`, pass: false },\n  L_default_default: { wgsl: `switch L { default, default {} }`, pass: false },\n  L_default_block_default_block: { wgsl: `switch L { default {} default {} }`, pass: false },\n  L_case_1_case_1_default: { wgsl: `switch L { case 1 {} case 1 {} default {} }`, pass: false },\n  L_case_C1_case_C1_default: { wgsl: `switch L { case C1 {} case C1 {} default {} }`, pass: false },\n  L_case_C2_case_expr_default: {\n    wgsl: `switch L { case C2 {} case 1+1 {} default {} }`,\n    pass: false\n  },\n  L_default_1: { wgsl: `switch L { default, 1 {} }`, pass: false },\n  L_default_2_case_1: { wgsl: `switch L { default, 2 {} case 1 {} }`, pass: false },\n\n  no_cond: { wgsl: `switch { default{} }`, pass: false },\n  no_cond_no_block: { wgsl: `switch;`, pass: false },\n  lparen_L: { wgsl: `switch (L { default {}}`, pass: false },\n  L_lparen: { wgsl: `switch L) { default {}}`, pass: false },\n  lparen_L_lparen: { wgsl: `switch )L) { default {}}`, pass: false },\n  rparen_L_rparen: { wgsl: `switch (L( { default {}}`, pass: false }\n};\n\ng.test('parse').\ndesc(`Test that 'switch' statements are parsed correctly.`).\nparams((u) => u.combine('test', keysOf(kTests))).\nfn((t) => {\n  const code = `\nfn f() {\n  let L = 1;\n  const C1 = 1;\n  const C2 = 2;\n  ${kTests[t.params.test].wgsl}\n}`;\n  t.expectCompileResult(kTests[t.params.test].pass, code);\n});"],"mappings":"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","ignoreList":[]}