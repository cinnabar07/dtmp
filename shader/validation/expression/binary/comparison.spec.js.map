{"version":3,"file":"comparison.spec.js","names":["description","makeTestGroup","keysOf","objectsToRecord","isFloatType","kAllScalarsAndVectors","ScalarType","scalarTypeOf","Type","VectorType","ShaderValidationTest","g","kScalarAndVectorTypes","kComparisonOperators","eq","op","supportsBool","ne","gt","ge","lt","le","test","desc","params","u","combine","filter","value","startsWith","beginSubcases","beforeAllSubcases","t","lhs","f16","rhs","selectDeviceOrSkipTestCase","fn","lhsElement","rhsElement","hasF16","code","create","wgsl","valid","elementIsCompatible","abstractInt","bool","abstractFloat","width","expectCompileResult","kInvalidTypes","mat2x2f","expr","control","e","array","ptr","atomic","texture","sampler","struct","type"],"sources":["../../../../../../src/webgpu/shader/validation/expression/binary/comparison.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for comparison expressions.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../common/util/data_tables.js';\nimport {\n  isFloatType,\n  kAllScalarsAndVectors,\n  ScalarType,\n  scalarTypeOf,\n  Type,\n  VectorType } from\n'../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// A list of scalar and vector types.\nconst kScalarAndVectorTypes = objectsToRecord(kAllScalarsAndVectors);\n\n// A list of comparison operators and a flag for whether they support boolean values or not.\nconst kComparisonOperators = {\n  eq: { op: '==', supportsBool: true },\n  ne: { op: '!=', supportsBool: true },\n  gt: { op: '>', supportsBool: false },\n  ge: { op: '>=', supportsBool: false },\n  lt: { op: '<', supportsBool: false },\n  le: { op: '<=', supportsBool: false }\n};\n\ng.test('scalar_vector').\ndesc(\n  `\n  Validates that scalar and vector comparison expressions are only accepted for compatible types.\n  `\n).\nparams((u) =>\nu.\ncombine('lhs', keysOf(kScalarAndVectorTypes)).\ncombine(\n  'rhs',\n  // Skip vec3 and vec4 on the RHS to keep the number of subcases down.\n  keysOf(kScalarAndVectorTypes).filter(\n    (value) => !(value.startsWith('vec3') || value.startsWith('vec4'))\n  )\n).\nbeginSubcases().\ncombine('op', keysOf(kComparisonOperators))\n).\nbeforeAllSubcases((t) => {\n  if (\n  scalarTypeOf(kScalarAndVectorTypes[t.params.lhs]) === Type.f16 ||\n  scalarTypeOf(kScalarAndVectorTypes[t.params.rhs]) === Type.f16)\n  {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const lhs = kScalarAndVectorTypes[t.params.lhs];\n  const rhs = kScalarAndVectorTypes[t.params.rhs];\n  const lhsElement = scalarTypeOf(lhs);\n  const rhsElement = scalarTypeOf(rhs);\n  const hasF16 = lhsElement === Type.f16 || rhsElement === Type.f16;\n  const code = `\n${hasF16 ? 'enable f16;' : ''}\nconst lhs = ${lhs.create(0).wgsl()};\nconst rhs = ${rhs.create(0).wgsl()};\nconst foo = lhs ${kComparisonOperators[t.params.op].op} rhs;\n`;\n\n  let valid = false;\n\n  // Determine if the element types are comparable.\n  let elementIsCompatible = false;\n  if (lhsElement === Type.abstractInt) {\n    // Abstract integers are comparable to any other numeric type.\n    elementIsCompatible = rhsElement !== Type.bool;\n  } else if (rhsElement === Type.abstractInt) {\n    // Abstract integers are comparable to any other numeric type.\n    elementIsCompatible = lhsElement !== Type.bool;\n  } else if (lhsElement === Type.abstractFloat) {\n    // Abstract floats are comparable to any other float type.\n    elementIsCompatible = isFloatType(rhsElement);\n  } else if (rhsElement === Type.abstractFloat) {\n    // Abstract floats are comparable to any other float type.\n    elementIsCompatible = isFloatType(lhsElement);\n  } else {\n    // Non-abstract types are only comparable to values with the exact same type.\n    elementIsCompatible = lhsElement === rhsElement;\n  }\n\n  // Determine if the full type is comparable.\n  if (lhs instanceof ScalarType && rhs instanceof ScalarType) {\n    valid = elementIsCompatible;\n  } else if (lhs instanceof VectorType && rhs instanceof VectorType) {\n    // Vectors are only comparable if the vector widths match.\n    valid = lhs.width === rhs.width && elementIsCompatible;\n  }\n\n  if (lhsElement === Type.bool) {\n    valid &&= kComparisonOperators[t.params.op].supportsBool;\n  }\n\n  t.expectCompileResult(valid, code);\n});\n\n\n\n\n\n\n\nconst kInvalidTypes = {\n  mat2x2f: {\n    expr: 'm',\n    control: (e) => `${e}[0]`\n  },\n\n  array: {\n    expr: 'arr',\n    control: (e) => `${e}[0]`\n  },\n\n  ptr: {\n    expr: '(&u)',\n    control: (e) => `*${e}`\n  },\n\n  atomic: {\n    expr: 'a',\n    control: (e) => `atomicLoad(&${e})`\n  },\n\n  texture: {\n    expr: 't',\n    control: (e) => `textureLoad(${e}, vec2(), 0)`\n  },\n\n  sampler: {\n    expr: 's',\n    control: (e) => `textureSampleLevel(t, ${e}, vec2(), 0)`\n  },\n\n  struct: {\n    expr: 'str',\n    control: (e) => `${e}.u`\n  }\n};\n\ng.test('invalid_types').\ndesc(\n  `\n  Validates that comparison expressions are never accepted for non-scalar and non-vector types.\n  `\n).\nparams((u) =>\nu.\ncombine('op', keysOf(kComparisonOperators)).\ncombine('type', keysOf(kInvalidTypes)).\ncombine('control', [true, false]).\nbeginSubcases()\n).\nfn((t) => {\n  const type = kInvalidTypes[t.params.type];\n  const expr = t.params.control ? type.control(type.expr) : type.expr;\n  const code = `\n@group(0) @binding(0) var t : texture_2d<f32>;\n@group(0) @binding(1) var s : sampler;\n@group(0) @binding(2) var<storage, read_write> a : atomic<i32>;\n\nstruct S { u : u32 }\n\nvar<private> u : u32;\nvar<private> m : mat2x2f;\nvar<private> arr : array<i32, 4>;\nvar<private> str : S;\n\n@compute @workgroup_size(1)\nfn main() {\n  let foo = ${expr} ${kComparisonOperators[t.params.op].op} ${expr};\n}\n`;\n\n  t.expectCompileResult(t.params.control, code);\n});"],"mappings":"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","ignoreList":[]}