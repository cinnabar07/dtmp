{"version":3,"file":"div_rem.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kOperators","div","op","rem","kTests","bool","src","vec","i32","u32","ai","f32","f16","is_f16","af","texture","sampler","atomic","struct","array","matf_matching","matf_no_match","math","test","desc","params","u","combine","beforeAllSubcases","t","rhs","startsWith","selectDeviceOrSkipTestCase","fn","lhs","swap","a","code","pass","expectCompileResult"],"sources":["../../../../../../src/webgpu/shader/validation/expression/matrix/div_rem.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for matrix division and remainder expressions.\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// A list of operators\nconst kOperators = {\n  div: { op: '/' },\n  rem: { op: '%' }\n};\n\n\n\n\n\n\n\n\nconst kTests = {\n  bool: {\n    src: 'false'\n  },\n  vec: {\n    src: 'vec2f()'\n  },\n  i32: {\n    src: '1i'\n  },\n  u32: {\n    src: '1u'\n  },\n  ai: {\n    src: '1'\n  },\n  f32: {\n    src: '1f'\n  },\n  f16: {\n    src: '1h',\n    is_f16: true\n  },\n  af: {\n    src: '1.0'\n  },\n  texture: {\n    src: 't'\n  },\n  sampler: {\n    src: 's'\n  },\n  atomic: {\n    src: 'a'\n  },\n  struct: {\n    src: 'str'\n  },\n  array: {\n    src: 'arr'\n  },\n  matf_matching: {\n    src: 'mat2x3f()'\n  },\n  matf_no_match: {\n    src: 'mat4x4f()'\n  },\n  math: {\n    src: 'mat2x3h()',\n    is_f16: true\n  }\n};\n\ng.test('invalid').\ndesc(`Validates that div and remainder expressions are never accepted for matrix types.`).\nparams((u) =>\nu.\ncombine('op', keysOf(kOperators))\n// 1i is the control that the test passes\n.combine('rhs', ['1i', 'ai', 'mat2x3f()', 'mat2x3h()']).\ncombine('test', keysOf(kTests)).\ncombine('swap', [true, false])\n).\nbeforeAllSubcases((t) => {\n  if (kTests[t.params.test].is_f16 === true || t.params.rhs.startsWith('mat2x3h(')) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  let lhs = kTests[t.params.test].src;\n  let rhs = t.params.rhs === 'ai' ? 'mat2x3(0, 0, 0, 0, 0, 0)' : t.params.rhs;\n\n  if (t.params.swap) {\n    const a = lhs;\n    lhs = rhs;\n    rhs = a;\n  }\n\n  const code = `\n${kTests[t.params.test].is_f16 || t.params.rhs.startsWith('mat2x3h(') ? 'enable f16;' : ''}\n@group(0) @binding(0) var t : texture_2d<f32>;\n@group(0) @binding(1) var s : sampler;\n@group(0) @binding(2) var<storage, read_write> a : atomic<i32>;\n\nstruct S { u : u32 }\n\nvar<private> arr : array<i32, 4>;\nvar<private> str : S;\n\n@compute @workgroup_size(1)\nfn main() {\n  let foo = ${lhs} ${kOperators[t.params.op].op} ${rhs};\n}\n`;\n\n  const pass = (lhs === '1i' || lhs === '1') && (rhs === '1i' || rhs === '1');\n  t.expectCompileResult(pass, code);\n});"],"mappings":"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","ignoreList":[]}