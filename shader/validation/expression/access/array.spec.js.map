{"version":3,"file":"array.spec.js","names":["description","makeTestGroup","keysOf","objectsToRecord","Type","elementTypeOf","kConcreteNumericScalarsAndVectors","kAllBoolScalarsAndVectors","ShaderValidationTest","g","test","desc","params","u","combine","beforeAllSubcases","t","type","selectDeviceOrSkipTestCase","fn","ty","enable","requiresF16","code","create","wgsl","expect","expectCompileResult","kTypes","kTypeKeys","filter","elements","bool","arrayTy","module_decl","toString","function_decl","kOutOfBoundsCases","const_module_in_bounds","result","const_module_oob_neg","const_module_oob_pos","const_func_in_bounds","const_func_oob_neg","const_func_oob_pos","override_in_bounds","pipeline","value","override_oob_neg","override_oob_pos","runtime_in_bounds","runtime_oob_neg","runtime_oob_pos","runtime_array_const_oob_neg","runtime_array_override_oob_neg","testcase","case","v","expectPipelineResult","expectedResult","constants","x","reference"],"sources":["../../../../../../src/webgpu/shader/validation/expression/access/array.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for array access expressions\n\n* Index type\n* Result type\n* Early-evaluation errors\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  elementTypeOf,\n  kConcreteNumericScalarsAndVectors,\n  kAllBoolScalarsAndVectors } from\n'../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('index_type').\ndesc('Tests valid index types for array access expressions').\nparams((u) =>\nu.combine('type', [\n'bool',\n'u32',\n'i32',\n'abstract-int',\n'f32',\n'f16',\n'abstract-float',\n'vec2i']\n)\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const ty = Type[t.params.type];\n  const enable = ty.requiresF16() ? 'enable f16;' : '';\n  const code = `${enable}\n    fn foo() {\n      var x = array(1,2,3);\n      let tmp = x[${ty.create(0).wgsl()}];\n    }`;\n  const expect =\n  t.params.type === 'i32' || t.params.type === 'u32' || t.params.type === 'abstract-int';\n  t.expectCompileResult(expect, code);\n});\n\nconst kTypes = objectsToRecord([\n...kConcreteNumericScalarsAndVectors,\n...kAllBoolScalarsAndVectors]\n);\nconst kTypeKeys = keysOf(kTypes);\n\ng.test('result_type').\ndesc('Tests that correct result type is produced for an access expression').\nparams((u) =>\nu.\ncombine('type', kTypeKeys).\ncombine('elements', [0, 4]).\nfilter((t) => {\n  const ty = kTypes[t.type];\n  if (t.elements === 0) {\n    if (elementTypeOf(ty) === Type.bool) {\n      return false;\n    }\n  }\n  return true;\n})\n).\nbeforeAllSubcases((t) => {\n  const ty = kTypes[t.params.type];\n  if (ty.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const ty = kTypes[t.params.type];\n  const enable = ty.requiresF16() ? 'enable f16;' : '';\n  const arrayTy = Type['array'](t.params.elements, ty);\n  const module_decl =\n  t.params.elements === 0 ?\n  `@group(0) @binding(0) var<storage> x : ${arrayTy.toString()};` :\n  ``;\n  const function_decl = t.params.elements === 0 ? `` : `var x : ${arrayTy.toString()};`;\n  const code = `${enable}\n    ${module_decl}\n    fn foo() {\n      ${function_decl}\n      let tmp1 : ${ty.toString()} = x[0];\n      let tmp2 : ${ty.toString()} = x[1];\n      let tmp3 : ${ty.toString()} = x[2];\n    }`;\n  t.expectCompileResult(true, code);\n});\n\n\n\n\n\n\n\n\nconst kOutOfBoundsCases = {\n  const_module_in_bounds: {\n    code: `const x = array(1,2,3)[0];`,\n    result: true\n  },\n  const_module_oob_neg: {\n    code: `const x = array(1,2,3)[-1];`,\n    result: false\n  },\n  const_module_oob_pos: {\n    code: `const x = array(1,2,3)[3];`,\n    result: false\n  },\n  const_func_in_bounds: {\n    code: `fn foo() {\n      const x = array(1,2,3)[0];\n    }`,\n    result: true\n  },\n  const_func_oob_neg: {\n    code: `fn foo {\n      const x = array(1,2,3)[-1];\n    }`,\n    result: false\n  },\n  const_func_oob_pos: {\n    code: `fn foo {\n      const x = array(1,2,3)[3];\n    }`,\n    result: false\n  },\n  override_in_bounds: {\n    code: `override x : i32;\n    fn y() -> u32 {\n      let tmp = array(1,2,3)[x];\n      return 0;\n    }`,\n    result: true,\n    pipeline: true,\n    value: 0\n  },\n  override_oob_neg: {\n    code: `override x : i32;\n    fn y() -> u32 {\n      let tmp = array(1,2,3)[x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: -1\n  },\n  override_oob_pos: {\n    code: `override x : i32;\n    fn y() -> u32 {\n      let tmp = array(1,2,3)[x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: 3\n  },\n  runtime_in_bounds: {\n    code: `fn foo() {\n      let idx = 0;\n      let x = array(1,2,3)[idx];\n    }`,\n    result: true\n  },\n  runtime_oob_neg: {\n    code: `fn foo() {\n      let idx = -1;\n      let x = array(1,2,3)[idx];\n    }`,\n    result: true\n  },\n  runtime_oob_pos: {\n    code: `fn foo() {\n      let idx = 3;\n      let x = array(1,2,3)[idx];\n    }`,\n    result: true\n  },\n  runtime_array_const_oob_neg: {\n    code: `@group(0) @binding(0) var<storage> x : array<u32>;\n    fn y() -> u32 {\n      let tmp = x[-1];\n      return 0;\n    }`,\n    result: false\n  },\n  runtime_array_override_oob_neg: {\n    code: `@group(0) @binding(0) var<storage> v : array<u32>;\n    override x : i32;\n    fn y() -> u32 {\n      let tmp = v[x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: -1\n  }\n};\n\ng.test('early_eval_errors').\ndesc('Tests early evaluation errors for out-of-bounds indexing').\nparams((u) => u.combine('case', keysOf(kOutOfBoundsCases))).\nfn((t) => {\n  const testcase = kOutOfBoundsCases[t.params.case];\n  if (testcase.pipeline) {\n    const v = testcase.value ?? 0;\n    t.expectPipelineResult({\n      expectedResult: testcase.result,\n      code: testcase.code,\n      constants: { x: v },\n      reference: ['y()']\n    });\n  } else {\n    t.expectCompileResult(testcase.result, testcase.code);\n  }\n});\n\ng.test('abstract_array_concrete_index').\ndesc('Tests that a concrete index type on an abstract array remains abstract').\nfn((t) => {\n  const code = `\n    const idx = 0i;\n    const_assert array(0xfffffffff,2,3)[idx] == 0xfffffffff;`;\n  t.expectCompileResult(true, code);\n});"],"mappings":"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","ignoreList":[]}