{"version":3,"file":"pow.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kConvertableToFloatScalarsAndVectors","scalarTypeOf","quantizeToF16","quantizeToF32","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","quantizeFunctionForScalarType","type","f32","f16","v","test","desc","params","u","combine","filter","stage","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","a","Number","b","scalarType","quantizeFn","p","Math","pow","isFinite","create","kInvalidArgumentTypes","bool","vec","kArgCases","good","bad_no_parens","bad_0args","bad_1args","bad_3args","bad_0bool","bad_0array","bad_0struct","bad_0uint","bad_0int","bad_0vec2i","bad_0vec2u","bad_0vec3i","bad_0vec3u","bad_0vec4i","bad_0vec4u","bad_1bool","bad_1array","bad_1struct","bad_1uint","bad_1int","bad_1vec2i","bad_1vec2u","bad_1vec3i","bad_1vec3u","bad_1vec4i","bad_1vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/pow.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'pow';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf } from\n\n'../../../../../util/conversion.js';\nimport { quantizeToF16, quantizeToF32 } from '../../../../../util/math.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\nfunction quantizeFunctionForScalarType(type) {\n  switch (type) {\n    case Type.f32:\n      return quantizeToF32;\n    case Type.f16:\n      return quantizeToF16;\n    default:\n      return (v) => v;\n  }\n}\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n\nTODO(http://github.com/gpuweb/issues/4527): This validation matches what is currently in Tint but\nit needs to be clarified in the spec if this is the desired behavior.\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValidArgumentTypes)).\nfilter((u) => stageSupportsType(u.stage, kValidArgumentTypes[u.type])).\nbeginSubcases().\nexpand('a', (u) => fullRangeForType(kValidArgumentTypes[u.type], 5)).\nexpand('b', (u) => fullRangeForType(kValidArgumentTypes[u.type], 5))\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kValidArgumentTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  let expectedResult = true;\n\n  const a = Number(t.params.a);\n  const b = Number(t.params.b);\n  if (a < 0 || a === 0 && b <= 0) {\n    expectedResult = false;\n  }\n\n  if (expectedResult) {\n    const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n    const quantizeFn = quantizeFunctionForScalarType(scalarType);\n\n    // Should be invalid if the pow calculation results in values that exceed\n    // the maximum representable float value for the given type\n    const p = quantizeFn(Math.pow(a, b));\n    if (!Number.isFinite(p)) {\n      expectedResult = false;\n    }\n  }\n\n  const type = kValidArgumentTypes[t.params.type];\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [type.create(t.params.a), type.create(t.params.b)],\n    t.params.stage\n  );\n});\n\nconst kInvalidArgumentTypes = objectsToRecord([\nType.bool,\nType.vec(2, Type.bool),\nType.vec(3, Type.bool),\nType.vec(4, Type.bool),\n...kConcreteIntegerScalarsAndVectors]\n);\n\ng.test('invalid_argument').\ndesc(\n  `\nValidates that all integer or boolean scalar and vector arguments are rejected by ${builtin}()\n`\n).\nparams((u) => u.combine('type', keysOf(kInvalidArgumentTypes))).\nbeforeAllSubcases((t) => {\n  if (kInvalidArgumentTypes[t.params.type] === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const expectedResult = false; // should always error with invalid argument types\n  const type = kInvalidArgumentTypes[t.params.type];\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [type.create(1), type.create(2)],\n    'constant'\n  );\n});\n\nconst kArgCases = {\n  good: '(2.0, 2.0)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1args: '(2.0)',\n  bad_3args: '(2.0,2.0,2.0)',\n  // Bad value for arg 0\n  bad_0bool: '(false, 2.0)',\n  bad_0array: '(array(1.1,2.2), 2.0)',\n  bad_0struct: '(modf(2.2), 2.0)',\n  bad_0uint: '(1u, 2.0)',\n  bad_0int: '(1i, 2.0)',\n  bad_0vec2i: '(vec2i(), 2.0)',\n  bad_0vec2u: '(vec2u(), 2.0)',\n  bad_0vec3i: '(vec3i(), 2.0)',\n  bad_0vec3u: '(vec3u(), 2.0)',\n  bad_0vec4i: '(vec4i(), 2.0)',\n  bad_0vec4u: '(vec4u(), 2.0)',\n  // Bad value for arg 1\n  bad_1bool: '(2.0, false)',\n  bad_1array: '(2.0, array(1.1,2.2))',\n  bad_1struct: '(2.0, modf(2.2))',\n  bad_1uint: '(2.0, 1u)',\n  bad_1int: '(2.0, 1i)',\n  bad_1vec2i: '(2.0, vec2i())',\n  bad_1vec2u: '(2.0, vec2u())',\n  bad_1vec3i: '(2.0, vec3i())',\n  bad_1vec3u: '(2.0, vec3u())',\n  bad_1vec4i: '(2.0, vec4i())',\n  bad_1vec4u: '(2.0, vec4u())'\n};\n\ng.test('args').\ndesc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`).\nparams((u) => u.combine('arg', keysOf(kArgCases))).\nfn((t) => {\n  t.expectCompileResult(\n    t.params.arg === 'good',\n    `const c = ${builtin}${kArgCases[t.params.arg]};`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n});"],"mappings":"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","ignoreList":[]}