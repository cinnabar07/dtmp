{"version":3,"file":"normalize.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kConvertableToFloatVectors","scalarTypeOf","quantizeToF16","quantizeToF32","isSubnormalNumberF16","isSubnormalNumberF32","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","quantizeFunctionForScalarType","type","f32","f16","v","isSubnormalFunctionForScalarType","test","desc","params","u","combine","filter","stage","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","scalarType","quantizeFn","Number","value","vv","dp","width","len","Math","sqrt","Infinity","isSubnormalFn","skipIf","create","kInvalidArgumentTypes","abstractInt","bool","vec","kArgCases","good","bad_no_parens","bad_0args","bad_2args","bad_0array","bad_0struct","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/normalize.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'normalize';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kConvertableToFloatVectors,\n  scalarTypeOf } from\n\n'../../../../../util/conversion.js';\nimport {\n\n  quantizeToF16,\n  quantizeToF32,\n  isSubnormalNumberF16,\n  isSubnormalNumberF32 } from\n'../../../../../util/math.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatVectors);\n\nfunction quantizeFunctionForScalarType(type) {\n  switch (type) {\n    case Type.f32:\n      return quantizeToF32;\n    case Type.f16:\n      return quantizeToF16;\n    default:\n      return (v) => v;\n  }\n}\n\nfunction isSubnormalFunctionForScalarType(type) {\n  switch (type) {\n    case Type.f32:\n      return isSubnormalNumberF32;\n    case Type.f16:\n      return isSubnormalNumberF16;\n    default:\n      return (v) => false;\n  }\n}\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValidArgumentTypes)).\nfilter((u) => stageSupportsType(u.stage, kValidArgumentTypes[u.type])).\nbeginSubcases().\nexpand('value', (u) => fullRangeForType(kValidArgumentTypes[u.type]))\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kValidArgumentTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  let expectedResult = true;\n\n  const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n  const quantizeFn = quantizeFunctionForScalarType(scalarType);\n\n  // Should be invalid if the normalization calculations result in intermediate\n  // values that exceed the maximum representable float value for the given type,\n  // or if the length is smaller than the smallest representable float value.\n  const v = Number(t.params.value);\n  const vv = quantizeFn(v * v);\n  const dp = quantizeFn(vv * kValidArgumentTypes[t.params.type].width);\n  const len = quantizeFn(Math.sqrt(dp));\n  if (vv === Infinity || dp === Infinity || len === 0) {\n    expectedResult = false;\n  }\n\n  // We skip tests with values that would involve subnormal computations in\n  // order to avoid defining a specific behavior (flush to zero).\n  const isSubnormalFn = isSubnormalFunctionForScalarType(scalarType);\n  t.skipIf(isSubnormalFn(vv) || isSubnormalFn(dp) || isSubnormalFn(len));\n\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [kValidArgumentTypes[t.params.type].create(t.params.value)],\n    t.params.stage\n  );\n});\n\nconst kInvalidArgumentTypes = objectsToRecord([\nType.f32,\nType.f16,\nType.abstractInt,\nType.bool,\nType.vec(2, Type.bool),\nType.vec(3, Type.bool),\nType.vec(4, Type.bool),\n...kConcreteIntegerScalarsAndVectors]\n);\n\ng.test('invalid_argument').\ndesc(\n  `\nValidates that all scalar arguments and vector integer or boolean arguments are rejected by ${builtin}()\n`\n).\nparams((u) => u.combine('type', keysOf(kInvalidArgumentTypes))).\nbeforeAllSubcases((t) => {\n  if (kInvalidArgumentTypes[t.params.type] === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const expectedResult = false; // should always error with invalid argument types\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [kInvalidArgumentTypes[t.params.type].create(0)],\n    'constant'\n  );\n});\n\nconst kArgCases = {\n  good: '(vec3f(1, 0, 0))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_2args: '(vec3f(),vec3f())',\n  // Bad value for arg 0\n  bad_0array: '(array(1.1,2.2))',\n  bad_0struct: '(modf(2.2))'\n};\n\ng.test('args').\ndesc(`Test compilation failure of ${builtin}  with variously shaped and typed arguments`).\nparams((u) => u.combine('arg', keysOf(kArgCases))).\nfn((t) => {\n  t.expectCompileResult(\n    t.params.arg === 'good',\n    `const c = ${builtin}${kArgCases[t.params.arg]};`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n});"],"mappings":"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","ignoreList":[]}