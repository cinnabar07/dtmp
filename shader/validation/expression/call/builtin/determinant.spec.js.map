{"version":3,"file":"determinant.spec.js","names":["builtin","description","makeTestGroup","keysOf","ShaderValidationTest","g","kMatrixCases","flatMap","cols","rows","map","type","suffix","Array","keys","e","join","reduce","a","b","test","desc","params","u","combine","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","arg","expectCompileResult","wrapInEntryPoint","kArgCases","good","bad_no_parens","bad_too_few","bad_too_many","bad_0i32","bad_0u32","bad_0bool","bad_0vec2u","bad_0array","bad_0struct","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/determinant.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'determinant';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// Generate a dictionary mapping each matrix type variation (columns,rows,\n// floating point type) to a nontrivial matrix value of that type.\nconst kMatrixCases = [2, 3, 4].\nflatMap((cols) =>\n[2, 3, 4].flatMap((rows) =>\n['abstract-int', 'abstract-float', 'f32', 'f16'].map((type) => ({\n  [`mat${cols}x${rows}_${type}`]: (() => {\n    const suffix = (() => {\n      switch (type) {\n        case 'abstract-int':\n          return '';\n        case 'abstract-float':\n          return '.0';\n        case 'f32':\n          return 'f';\n        case 'f16':\n          return 'h';\n      }\n    })();\n    return `(mat${cols}x${rows}(${[...Array(cols * rows).keys()].\n    map((e) => `${e}${suffix}`).\n    join(', ')}))`;\n  })()\n}))\n)\n).\nreduce((a, b) => ({ ...a, ...b }), {});\n\ng.test('matrix_args').\ndesc(`Test compilation failure of ${builtin} with variously shaped matrices`).\nparams((u) =>\nu.\ncombine('cols', [2, 3, 4]).\ncombine('rows', [2, 3, 4]).\ncombine('type', ['abstract-int', 'abstract-float', 'f32', 'f16'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const cols = t.params.cols;\n  const rows = t.params.rows;\n  const type = t.params.type;\n  const arg = kMatrixCases[`mat${cols}x${rows}_${type}`];\n  t.expectCompileResult(\n    cols === rows,\n    t.wrapInEntryPoint(`const c = ${builtin}${arg};`, type === 'f16' ? ['f16'] : [])\n  );\n});\n\nconst kArgCases = {\n  good: '(mat2x2(0.0, 2.0, 3.0, 4.0))', // Included to check test implementation\n  bad_no_parens: '',\n  // Bad number of args\n  bad_too_few: '()',\n  bad_too_many: '(mat2x2(0.0, 2.0, 3.0, 4.0), mat2x2(0.0, 2.0, 3.0, 4.0))',\n  // Bad value type for arg 0\n  bad_0i32: '(1i)',\n  bad_0u32: '(1u)',\n  bad_0bool: '(false)',\n  bad_0vec2u: '(vec2u())',\n  bad_0array: '(array(1.1,2.2))',\n  bad_0struct: '(modf(2.2))'\n};\n\ng.test('args').\ndesc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`).\nparams((u) => u.combine('arg', keysOf(kArgCases))).\nfn((t) => {\n  t.expectCompileResult(\n    t.params.arg === 'good',\n    `const c = ${builtin}${kArgCases[t.params.arg]};`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n});"],"mappings":"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","ignoreList":[]}