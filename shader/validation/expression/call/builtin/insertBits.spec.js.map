{"version":3,"file":"insertBits.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kFloatScalarsAndVectors","u32","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","combineWithParams","offset","count","fn","t","expectedResult","create","value","newbits","arg0","arg1","offsetArg","countArg","offsetStage","wgsl","countStage","error","shader_error","pipeline_error","in_shader","expectCompileResult","constants","expectPipelineResult","code","reference","statements","typesToArguments","types","pass","reduce","res","toString","arg","kInputArgTypes","bool","mat2x2f","alias","vec_bool","atomic","array","preamble","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","input","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/insertBits.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'insertBits';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kFloatScalarsAndVectors,\n  u32 } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConcreteIntegerScalarsAndVectors);\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors on valid inputs\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValuesTypes)).\nfilter((u) => stageSupportsType(u.stage, kValuesTypes[u.type])).\nbeginSubcases().\nexpand('value', (u) => fullRangeForType(kValuesTypes[u.type], 5)).\nexpand('newbits', (u) => fullRangeForType(kValuesTypes[u.type], 5)).\ncombineWithParams([\n{ offset: 0, count: 0 },\n{ offset: 0, count: 31 },\n{ offset: 0, count: 32 },\n{ offset: 4, count: 0 },\n{ offset: 4, count: 27 },\n{ offset: 4, count: 28 },\n{ offset: 16, count: 0 },\n{ offset: 16, count: 15 },\n{ offset: 16, count: 16 },\n{ offset: 32, count: 0 }]\n)\n).\nfn((t) => {\n  const expectedResult = true; // insertBits() should never error\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [\n    kValuesTypes[t.params.type].create(t.params.value),\n    kValuesTypes[t.params.type].create(t.params.newbits),\n    u32(t.params.offset),\n    u32(t.params.count)],\n\n    t.params.stage\n  );\n});\n\ng.test('mismatched').\ndesc(\n  `\nValidates that even with valid types, if arg0 and arg1 do not match types ${builtin}() errors\n`\n).\nparams((u) => u.combine('arg0', keysOf(kValuesTypes)).combine('arg1', keysOf(kValuesTypes))).\nfn((t) => {\n  const arg0 = kValuesTypes[t.params.arg0];\n  const arg1 = kValuesTypes[t.params.arg1];\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    /* expectedResult */t.params.arg0 === t.params.arg1,\n    [arg0.create(0), arg1.create(1), u32(0), u32(32)],\n    'constant'\n  );\n});\n\ng.test('count_offset').\ndesc(\n  `\nValidates that count and offset must be smaller than the size of the primitive.\n`\n).\nparams((u) =>\nu.\ncombine('offsetStage', [...kConstantAndOverrideStages, 'runtime']).\ncombine('countStage', [...kConstantAndOverrideStages, 'runtime']).\nbeginSubcases().\ncombineWithParams([\n// offset + count < 32\n{ offset: 0, count: 31 },\n{ offset: 1, count: 30 },\n{ offset: 31, count: 0 },\n{ offset: 30, count: 1 },\n// offset + count == 32\n{ offset: 0, count: 32 },\n{ offset: 1, count: 31 },\n{ offset: 16, count: 16 },\n{ offset: 31, count: 1 },\n{ offset: 32, count: 0 },\n// offset + count > 32\n{ offset: 2, count: 31 },\n{ offset: 31, count: 2 },\n// offset > 32\n{ offset: 33, count: 0 },\n{ offset: 33, count: 1 },\n// count > 32\n{ offset: 0, count: 33 },\n{ offset: 1, count: 33 }]\n)\n// in_shader: Is the function call statically accessed by the entry point?\n.combine('in_shader', [false, true])\n).\nfn((t) => {\n  let offsetArg = '';\n  let countArg = '';\n  switch (t.params.offsetStage) {\n    case 'constant':\n      offsetArg = `${Type.u32.create(t.params.offset).wgsl()}`;\n      break;\n    case 'override':\n      offsetArg = `o_offset`;\n      break;\n    case 'runtime':\n      offsetArg = 'v_offset';\n      break;\n  }\n  switch (t.params.countStage) {\n    case 'constant':\n      countArg = `${Type.u32.create(t.params.count).wgsl()}`;\n      break;\n    case 'override':\n      countArg = `o_count`;\n      break;\n    case 'runtime':\n      countArg = 'v_count';\n      break;\n  }\n  const wgsl = `\noverride o_offset : u32;\noverride o_count : u32;\nfn foo() {\n  var v_offset : u32;\n  var v_count : u32;\n  var e : u32;\n  var newbits : u32;\n  let tmp = insertBits(e, newbits, ${offsetArg}, ${countArg});\n}`;\n\n  const error = t.params.offset + t.params.count > 32;\n  const shader_error =\n  error && t.params.offsetStage === 'constant' && t.params.countStage === 'constant';\n  const pipeline_error =\n  t.params.in_shader &&\n  error &&\n  t.params.offsetStage !== 'runtime' &&\n  t.params.countStage !== 'runtime';\n  t.expectCompileResult(!shader_error, wgsl);\n  if (!shader_error) {\n    const constants = {};\n    constants['o_offset'] = t.params.offset;\n    constants['o_count'] = t.params.count;\n    t.expectPipelineResult({\n      expectedResult: !pipeline_error,\n      code: wgsl,\n      constants,\n      reference: ['o_offset', 'o_count'],\n      statements: t.params.in_shader ? ['foo();'] : []\n    });\n  }\n});\n\n\n\n\n\n\n\n\n\n\nfunction typesToArguments(types, pass) {\n  return types.reduce(\n    (res, type) => ({\n      ...res,\n      [type.toString()]: { arg: type.create(0).wgsl(), pass }\n    }),\n    {}\n  );\n}\n\n// u32 is included here to confirm that validation is failing due to a type issue and not something else.\nconst kInputArgTypes = {\n  ...typesToArguments([Type.u32], true),\n  ...typesToArguments([...kFloatScalarsAndVectors, Type.bool, Type.mat2x2f], false),\n  alias: { arg: 'u32_alias(1)', pass: true },\n  vec_bool: { arg: 'vec2<bool>(false,true)', pass: false },\n  atomic: { arg: 'a', pass: false },\n  array: {\n    preamble: 'var arry: array<u32, 5>;',\n    arg: 'arry',\n    pass: false\n  },\n  array_runtime: { arg: 'k.arry', pass: false },\n  struct: {\n    preamble: 'var x: A;',\n    arg: 'x',\n    pass: false\n  },\n  enumerant: { arg: 'read_write', pass: false },\n  ptr: {\n    preamble: `var<function> f = 1u;\n               let p: ptr<function, u32> = &f;`,\n    arg: 'p',\n    pass: false\n  },\n  ptr_deref: {\n    preamble: `var<function> f = 1u;\n               let p: ptr<function, u32> = &f;`,\n    arg: '*p',\n    pass: true\n  },\n  sampler: { arg: 's', pass: false },\n  texture: { arg: 't', pass: false }\n};\n\ng.test('typed_arguments').\ndesc(\n  `\nTest compilation validation of ${builtin} with variously typed arguments\n  - The input types are matching to reduce testing permutations. Mismatching input types are\n    validated in 'mismatched' test above.\n  - For failing input types, just use the same type for offset and count to reduce combinations.\n`\n).\nparams((u) =>\nu.\ncombine('input', keysOf(kInputArgTypes)).\nbeginSubcases().\ncombine('offset', keysOf(kInputArgTypes)).\nexpand('count', (u) => kInputArgTypes[u.input].pass ? keysOf(kInputArgTypes) : [u.offset])\n).\nfn((t) => {\n  const input = kInputArgTypes[t.params.input];\n  const offset = kInputArgTypes[t.params.offset];\n  const count = kInputArgTypes[t.params.count];\n  t.expectCompileResult(\n    input.pass && offset.pass && count.pass,\n    `alias u32_alias = u32;\n\n      @group(0) @binding(0) var s: sampler;\n      @group(0) @binding(1) var t: texture_2d<f32>;\n\n      var<workgroup> a: atomic<u32>;\n\n      struct A {\n        i: u32,\n      }\n      struct B {\n        arry: array<u32>,\n      }\n      @group(0) @binding(3) var<storage> k: B;\n\n\n      @vertex\n      fn main() -> @builtin(position) vec4<f32> {\n        ${input.preamble ? input.preamble : ''}\n        ${offset.preamble && offset !== input ? offset.preamble : ''}\n        ${count.preamble && count !== input && count !== offset ? count.preamble : ''}\n        _ = ${builtin}(${input.arg},${input.arg},${offset.arg},${count.arg});\n        return vec4<f32>(.4, .2, .3, .1);\n      }`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}(0u,1u,0u,1u); }`);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,MAAMA,OAAO,GAAG,YAAY,CAAC,OAAO,MAAMC,WAAW,GAAG;AAC3D,2BAA2BD,OAAO;AAClC,CAAC,CACD,SAASE,aAAa,QAAQ,kDAAkD,CAChF,SAASC,MAAM,EAAEC,eAAe,QAAQ,8CAA8C;AACtF;EACEC,IAAI;EACJC,iCAAiC;EACjCC,uBAAuB;EACvBC,GAAG;AACL,mCAAmC;AACnC,SAASC,oBAAoB,QAAQ,oCAAoC;;AAEzE;EACEC,gBAAgB;EAChBC,0BAA0B;EAC1BC,iBAAiB;EACjBC,kCAAkC;AACpC,gCAAgC;;AAEhC,OAAO,MAAMC,CAAC,GAAGZ,aAAa,CAACO,oBAAoB,CAAC;;AAEpD,MAAMM,YAAY,GAAGX,eAAe,CAACE,iCAAiC,CAAC;;AAEvEQ,CAAC,CAACE,IAAI,CAAC,QAAQ,CAAC;AAChBC,IAAI;EACF;AACF,gEAAgEjB,OAAO;AACvE;AACA,CAAC;AACDkB,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,OAAO,EAAET,0BAA0B,CAAC;AAC5CS,OAAO,CAAC,MAAM,EAAEjB,MAAM,CAACY,YAAY,CAAC,CAAC;AACrCM,MAAM,CAAC,CAACF,CAAC,KAAKP,iBAAiB,CAACO,CAAC,CAACG,KAAK,EAAEP,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;AAC/DC,aAAa,CAAC,CAAC;AACfC,MAAM,CAAC,OAAO,EAAE,CAACN,CAAC,KAAKT,gBAAgB,CAACK,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACjEE,MAAM,CAAC,SAAS,EAAE,CAACN,CAAC,KAAKT,gBAAgB,CAACK,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACnEG,iBAAiB,CAAC;AAClB,EAAEC,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACvB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACvB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACzB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACzB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB;AACA,CAAC;AACDC,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAMC,cAAc,GAAG,IAAI,CAAC,CAAC;EAC7BlB,kCAAkC;IAChCiB,CAAC;IACD9B,OAAO;IACP+B,cAAc;IACd;IACAhB,YAAY,CAACe,CAAC,CAACZ,MAAM,CAACK,IAAI,CAAC,CAACS,MAAM,CAACF,CAAC,CAACZ,MAAM,CAACe,KAAK,CAAC;IAClDlB,YAAY,CAACe,CAAC,CAACZ,MAAM,CAACK,IAAI,CAAC,CAACS,MAAM,CAACF,CAAC,CAACZ,MAAM,CAACgB,OAAO,CAAC;IACpD1B,GAAG,CAACsB,CAAC,CAACZ,MAAM,CAACS,MAAM,CAAC;IACpBnB,GAAG,CAACsB,CAAC,CAACZ,MAAM,CAACU,KAAK,CAAC,CAAC;;IAEpBE,CAAC,CAACZ,MAAM,CAACI;EACX,CAAC;AACH,CAAC,CAAC;;AAEFR,CAAC,CAACE,IAAI,CAAC,YAAY,CAAC;AACpBC,IAAI;EACF;AACF,4EAA4EjB,OAAO;AACnF;AACA,CAAC;AACDkB,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEjB,MAAM,CAACY,YAAY,CAAC,CAAC,CAACK,OAAO,CAAC,MAAM,EAAEjB,MAAM,CAACY,YAAY,CAAC,CAAC,CAAC;AAC5Fc,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAMK,IAAI,GAAGpB,YAAY,CAACe,CAAC,CAACZ,MAAM,CAACiB,IAAI,CAAC;EACxC,MAAMC,IAAI,GAAGrB,YAAY,CAACe,CAAC,CAACZ,MAAM,CAACkB,IAAI,CAAC;EACxCvB,kCAAkC;IAChCiB,CAAC;IACD9B,OAAO;IACP,oBAAoB8B,CAAC,CAACZ,MAAM,CAACiB,IAAI,KAAKL,CAAC,CAACZ,MAAM,CAACkB,IAAI;IACnD,CAACD,IAAI,CAACH,MAAM,CAAC,CAAC,CAAC,EAAEI,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAExB,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,EAAE,CAAC,CAAC;IACjD;EACF,CAAC;AACH,CAAC,CAAC;;AAEFM,CAAC,CAACE,IAAI,CAAC,cAAc,CAAC;AACtBC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,GAAGT,0BAA0B,EAAE,SAAS,CAAC,CAAC;AAClES,OAAO,CAAC,YAAY,EAAE,CAAC,GAAGT,0BAA0B,EAAE,SAAS,CAAC,CAAC;AACjEa,aAAa,CAAC,CAAC;AACfE,iBAAiB,CAAC;AAClB;AACA,EAAEC,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB;AACA,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACzB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB;AACA,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB;AACA,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,EAAE,EAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB;AACA,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB,EAAED,MAAM,EAAE,CAAC,EAAEC,KAAK,EAAE,EAAE,CAAC,CAAC;AACxB;AACA;AAAA,CACCR,OAAO,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;AACnC,CAAC;AACDS,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,IAAIO,SAAS,GAAG,EAAE;EAClB,IAAIC,QAAQ,GAAG,EAAE;EACjB,QAAQR,CAAC,CAACZ,MAAM,CAACqB,WAAW;IAC1B,KAAK,UAAU;MACbF,SAAS,GAAG,GAAGhC,IAAI,CAACG,GAAG,CAACwB,MAAM,CAACF,CAAC,CAACZ,MAAM,CAACS,MAAM,CAAC,CAACa,IAAI,CAAC,CAAC,EAAE;MACxD;IACF,KAAK,UAAU;MACbH,SAAS,GAAG,UAAU;MACtB;IACF,KAAK,SAAS;MACZA,SAAS,GAAG,UAAU;MACtB;EACJ;EACA,QAAQP,CAAC,CAACZ,MAAM,CAACuB,UAAU;IACzB,KAAK,UAAU;MACbH,QAAQ,GAAG,GAAGjC,IAAI,CAACG,GAAG,CAACwB,MAAM,CAACF,CAAC,CAACZ,MAAM,CAACU,KAAK,CAAC,CAACY,IAAI,CAAC,CAAC,EAAE;MACtD;IACF,KAAK,UAAU;MACbF,QAAQ,GAAG,SAAS;MACpB;IACF,KAAK,SAAS;MACZA,QAAQ,GAAG,SAAS;MACpB;EACJ;EACA,MAAME,IAAI,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqCH,SAAS,KAAKC,QAAQ;AAC3D,EAAE;;EAEA,MAAMI,KAAK,GAAGZ,CAAC,CAACZ,MAAM,CAACS,MAAM,GAAGG,CAAC,CAACZ,MAAM,CAACU,KAAK,GAAG,EAAE;EACnD,MAAMe,YAAY;EAClBD,KAAK,IAAIZ,CAAC,CAACZ,MAAM,CAACqB,WAAW,KAAK,UAAU,IAAIT,CAAC,CAACZ,MAAM,CAACuB,UAAU,KAAK,UAAU;EAClF,MAAMG,cAAc;EACpBd,CAAC,CAACZ,MAAM,CAAC2B,SAAS;EAClBH,KAAK;EACLZ,CAAC,CAACZ,MAAM,CAACqB,WAAW,KAAK,SAAS;EAClCT,CAAC,CAACZ,MAAM,CAACuB,UAAU,KAAK,SAAS;EACjCX,CAAC,CAACgB,mBAAmB,CAAC,CAACH,YAAY,EAAEH,IAAI,CAAC;EAC1C,IAAI,CAACG,YAAY,EAAE;IACjB,MAAMI,SAAS,GAAG,CAAC,CAAC;IACpBA,SAAS,CAAC,UAAU,CAAC,GAAGjB,CAAC,CAACZ,MAAM,CAACS,MAAM;IACvCoB,SAAS,CAAC,SAAS,CAAC,GAAGjB,CAAC,CAACZ,MAAM,CAACU,KAAK;IACrCE,CAAC,CAACkB,oBAAoB,CAAC;MACrBjB,cAAc,EAAE,CAACa,cAAc;MAC/BK,IAAI,EAAET,IAAI;MACVO,SAAS;MACTG,SAAS,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAClCC,UAAU,EAAErB,CAAC,CAACZ,MAAM,CAAC2B,SAAS,GAAG,CAAC,QAAQ,CAAC,GAAG;IAChD,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;;;;;;;;;;AAWF,SAASO,gBAAgBA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACrC,OAAOD,KAAK,CAACE,MAAM;IACjB,CAACC,GAAG,EAAEjC,IAAI,MAAM;MACd,GAAGiC,GAAG;MACN,CAACjC,IAAI,CAACkC,QAAQ,CAAC,CAAC,GAAG,EAAEC,GAAG,EAAEnC,IAAI,CAACS,MAAM,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC,EAAEc,IAAI,CAAC;IACxD,CAAC,CAAC;IACF,CAAC;EACH,CAAC;AACH;;AAEA;AACA,MAAMK,cAAc,GAAG;EACrB,GAAGP,gBAAgB,CAAC,CAAC/C,IAAI,CAACG,GAAG,CAAC,EAAE,IAAI,CAAC;EACrC,GAAG4C,gBAAgB,CAAC,CAAC,GAAG7C,uBAAuB,EAAEF,IAAI,CAACuD,IAAI,EAAEvD,IAAI,CAACwD,OAAO,CAAC,EAAE,KAAK,CAAC;EACjFC,KAAK,EAAE,EAAEJ,GAAG,EAAE,cAAc,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EAC1CS,QAAQ,EAAE,EAAEL,GAAG,EAAE,wBAAwB,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACxDU,MAAM,EAAE,EAAEN,GAAG,EAAE,GAAG,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACjCW,KAAK,EAAE;IACLC,QAAQ,EAAE,0BAA0B;IACpCR,GAAG,EAAE,MAAM;IACXJ,IAAI,EAAE;EACR,CAAC;EACDa,aAAa,EAAE,EAAET,GAAG,EAAE,QAAQ,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAC7Cc,MAAM,EAAE;IACNF,QAAQ,EAAE,WAAW;IACrBR,GAAG,EAAE,GAAG;IACRJ,IAAI,EAAE;EACR,CAAC;EACDe,SAAS,EAAE,EAAEX,GAAG,EAAE,YAAY,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAC7CgB,GAAG,EAAE;IACHJ,QAAQ,EAAE;AACd,+CAA+C;IAC3CR,GAAG,EAAE,GAAG;IACRJ,IAAI,EAAE;EACR,CAAC;EACDiB,SAAS,EAAE;IACTL,QAAQ,EAAE;AACd,+CAA+C;IAC3CR,GAAG,EAAE,IAAI;IACTJ,IAAI,EAAE;EACR,CAAC;EACDkB,OAAO,EAAE,EAAEd,GAAG,EAAE,GAAG,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAClCmB,OAAO,EAAE,EAAEf,GAAG,EAAE,GAAG,EAAEJ,IAAI,EAAE,KAAK,CAAC;AACnC,CAAC;;AAEDxC,CAAC,CAACE,IAAI,CAAC,iBAAiB,CAAC;AACzBC,IAAI;EACF;AACF,iCAAiCjB,OAAO;AACxC;AACA;AACA;AACA;AACA,CAAC;AACDkB,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,OAAO,EAAEjB,MAAM,CAACwD,cAAc,CAAC,CAAC;AACxCnC,aAAa,CAAC,CAAC;AACfJ,OAAO,CAAC,QAAQ,EAAEjB,MAAM,CAACwD,cAAc,CAAC,CAAC;AACzClC,MAAM,CAAC,OAAO,EAAE,CAACN,CAAC,KAAKwC,cAAc,CAACxC,CAAC,CAACuD,KAAK,CAAC,CAACpB,IAAI,GAAGnD,MAAM,CAACwD,cAAc,CAAC,GAAG,CAACxC,CAAC,CAACQ,MAAM,CAAC;AACzF,CAAC;AACDE,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM4C,KAAK,GAAGf,cAAc,CAAC7B,CAAC,CAACZ,MAAM,CAACwD,KAAK,CAAC;EAC5C,MAAM/C,MAAM,GAAGgC,cAAc,CAAC7B,CAAC,CAACZ,MAAM,CAACS,MAAM,CAAC;EAC9C,MAAMC,KAAK,GAAG+B,cAAc,CAAC7B,CAAC,CAACZ,MAAM,CAACU,KAAK,CAAC;EAC5CE,CAAC,CAACgB,mBAAmB;IACnB4B,KAAK,CAACpB,IAAI,IAAI3B,MAAM,CAAC2B,IAAI,IAAI1B,KAAK,CAAC0B,IAAI;IACvC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUoB,KAAK,CAACR,QAAQ,GAAGQ,KAAK,CAACR,QAAQ,GAAG,EAAE;AAC9C,UAAUvC,MAAM,CAACuC,QAAQ,IAAIvC,MAAM,KAAK+C,KAAK,GAAG/C,MAAM,CAACuC,QAAQ,GAAG,EAAE;AACpE,UAAUtC,KAAK,CAACsC,QAAQ,IAAItC,KAAK,KAAK8C,KAAK,IAAI9C,KAAK,KAAKD,MAAM,GAAGC,KAAK,CAACsC,QAAQ,GAAG,EAAE;AACrF,cAAclE,OAAO,IAAI0E,KAAK,CAAChB,GAAG,IAAIgB,KAAK,CAAChB,GAAG,IAAI/B,MAAM,CAAC+B,GAAG,IAAI9B,KAAK,CAAC8B,GAAG;AAC1E;AACA;EACE,CAAC;AACH,CAAC,CAAC;;AAEF5C,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC;AAClBC,IAAI,CAAC,aAAajB,OAAO,eAAe,CAAC;AACzCkB,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9CS,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM6C,MAAM,GAAG7C,CAAC,CAACZ,MAAM,CAAC0D,GAAG,GAAG,MAAM,GAAG,EAAE;EACzC9C,CAAC,CAACgB,mBAAmB,CAAChB,CAAC,CAACZ,MAAM,CAAC0D,GAAG,EAAE,YAAYD,MAAM,GAAG3E,OAAO,kBAAkB,CAAC;AACrF,CAAC,CAAC","ignoreList":[]}