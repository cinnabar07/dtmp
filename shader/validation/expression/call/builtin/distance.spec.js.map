{"version":3,"file":"distance.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConvertableToFloatScalarsAndVectors","scalarTypeOf","ShaderValidationTest","ConstantOrOverrideValueChecker","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","f16","selectDeviceOrSkipTestCase","fn","scalarType","vCheck","a","Number","b","ab","checkedResult","width","ab2","sqrLen","isNearZero","skip","allChecksPassed","create","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_3arg","bad_0bool","bad_0array","bad_0struct","bad_0int","bad_0vec2i","bad_0vec3i","bad_0vec4i","bad_0uint","bad_0vec2u","bad_0vec3u","bad_0vec4u","bad_1bool","bad_1array","bad_1struct","bad_1int","bad_1vec2i","bad_1vec3i","bad_1vec4i","bad_1uint","bad_1vec2u","bad_1vec3u","bad_1vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/distance.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'distance';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  ConstantOrOverrideValueChecker,\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValidArgumentTypes)).\nfilter((u) => stageSupportsType(u.stage, kValidArgumentTypes[u.type])).\nbeginSubcases().\nexpand('a', (u) => fullRangeForType(kValidArgumentTypes[u.type], 5)).\nexpand('b', (u) => fullRangeForType(kValidArgumentTypes[u.type], 5))\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kValidArgumentTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n  const vCheck = new ConstantOrOverrideValueChecker(t, scalarType);\n\n  // Distance equation: length(a - b)\n  // Should be invalid if the calculations result in intermediate values that\n  // exceed the maximum representable float value for the given type.\n  const a = Number(t.params.a);\n  const b = Number(t.params.b);\n  const ab = vCheck.checkedResult(a - b);\n\n  // Only calculates the full length if the type is a vector. Otherwise abs(a-b) is used.\n  if (kValidArgumentTypes[t.params.type].width > 1) {\n    const ab2 = vCheck.checkedResult(ab * ab);\n    const sqrLen = vCheck.checkedResult(ab2 * kValidArgumentTypes[t.params.type].width);\n    // If the squared length is near zero it may fail on some implementations, so skip the test.\n    if (vCheck.isNearZero(sqrLen)) {\n      t.skip(`Squared length of ${sqrLen} is at or near 0.`);\n    }\n  }\n\n  const type = kValidArgumentTypes[t.params.type];\n\n  // Validates distance(vecN(a), vecN(b)) or distance(a, b);\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    vCheck.allChecksPassed(),\n    [type.create(t.params.a), type.create(t.params.b)],\n    t.params.stage\n  );\n});\n\nconst kArgCases = {\n  good: '(vec3(0), vec3(1))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(vec3(0))',\n  bad_3arg: '(vec3(0), vec3(1), vec3(2))',\n  // Bad value for arg 0\n  bad_0bool: '(false, vec3(1))',\n  bad_0array: '(array(1.1,2.2), vec3(1))',\n  bad_0struct: '(modf(2.2), vec3(1))',\n  bad_0int: '(0i, vec3(1))',\n  bad_0vec2i: '(vec2i(), vec3(1))',\n  bad_0vec3i: '(vec3i(), vec3(1))',\n  bad_0vec4i: '(vec4i(), vec3(1))',\n  bad_0uint: '(0u, vec3(1))',\n  bad_0vec2u: '(vec2u(), vec3(1))',\n  bad_0vec3u: '(vec3u(), vec3(1))',\n  bad_0vec4u: '(vec4u(), vec3(1))',\n  // Bad value type for arg 1\n  bad_1bool: '(vec3(0), true)',\n  bad_1array: '(vec3(0), array(1.1,2.2))',\n  bad_1struct: '(vec3(0), modf(2.2))',\n  bad_1int: '(vec3(0), 0i)',\n  bad_1vec2i: '(vec3(0), vec2i())',\n  bad_1vec3i: '(vec3(0), vec3i())',\n  bad_1vec4i: '(vec3(0), vec4i())',\n  bad_1uint: '(vec3(0), 0u)',\n  bad_1vec2u: '(vec3(0), vec2u())',\n  bad_1vec3u: '(vec3(0), vec3u())',\n  bad_1vec4u: '(vec3(0), vec4u())'\n};\n\ng.test('args').\ndesc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`).\nparams((u) => u.combine('arg', keysOf(kArgCases))).\nfn((t) => {\n  t.expectCompileResult(\n    t.params.arg === 'good',\n    `const c = ${builtin}${kArgCases[t.params.arg]};`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n});"],"mappings":"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","ignoreList":[]}