{"version":3,"file":"atomics.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kAtomicOps","add","a","sub","max","min","and","or","xor","load","store","exchange","compareexchangeweak","test","specURL","desc","params","u","combine","fn","t","atomicOp","code","stage","pass","expectCompileResult","generateAtomicCode","type","access","aspace","style","op","moduleVar","functionVar","param","aParam","aspaceParam","beginSubcases","filter","skipIfLanguageFeatureNotSupported","aspaceOK","accessOK","dataValue","dataType","atomicType","expect","returnType","atomic","decl","addrspace"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/atomics.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for atomic builtins.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n\n\n\n\nconst kAtomicOps = {\n  add: (a) => {\n    return `atomicAdd(${a},1)`;\n  },\n  sub: (a) => {\n    return `atomicSub(${a},1)`;\n  },\n  max: (a) => {\n    return `atomicMax(${a},1)`;\n  },\n  min: (a) => {\n    return `atomicMin(${a},1)`;\n  },\n  and: (a) => {\n    return `atomicAnd(${a},1)`;\n  },\n  or: (a) => {\n    return `atomicOr(${a},1)`;\n  },\n  xor: (a) => {\n    return `atomicXor(${a},1)`;\n  },\n  load: (a) => {\n    return `atomicLoad(${a})`;\n  },\n  store: (a) => {\n    return `atomicStore(${a},1)`;\n  },\n  exchange: (a) => {\n    return `atomicExchange(${a},1)`;\n  },\n  compareexchangeweak: (a) => {\n    return `atomicCompareExchangeWeak(${a},1,1)`;\n  }\n};\n\ng.test('stage').\nspecURL('https://www.w3.org/TR/WGSL/#atomic-rmw').\ndesc(\n  `\nAtomic built-in functions must not be used in a vertex shader stage.\n`\n).\nparams((u) =>\nu.\ncombine('stage', ['fragment', 'vertex', 'compute']) //\n.combine('atomicOp', keysOf(kAtomicOps))\n).\nfn((t) => {\n  const atomicOp = kAtomicOps[t.params.atomicOp](`&a`);\n  let code = `\n@group(0) @binding(0) var<storage, read_write> a: atomic<i32>;\n`;\n\n  switch (t.params.stage) {\n    case 'compute':\n      code += `\n@compute @workgroup_size(1,1,1) fn main() {\n  ${atomicOp};\n}`;\n      break;\n\n    case 'fragment':\n      code += `\n@fragment fn main() -> @location(0) vec4<f32> {\n  ${atomicOp};\n  return vec4<f32>();\n}`;\n      break;\n\n    case 'vertex':\n      code += `\n@vertex fn vmain() -> @builtin(position) vec4<f32> {\n  ${atomicOp};\n  return vec4<f32>();\n}`;\n      break;\n  }\n\n  const pass = t.params.stage !== 'vertex';\n  t.expectCompileResult(pass, code);\n});\n\nfunction generateAtomicCode(\ntype,\naccess,\naspace,\nstyle,\nop)\n{\n  let moduleVar = ``;\n  let functionVar = ``;\n  let param = ``;\n  let aParam = ``;\n  if (style === 'var') {\n    aParam = `&a`;\n    switch (aspace) {\n      case 'storage':\n        moduleVar = `@group(0) @binding(0) var<storage, ${access}> a : atomic<${type}>;\\n`;\n        break;\n      case 'workgroup':\n        moduleVar = `var<workgroup> a : atomic<${type}>;\\n`;\n        break;\n      case 'uniform':\n        moduleVar = `@group(0) @binding(0) var<uniform> a : atomic<${type}>;\\n`;\n        break;\n      case 'private':\n        moduleVar = `var<private> a : atomic<${type}>;\\n`;\n        break;\n      case 'function':\n        functionVar = `var a : atomic<${type}>;\\n`;\n        break;\n      default:\n        break;\n    }\n  } else {\n    const aspaceParam = aspace === 'storage' ? `, ${access}` : ``;\n    param = `p : ptr<${aspace}, atomic<${type}>${aspaceParam}>`;\n    aParam = `p`;\n  }\n\n  return `\n${moduleVar}\nfn foo(${param}) {\n  ${functionVar}\n  ${kAtomicOps[op](aParam)};\n}\n`;\n}\n\ng.test('atomic_parameterization').\ndesc('Tests the valid atomic parameters').\nparams((u) =>\nu.\ncombine('op', keysOf(kAtomicOps)).\nbeginSubcases().\ncombine('aspace', ['storage', 'workgroup', 'private', 'uniform', 'function']).\ncombine('access', ['read', 'read_write']).\ncombine('type', ['i32', 'u32']).\ncombine('style', ['param', 'var']).\nfilter((t) => {\n  switch (t.aspace) {\n    case 'uniform':\n      return t.style === 'param' && t.access === 'read';\n    case 'workgroup':\n      return t.access === 'read_write';\n    case 'function':\n    case 'private':\n      return t.style === 'param' && t.access === 'read_write';\n    default:\n      return true;\n  }\n})\n).\nfn((t) => {\n  if (\n  t.params.style === 'param' &&\n  !(t.params.aspace === 'function' || t.params.aspace === 'private'))\n  {\n    t.skipIfLanguageFeatureNotSupported('unrestricted_pointer_parameters');\n  }\n\n  const aspaceOK = t.params.aspace === 'storage' || t.params.aspace === 'workgroup';\n  const accessOK = t.params.access === 'read_write';\n  t.expectCompileResult(\n    aspaceOK && accessOK,\n    generateAtomicCode(\n      t.params.type,\n      t.params.access,\n      t.params.aspace,\n      t.params.style,\n      t.params.op\n    )\n  );\n});\n\ng.test('data_parameters').\ndesc('Validates that data parameters must match atomic type (or be implicitly convertible)').\nparams((u) =>\nu.\ncombine('op', [\n'atomicStore',\n'atomicAdd',\n'atomicSub',\n'atomicMax',\n'atomicMin',\n'atomicAnd',\n'atomicOr',\n'atomicXor',\n'atomicExchange',\n'atomicCompareExchangeWeak1',\n'atomicCompareExchangeWeak2']\n).\nbeginSubcases().\ncombine('atomicType', ['i32', 'u32']).\ncombine('dataType', ['i32', 'u32', 'f32', 'AbstractInt'])\n).\nfn((t) => {\n  let dataValue = '';\n  switch (t.params.dataType) {\n    case 'i32':\n      dataValue = '1i';\n      break;\n    case 'u32':\n      dataValue = '1u';\n      break;\n    case 'f32':\n      dataValue = '1f';\n      break;\n    case 'AbstractInt':\n      dataValue = '1';\n      break;\n  }\n  let op = '';\n  switch (t.params.op) {\n    case 'atomicCompareExchangeWeak1':\n      op = `atomicCompareExchangeWeak(&a, ${dataValue}, 1)`;\n      break;\n    case 'atomicCompareExchangeWeak2':\n      op = `atomicCompareExchangeWeak(&a, 1, ${dataValue})`;\n      break;\n    default:\n      op = `${t.params.op}(&a, ${dataValue})`;\n      break;\n  }\n  const code = `\nvar<workgroup> a : atomic<${t.params.atomicType}>;\nfn foo() {\n  ${op};\n}\n`;\n\n  const expect = t.params.atomicType === t.params.dataType || t.params.dataType === 'AbstractInt';\n  t.expectCompileResult(expect, code);\n});\n\ng.test('return_types').\ndesc('Validates return types of atomics').\nparams((u) =>\nu.\ncombine('op', keysOf(kAtomicOps)).\nbeginSubcases().\ncombine('atomicType', ['i32', 'u32']).\ncombine('returnType', ['i32', 'u32', 'f32'])\n).\nfn((t) => {\n  let op = `${kAtomicOps[t.params.op]('&a')}`;\n  switch (t.params.op) {\n    case 'compareexchangeweak':\n      op = `let tmp : ${t.params.returnType} = ${op}.old_value`;\n      break;\n    default:\n      op = `let tmp : ${t.params.returnType} = ${op}`;\n      break;\n  }\n  const code = `\nvar<workgroup> a : atomic<${t.params.atomicType}>;\nfn foo() {\n  ${op};\n}\n`;\n\n  const expect = t.params.atomicType === t.params.returnType && t.params.op !== 'store';\n  t.expectCompileResult(expect, code);\n});\n\ng.test('non_atomic').\ndesc('Test that non-atomic integers are rejected by all atomic functions.').\nparams((u) =>\nu.\ncombine('op', keysOf(kAtomicOps)).\ncombine('addrspace', ['storage', 'workgroup']).\ncombine('type', ['i32', 'u32']).\ncombine('atomic', [true, false])\n).\nfn((t) => {\n  let type = t.params.type;\n  if (t.params.atomic) {\n    type = `atomic<${type}>`;\n  }\n\n  let decl = '';\n  if (t.params.addrspace === 'storage') {\n    decl = `@group(0) @binding(0) var<storage, read_write> a : ${type}`;\n  } else if (t.params.addrspace === 'workgroup') {\n    decl = `var<workgroup> a : ${type}`;\n  }\n\n  const op = `${kAtomicOps[t.params.op]('&a')}`;\n  const code = `\n${decl};\nfn foo() {\n  ${op};\n}\n`;\n\n  t.expectCompileResult(t.params.atomic, code);\n});"],"mappings":"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","ignoreList":[]}