{"version":3,"file":"bitcast.spec.js","names":["description","makeTestGroup","keysOf","assert","kBit","linearRange","ShaderValidationTest","g","kVectorCases","v1_b0","width","badIndex","v2_b0","v2_b1","v3_b0","v3_b1","v3_b2","v4_b0","v4_b1","v4_b2","v4_b3","numNaNs","f32InfAndNaNInU32","f32","positive","infinity","i32","max","negative","u32","test","specURL","desc","params","u","combine","beginSubcases","expand","p","useBadValue","fn","t","vectorize","badScalar","fromScalarType","bitBadValue","destType","srcType","components","Array","keys","map","i","join","code","expectCompileResult","f16InfAndNaNInU16","f16","u16x2ToU32","u16x2","length","buffer","ArrayBuffer","view","DataView","setUint16","getUint32","filter","beforeAllSubcases","selectDeviceOrSkipTestCase","badSrcElemBitsInU32","f32_matrix_types","j","reduce","a","c","concat","f16_matrix_types","bool_types","type","includes","T","enable_directives","preamble","srcVal","direction","typeOf","s","b","var","src_type","other_type","dst_type","use","case"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/bitcast.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation negative tests for bitcast builtins.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { assert } from '../../../../../../common/util/util.js';\nimport { kBit } from '../../../../../util/constants.js';\nimport { linearRange } from '../../../../../util/math.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// A VectorCase specifies the number of components a vector type has,\n// and which component will have a bad value.\n// Use width = 1 to indicate a scalar.\n\nconst kVectorCases = {\n  v1_b0: { width: 1, badIndex: 0 },\n  v2_b0: { width: 2, badIndex: 0 },\n  v2_b1: { width: 2, badIndex: 1 },\n  v3_b0: { width: 3, badIndex: 0 },\n  v3_b1: { width: 3, badIndex: 1 },\n  v3_b2: { width: 3, badIndex: 2 },\n  v4_b0: { width: 4, badIndex: 0 },\n  v4_b1: { width: 4, badIndex: 1 },\n  v4_b2: { width: 4, badIndex: 2 },\n  v4_b3: { width: 4, badIndex: 3 }\n};\n\nconst numNaNs = 4;\nconst f32InfAndNaNInU32 = [\n// Cover NaNs evenly in integer space.\n// The positive NaN with the lowest integer representation is the integer\n// for infinity, plus one.\n// The positive NaN with the highest integer representation is i32.max (!)\n...linearRange(kBit.f32.positive.infinity + 1, kBit.i32.positive.max, numNaNs),\n// The negative NaN with the lowest integer representation is the integer\n// for negative infinity, plus one.\n// The negative NaN with the highest integer representation is u32.max (!)\n...linearRange(kBit.f32.negative.infinity + 1, kBit.u32.max, numNaNs),\nkBit.f32.positive.infinity,\nkBit.f32.negative.infinity];\n\n\ng.test('bad_const_to_f32').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nIt is a shader-creation error if any const-expression of floating-point type evaluates to NaN or infinity.\n`\n).\nparams((u) =>\nu.\ncombine('fromScalarType', ['i32', 'u32']).\ncombine('vectorize', keysOf(kVectorCases)).\nbeginSubcases()\n// Also validate that testcases without using bad bit can pass the exam\n.combine('useBadValue', [true, false]).\nexpand('bitBadValue', (p) =>\np.useBadValue ? [...f32InfAndNaNInU32] : [0]\n)\n).\nfn((t) => {\n  // For scalar cases, generate code like:\n  //  const f = bitcast<f32>(i32(u32(0x7f800000)));\n  // For vector cases, generate code where one component is bad. In this case\n  // width=4 and badIndex=2\n  //  const f = bitcast<vec4f>(vec4<32>(0,0,i32(u32(0x7f800000)),0));\n  const vectorize = kVectorCases[t.params.vectorize];\n  const width = vectorize.width;\n  const badIndex = vectorize.badIndex;\n  const badScalar = `${t.params.fromScalarType}(u32(${t.params.bitBadValue}))`;\n  const destType = width === 1 ? 'f32' : `vec${width}f`;\n  const srcType =\n  width === 1 ? t.params.fromScalarType : `vec${width}<${t.params.fromScalarType}>`;\n  const components = [...Array(width).keys()].\n  map((i) => i === badIndex ? badScalar : '0').\n  join(',');\n  const code = `const f = bitcast<${destType}>(${srcType}(${components}));`;\n  t.expectCompileResult(!t.params.useBadValue, code);\n});\n\nconst f16InfAndNaNInU16 = [\n// Cover NaNs evenly in integer space.\n// The positive NaN with the lowest integer representation is the integer\n// for infinity, plus one.\n// The positive NaN with the highest integer representation is i16.max = 32767\n...linearRange(kBit.f16.positive.infinity + 1, 32767, numNaNs),\n// The negative NaN with the lowest integer representation is the integer\n// for negative infinity, plus one.\n// The negative NaN with the highest integer representation is u16.max = 65535\n...linearRange(kBit.f16.negative.infinity + 1, 65535, numNaNs),\nkBit.f16.positive.infinity,\nkBit.f16.negative.infinity];\n\n\n/**\n * @returns an u32 whose lower and higher 16bits are the two elements of the\n * given array of two u16 respectively, in little-endian.\n */\nfunction u16x2ToU32(u16x2) {\n  assert(u16x2.length === 2);\n  // Create a DataView with 4 bytes buffer.\n  const buffer = new ArrayBuffer(4);\n  const view = new DataView(buffer);\n  // Enforce little-endian.\n  view.setUint16(0, u16x2[0], true);\n  view.setUint16(2, u16x2[1], true);\n  return view.getUint32(0, true);\n}\n\ng.test('bad_const_to_f16').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nIt is a shader-creation error if any const-expression of floating-point type evaluates to NaN or infinity.\n`\n).\nparams((u) =>\nu.\ncombine('fromScalarType', ['i32', 'u32']).\ncombine('vectorize', keysOf(kVectorCases))\n// Only test valid bitcast to vec2<f16> or vec4<f16>\n.filter((p) => kVectorCases[p.vectorize].width % 2 === 0).\nbeginSubcases()\n// Also validate that testcases without using bad bit can pass the exam\n.combine('useBadValue', [true, false]).\nexpand('bitBadValue', (p) =>\np.useBadValue ? [...f16InfAndNaNInU16] : [0]\n)\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  // For width = 2 generate code like:\n  //  const f = bitcast<vec2<f16>>(i32(u32(0x7f800000)));\n  // And for width = 4:\n  //  const f = bitcast<vec4<f16>>(vec2<i32>(0,i32(u32(0x7f800000))));\n  const vectorize = kVectorCases[t.params.vectorize];\n  const width = vectorize.width;\n  const badIndex = vectorize.badIndex;\n\n  // Only bistcast to vec2<f16> or vec4<f16> is valid.\n  assert(width === 2 || width === 4);\n\n  // Put the bad f16 bits into lower 16 bits of source element if bad index is 0 or 2, else higher 16 bits.\n  const badSrcElemBitsInU32 = u16x2ToU32(\n    badIndex % 2 === 0 ? [t.params.bitBadValue, 0] : [0, t.params.bitBadValue]\n  );\n  const badScalar = `${t.params.fromScalarType}(u32(${badSrcElemBitsInU32}))`;\n\n  const destType = `vec${width}<f16>`;\n  const srcType = width === 2 ? t.params.fromScalarType : `vec2<${t.params.fromScalarType}>`;\n  const components = [...Array(width / 2).keys()].\n  map((i) => i === badIndex >> 1 ? badScalar : '0').\n  join(',');\n  const code = `\n    enable f16;\n    const f = bitcast<${destType}>(${srcType}(${components}));`;\n  t.expectCompileResult(!t.params.useBadValue, code);\n});\n\nconst f32_matrix_types = [2, 3, 4].\nmap((i) => [2, 3, 4].map((j) => `mat${i}x${j}f`)).\nreduce((a, c) => a.concat(c), []);\nconst f16_matrix_types = [2, 3, 4].\nmap((i) => [2, 3, 4].map((j) => `mat${i}x${j}<f16>`)).\nreduce((a, c) => a.concat(c), []);\nconst bool_types = ['bool', ...[2, 3, 4].map((i) => `vec${i}<bool>`)];\n\ng.test('bad_type_constructible').\nspecURL('https://www.w3.org/TR/WGSL/#bitcast-builtin').\ndesc(\n  `\nBitcast only applies to concrete numeric scalar or concrete numeric vector.\nTest constructible types.\n`\n).\nparams((u) =>\nu.\ncombine('type', [\n...f32_matrix_types,\n...f16_matrix_types,\n...bool_types,\n'array<i32,2>',\n'S']\n).\ncombine('direction', ['to', 'from'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type.includes('f16')) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const T = t.params.type;\n  const enable_directives = t.params.type.includes('f16') ? 'enable f16;\\n' : '';\n  const preamble = T === 'S' ? 'struct S { a:i32 } ' : '';\n  // Create a value of type T using zero-construction: T().\n  const srcVal = t.params.direction === 'to' ? '0' : `${T}()`;\n  const destType = t.params.direction === 'to' ? T : 'i32';\n  const code = enable_directives + preamble + `const x = bitcast<${destType}>(${srcVal});`;\n  t.expectCompileResult(false, code);\n});\n\ng.test('bad_type_nonconstructible').\nspecURL('https://www.w3.org/TR/WGSL/#bitcast-builtin').\ndesc(\n  `\nBitcast only applies to concrete numeric scalar or concrete numeric vector.\nTest non-constructible types.\n`\n).\nparams((u) => u.combine('var', ['s', 't', 'b', 'p']).combine('direction', ['to', 'from'])).\nfn((t) => {\n  const typeOf = {\n    s: 'sampler',\n    t: 'texture_depth_2d',\n    b: 'array<i32>',\n    p: 'ptr<private,i32>'\n  };\n  const srcVal = t.params.direction === 'to' ? '0' : t.params.var;\n  const destType = t.params.direction === 'to' ? typeOf[t.params.var] : 'i32';\n  const code = `\n    @group(0) @binding(0) var s: sampler;\n    @group(0) @binding(1) var t: texture_depth_2d;\n    @group(0) @binding(2) var<storage> b: array<i32>;\n    var<private> v: i32;\n    @compute @workgroup_size(1)\n    fn main() {\n      let p = &v;\n      let x = bitcast<${destType}>(${srcVal});\n    }\n    `;\n  t.expectCompileResult(false, code);\n});\n\ng.test('bad_to_vec3h').\nspecURL('https://www.w3.org/TR/WGSL/#bitcast-builtin').\ndesc(\n  `\nCan't cast numeric type to vec3<f16> because it is 48 bits wide\nand no other type is that size.\n`\n).\nparams((u) =>\nu.\ncombine('other_type', [\n'bool',\n'u32',\n'i32',\n'f32',\n'vec2<bool>',\n'vec3<bool>',\n'vec4<bool>',\n'vec2u',\n'vec3u',\n'vec4u',\n'vec2i',\n'vec3i',\n'vec4i',\n'vec2f',\n'vec3f',\n'vec4f',\n'vec2h',\n'vec4h']\n).\ncombine('direction', ['to', 'from']).\ncombine('type', ['vec3<f16>', 'vec3h'])\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const src_type = t.params.direction === 'to' ? t.params.type : t.params.other_type;\n  const dst_type = t.params.direction === 'from' ? t.params.type : t.params.other_type;\n  const code = `\nenable f16;\n@fragment\nfn main() {\n  var src : ${src_type};\n  let dst = bitcast<${dst_type}>(src);\n}`;\n  t.expectCompileResult(false, code);\n});\n\ng.test('bad_to_f16').\nspecURL('https://www.w3.org/TR/WGSL/#bitcast-builtin').\ndesc(\n  `\nCan't cast non-16-bit types to f16 because it is 16 bits wide\nand no other type is that size.\n`\n).\nparams((u) =>\nu.\ncombine('other_type', [\n'bool',\n'u32',\n'i32',\n'f32',\n'vec2<bool>',\n'vec3<bool>',\n'vec4<bool>',\n'vec2u',\n'vec3u',\n'vec4u',\n'vec2i',\n'vec3i',\n'vec4i',\n'vec2f',\n'vec3f',\n'vec4f',\n'vec2h',\n'vec3h',\n'vec4h']\n).\ncombine('direction', ['to', 'from'])\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const src_type = t.params.direction === 'to' ? 'f16' : t.params.other_type;\n  const dst_type = t.params.direction === 'from' ? 'f16' : t.params.other_type;\n  const code = `\nenable f16;\n@fragment\nfn main() {\n  var src : ${src_type};\n  let dst = bitcast<${dst_type}>(src);\n}`;\n  t.expectCompileResult(false, code);\n});\n\ng.test('valid_vec2h').\nspecURL('https://www.w3.org/TR/WGSL/#bitcast-builtin').\ndesc(`Check valid vec2<f16> bitcasts`).\nparams((u) =>\nu.\ncombine('other_type', ['u32', 'i32', 'f32']).\ncombine('type', ['vec2<f16>', 'vec2h']).\ncombine('direction', ['to', 'from'])\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const src_type = t.params.direction === 'to' ? t.params.type : t.params.other_type;\n  const dst_type = t.params.direction === 'from' ? t.params.type : t.params.other_type;\n  const code = `\nenable f16;\n@fragment\nfn main() {\n  var src : ${src_type};\n  let dst = bitcast<${dst_type}>(src);\n}`;\n  t.expectCompileResult(true, code);\n});\n\ng.test('valid_vec4h').\nspecURL('https://www.w3.org/TR/WGSL/#bitcast-builtin').\ndesc(`Check valid vec2<f16> bitcasts`).\nparams((u) =>\nu.\ncombine('other_type', [\n'vec2<u32>',\n'vec2u',\n'vec2<i32>',\n'vec2i',\n'vec2<f32>',\n'vec2f']\n).\ncombine('type', ['vec4<f16>', 'vec4h']).\ncombine('direction', ['to', 'from'])\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const src_type = t.params.direction === 'to' ? t.params.type : t.params.other_type;\n  const dst_type = t.params.direction === 'from' ? t.params.type : t.params.other_type;\n  const code = `\nenable f16;\n@fragment\nfn main() {\n  var src : ${src_type};\n  let dst = bitcast<${dst_type}>(src);\n}`;\n  t.expectCompileResult(true, code);\n});\n\ng.test('must_use').\ndesc('Test that bitcast result must be used').\nparams((u) =>\nu.\ncombine('case', [\n'bitcast<u32>(1i)',\n'bitcast<f32>(1u)',\n'bitcast<vec2f>(vec2i())',\n'bitcast<vec3u>(vec3u())',\n'bitcast<vec4i>(vec4f())']\n).\ncombine('use', [true, false])\n).\nfn((t) => {\n  const code = `\n    fn foo() {\n      ${t.params.use ? '_ =' : ''} ${t.params.case};\n    }`;\n  t.expectCompileResult(t.params.use, code);\n});"],"mappings":"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","ignoreList":[]}