{"version":3,"file":"faceForward.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConvertableToFloatVectors","scalarTypeOf","quantizeToF16","quantizeToF32","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","quantizeFunctionForScalarType","type","f32","f16","v","test","desc","params","u","combine","filter","stage","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","scalarType","quantizeFn","b","Number","c","bc","dp","width","isFinite","create","a","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_2arg","bad_4arg","bad_0bool","bad_0array","bad_0struct","bad_0int","bad_0uint","bad_0vec2i","bad_0vec3i","bad_0vec4i","bad_0vec2u","bad_0vec3u","bad_0vec4u","bad_1bool","bad_1array","bad_1struct","bad_1int","bad_1uint","bad_1vec2i","bad_1vec3i","bad_1vec4i","bad_1vec2u","bad_1vec3u","bad_1vec4u","bad_2bool","bad_2array","bad_2struct","bad_2int","bad_2uint","bad_2vec2i","bad_2vec3i","bad_2vec4i","bad_2vec2u","bad_2vec3u","bad_2vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/faceForward.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'faceForward';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConvertableToFloatVectors,\n  scalarTypeOf } from\n\n'../../../../../util/conversion.js';\nimport { quantizeToF16, quantizeToF32 } from '../../../../../util/math.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatVectors);\n\nfunction quantizeFunctionForScalarType(type) {\n  switch (type) {\n    case Type.f32:\n      return quantizeToF32;\n    case Type.f16:\n      return quantizeToF16;\n    default:\n      return (v) => v;\n  }\n}\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValidArgumentTypes)).\nfilter((u) => stageSupportsType(u.stage, kValidArgumentTypes[u.type])).\nbeginSubcases().\nexpand('a', (u) => fullRangeForType(kValidArgumentTypes[u.type], 5)).\nexpand('b', (u) => fullRangeForType(kValidArgumentTypes[u.type], 5)).\nexpand('c', (u) => fullRangeForType(kValidArgumentTypes[u.type], 5))\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kValidArgumentTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  let expectedResult = true;\n\n  const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n  const quantizeFn = quantizeFunctionForScalarType(scalarType);\n\n  // Face Forward equation: dot(b, c) < 0 ? -a : a\n  // Should be invalid if the calculations result in intermediate values that\n  // exceed the maximum representable float value for the given type.\n  const b = Number(t.params.b);\n  const c = Number(t.params.c);\n  const bc = quantizeFn(b * c);\n  const dp = quantizeFn(bc * kValidArgumentTypes[t.params.type].width);\n\n  if (!Number.isFinite(dp)) {\n    expectedResult = false;\n  }\n\n  const type = kValidArgumentTypes[t.params.type];\n\n  // Validates faceForward(vecN(a), vecN(b), vecN(c));\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [type.create(t.params.a), type.create(t.params.b), type.create(t.params.c)],\n    t.params.stage\n  );\n});\n\nconst kArgCases = {\n  good: '(vec3(0), vec3(1), vec3(0.5))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(vec3(0))',\n  bad_2arg: '(vec3(0), vec3(1))',\n  bad_4arg: '(vec3(0), vec3(1), vec3(0.5), vec3(3))',\n  // Bad value for arg 0\n  bad_0bool: '(false, vec3(1), vec3(0.5))',\n  bad_0array: '(array(1.1,2.2), vec3(1), vec3(0.5))',\n  bad_0struct: '(modf(2.2), vec3(1), vec3(0.5))',\n  bad_0int: '(1i, vec3(1), vec3(0.5))',\n  bad_0uint: '(1u, vec3(1), vec3(0.5))',\n  bad_0vec2i: '(vec2i(0), vec2(1), vec2(0.5))',\n  bad_0vec3i: '(vec3i(0), vec3(1), vec3(0.5))',\n  bad_0vec4i: '(vec4i(0), vec4(1), vec4(0.5))',\n  bad_0vec2u: '(vec2u(0), vec2(1), vec2(0.5))',\n  bad_0vec3u: '(vec3u(0), vec3(1), vec3(0.5))',\n  bad_0vec4u: '(vec4u(0), vec4(1), vec4(0.5))',\n  // Bad value type for arg 1\n  bad_1bool: '(vec3(0), true, vec3(0.5))',\n  bad_1array: '(vec3(0), array(1.1,2.2), vec3(0.5))',\n  bad_1struct: '(vec3(0), modf(2.2), vec3(0.5))',\n  bad_1int: '(vec3(0), 1i, vec3(0.5))',\n  bad_1uint: '(vec3(0), 1u, vec3(0.5))',\n  bad_1vec2i: '(vec2(1), vec2i(1), vec2(0.5))',\n  bad_1vec3i: '(vec3(1), vec3i(1), vec3(0.5))',\n  bad_1vec4i: '(vec4(1), vec4i(1), vec4(0.5))',\n  bad_1vec2u: '(vec2(1), vec2u(1), vec2(0.5))',\n  bad_1vec3u: '(vec3(1), vec3u(1), vec3(0.5))',\n  bad_1vec4u: '(vec4(1), vec4u(1), vec4(0.5))',\n  // Bad value type for arg 2\n  bad_2bool: '(vec3(0), vec3(1), true)',\n  bad_2array: '(vec3(0), vec3(1), array(1.1,2.2))',\n  bad_2struct: '(vec3(0), vec3(1), modf(2.2))',\n  bad_2int: '(vec3(0), vec3(1), 1i)',\n  bad_2uint: '(vec3(0), vec3(1), 1u)',\n  bad_2vec2i: '(vec2(1), vec2(1), vec2i(1))',\n  bad_2vec3i: '(vec3(1), vec3(1), vec3i(1))',\n  bad_2vec4i: '(vec4(1), vec4(1), vec4i(1))',\n  bad_2vec2u: '(vec2(1), vec2(1), vec2u(1))',\n  bad_2vec3u: '(vec3(1), vec3(1), vec3u(1))',\n  bad_2vec4u: '(vec4(1), vec4(1), vec4u(1))'\n};\n\ng.test('args').\ndesc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`).\nparams((u) => u.combine('arg', keysOf(kArgCases))).\nfn((t) => {\n  t.expectCompileResult(\n    t.params.arg === 'good',\n    `const c = ${builtin}${kArgCases[t.params.arg]};`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n});"],"mappings":"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","ignoreList":[]}