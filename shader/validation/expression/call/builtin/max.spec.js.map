{"version":3,"file":"max.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kAllNumericScalarsAndVectors","scalarTypeOf","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","f16","selectDeviceOrSkipTestCase","fn","expectedResult","create","a","b","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_3arg","bad_0bool","bad_0array","bad_0struct","bad_1bool","bad_1array","bad_1struct","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/max.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'max';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kAllNumericScalarsAndVectors,\n  scalarTypeOf } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kAllNumericScalarsAndVectors);\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValuesTypes)).\nfilter((u) => stageSupportsType(u.stage, kValuesTypes[u.type])).\nbeginSubcases().\nexpand('a', (u) => fullRangeForType(kValuesTypes[u.type], 5)).\nexpand('b', (u) => fullRangeForType(kValuesTypes[u.type], 5))\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type = kValuesTypes[t.params.type];\n  const expectedResult = true; // should never error\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [type.create(t.params.a), type.create(t.params.b)],\n    t.params.stage\n  );\n});\n\nconst kArgCases = {\n  good: '(1.1, 2.2)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(1.0)',\n  bad_3arg: '(1.0, 2.0, 3.0)',\n  // Bad value for arg 0\n  bad_0bool: '(false, 1.0)',\n  bad_0array: '(array(1.1,2.2), 1.0)',\n  bad_0struct: '(modf(2.2), 1.0)',\n  // Bad value type for arg 1\n  bad_1bool: '(1.0, true)',\n  bad_1array: '(1.0, array(1.1,2.2))',\n  bad_1struct: '(1.0, modf(2.2))'\n};\n\ng.test('args').\ndesc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`).\nparams((u) => u.combine('arg', keysOf(kArgCases))).\nfn((t) => {\n  t.expectCompileResult(\n    t.params.arg === 'good',\n    `const c = ${builtin}${kArgCases[t.params.arg]};`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n});"],"mappings":"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","ignoreList":[]}