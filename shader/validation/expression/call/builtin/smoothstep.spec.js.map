{"version":3,"file":"smoothstep.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","concreteTypeOf","elementTypeOf","isConvertibleToFloatType","kAllScalarsAndVectors","kConvertableToFloatScalarsAndVectors","scalarTypeOf","f32","ShaderValidationTest","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","kArgumentTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","beforeAllSubcases","t","f16","selectDeviceOrSkipTestCase","fn","expectedResult","value1","value2","create","kStages","scalarTy","abstractInt","abstractFloat","enable","requiresF16","lowArg","highArg","lowStage","low","wgsl","toString","highStage","high","error","shader_error","pipeline_error","in_shader","expectCompileResult","constants","expectPipelineResult","code","reference","statements","kTests","valid","src","pass","alias","bool","i32","u32","mixed_aint_afloat","mixed_f32_afloat","mixed_f16_afloat","vec_bool","vec_i32","vec_u32","vec_f32","matrix","atomic","array","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","no_args","too_few_args","too_many_args","must_use","includes","enables","combineWithParams"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/smoothstep.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'smoothstep';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  concreteTypeOf,\n  elementTypeOf,\n  isConvertibleToFloatType,\n  kAllScalarsAndVectors,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n  f32 } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\nconst kArgumentTypes = objectsToRecord(kAllScalarsAndVectors);\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValuesTypes)).\nfilter((u) => stageSupportsType(u.stage, kValuesTypes[u.type])).\nbeginSubcases().\nexpand('value1', (u) => [-1000, -10, 0, 10, 1000]).\nexpand('value2', (u) => [-1000, -10, 0, 10, 1000])\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type = kValuesTypes[t.params.type];\n\n  // We expect to fail if low >= high.\n  const expectedResult = t.params.value1 < t.params.value2;\n\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [type.create(t.params.value1), type.create(t.params.value2), type.create(0)],\n    t.params.stage\n  );\n});\n\nconst kStages = [...kConstantAndOverrideStages, 'runtime'];\n\ng.test('partial_eval_errors').\ndesc('Validates that low < high').\nparams((u) =>\nu.\ncombine('lowStage', kStages).\ncombine('highStage', kStages).\ncombine('type', keysOf(kValuesTypes)).\nfilter((t) => {\n  const type = kValuesTypes[t.type];\n  const scalarTy = scalarTypeOf(type);\n  return scalarTy !== Type.abstractInt && scalarTy !== Type.abstractFloat;\n}).\nbeginSubcases().\nexpand('low', (u) => [0, 10]).\nexpand('high', (u) => [0, 10])\n// in_shader: Is the function call statically accessed by the entry point?\n.combine('in_shader', [false, true])\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type = kValuesTypes[t.params.type];\n  const scalarTy = scalarTypeOf(type);\n  const enable = `${type.requiresF16() ? 'enable f16;' : ''}`;\n  let lowArg = '';\n  let highArg = '';\n  switch (t.params.lowStage) {\n    case 'constant':\n      lowArg = `${type.create(t.params.low).wgsl()}`;\n      break;\n    case 'override':\n      lowArg = `${type.toString()}(o_low)`;\n      break;\n    case 'runtime':\n      lowArg = `v_low`;\n      break;\n  }\n  switch (t.params.highStage) {\n    case 'constant':\n      highArg = `${type.create(t.params.high).wgsl()}`;\n      break;\n    case 'override':\n      highArg = `${type.toString()}(o_high)`;\n      break;\n    case 'runtime':\n      highArg = `v_high`;\n      break;\n  }\n  const wgsl = `\n${enable}\noverride o_low : ${scalarTy.toString()};\noverride o_high : ${scalarTy.toString()};\nfn foo() {\n  var x : ${type.toString()};\n  var v_low : ${type.toString()};\n  var v_high : ${type.toString()};\n  let tmp = smoothstep(${lowArg}, ${highArg}, x);\n}`;\n\n  const error = t.params.low >= t.params.high;\n  const shader_error =\n  error && t.params.lowStage === 'constant' && t.params.highStage === 'constant';\n  const pipeline_error =\n  t.params.in_shader &&\n  error &&\n  t.params.lowStage !== 'runtime' &&\n  t.params.highStage !== 'runtime';\n  t.expectCompileResult(!shader_error, wgsl);\n  if (!shader_error) {\n    const constants = {};\n    constants['o_low'] = t.params.low;\n    constants['o_high'] = t.params.high;\n    t.expectPipelineResult({\n      expectedResult: !pipeline_error,\n      code: wgsl,\n      constants,\n      reference: ['o_low', 'o_high'],\n      statements: t.params.in_shader ? ['foo();'] : []\n    });\n  }\n});\n\ng.test('argument_types').\ndesc(\n  `\nValidates that scalar and vector arguments are rejected by ${builtin}() if not float type or vecN<float type>\n`\n).\nparams((u) => u.combine('type', keysOf(kArgumentTypes))).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kArgumentTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type = kArgumentTypes[t.params.type];\n  const expectedResult = isConvertibleToFloatType(elementTypeOf(type));\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [type.create(0), type.create(1), type.create(2)],\n    'constant',\n    /* returnType */concreteTypeOf(type, [Type.f32])\n  );\n});\n\nconst kTests = {\n  valid: {\n    src: `_ = ${builtin}(0.0, 42.0, 0.5);`,\n    pass: true\n  },\n  alias: {\n    src: `_ = ${builtin}(f32_alias(0), f32_alias(42), f32_alias(0.5));`,\n    pass: true\n  },\n  bool: {\n    src: `_ = ${builtin}(false, false, false);`,\n    pass: false\n  },\n  i32: {\n    src: `_ = ${builtin}(1i, 2i, 1i);`,\n    pass: false\n  },\n  u32: {\n    src: `_ = ${builtin}(1u, 2u, 1u);`,\n    pass: false\n  },\n  f32: {\n    src: `_ = ${builtin}(1.0f, 2.0f, 1.0f);`,\n    pass: true\n  },\n  f16: {\n    src: `_ = ${builtin}(1h, 2h, 1h);`,\n    pass: true\n  },\n  mixed_aint_afloat: {\n    src: `_ = ${builtin}(1.0, 2, 1);`,\n    pass: true\n  },\n  mixed_f32_afloat: {\n    src: `_ = ${builtin}(1.0f, 2.0, 1.0);`,\n    pass: true\n  },\n  mixed_f16_afloat: {\n    src: `_ = ${builtin}(1.0h, 2.0, 1.0);`,\n    pass: true\n  },\n  vec_bool: {\n    src: `_ = ${builtin}(vec2<bool>(false, true), vec2<bool>(false, true), vec2<bool>(false, true));`,\n    pass: false\n  },\n  vec_i32: {\n    src: `_ = ${builtin}(vec2<i32>(1, 1), vec2<i32>(1, 1), vec2<i32>(1, 1));`,\n    pass: false\n  },\n  vec_u32: {\n    src: `_ = ${builtin}(vec2<u32>(1, 1), vec2<u32>(1, 1), vec2<u32>(1, 1));`,\n    pass: false\n  },\n  vec_f32: {\n    src: `_ = ${builtin}(vec2<f32>(0, 0), vec2<f32>(1, 1), vec2<f32>(1, 1));`,\n    pass: true\n  },\n  matrix: {\n    src: `_ = ${builtin}(mat2x2(1, 1, 1, 1), mat2x2(1, 1, 1, 1), mat2x2(1, 1, 1, 1));`,\n    pass: false\n  },\n  atomic: {\n    src: ` _ = ${builtin}(a, a, a);`,\n    pass: false\n  },\n  array: {\n    src: `var a: array<bool, 5>;\n            _ = ${builtin}(a, a, a);`,\n    pass: false\n  },\n  array_runtime: {\n    src: `_ = ${builtin}(k.arry, k.arry, k.arry);`,\n    pass: false\n  },\n  struct: {\n    src: `var a: A;\n            _ = ${builtin}(a, a, a);`,\n    pass: false\n  },\n  enumerant: {\n    src: `_ = ${builtin}(read_write, read_write, read_write);`,\n    pass: false\n  },\n  ptr: {\n    src: `var<function> a = 1.0;\n            let p: ptr<function, f32> = &a;\n            _ = ${builtin}(p, p, p);`,\n    pass: false\n  },\n  ptr_deref: {\n    src: `var<function> a = 1.0;\n            let p: ptr<function, f32> = &a;\n            _ = ${builtin}(*p, *p, *p);`,\n    pass: true\n  },\n  sampler: {\n    src: `_ = ${builtin}(s, s, s);`,\n    pass: false\n  },\n  texture: {\n    src: `_ = ${builtin}(t, t, t);`,\n    pass: false\n  },\n  no_args: {\n    src: `_ = ${builtin}();`,\n    pass: false\n  },\n  too_few_args: {\n    src: `_ = ${builtin}(1.0, 2.0);`,\n    pass: false\n  },\n  too_many_args: {\n    src: `_ = ${builtin}(1.0, 2.0, 3.0, 4.0);`,\n    pass: false\n  },\n\n  must_use: {\n    src: `${builtin}(1.0,2.0,3.0);`,\n    pass: false\n  }\n};\n\ng.test('arguments').\ndesc(`Test that ${builtin} is validated correctly when called with different arguments.`).\nparams((u) => u.combine('test', keysOf(kTests))).\nbeforeAllSubcases((t) => {\n  if (t.params.test.includes('f16')) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const src = kTests[t.params.test].src;\n  const enables = t.params.test.includes('f16') ? 'enable f16;' : '';\n  const code = `\n  ${enables}\n  alias f32_alias = f32;\n\n  @group(0) @binding(0) var s: sampler;\n  @group(0) @binding(1) var t: texture_2d<f32>;\n\n  var<workgroup> a: atomic<u32>;\n\n  struct A {\n    i: bool,\n  }\n  struct B {\n    arry: array<u32>,\n  }\n  @group(0) @binding(3) var<storage> k: B;\n\n  @vertex\n  fn main() -> @builtin(position) vec4<f32> {\n    ${src}\n    return vec4<f32>(.4, .2, .3, .1);\n  }`;\n  t.expectCompileResult(kTests[t.params.test].pass, code);\n});\n\ng.test('early_eval_errors').\ndesc('Validates that high must be greater than low').\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\nbeginSubcases().\ncombineWithParams([\n{ low: 1, high: 2 },\n{ low: 2, high: 1 },\n{ low: 1, high: 1 }]\n)\n).\nfn((t) => {\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    /* expectedResult */t.params.low < t.params.high,\n    [f32(t.params.low), f32(t.params.high), f32(0)],\n    t.params.stage\n  );\n});"],"mappings":"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","ignoreList":[]}