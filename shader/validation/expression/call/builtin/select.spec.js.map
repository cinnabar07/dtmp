{"version":3,"file":"select.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","concreteTypeOf","isConvertible","kAllScalarsAndVectors","scalarTypeOf","ShaderValidationTest","validateConstOrOverrideBuiltinEval","g","kArgumentTypes","test","desc","params","u","combine","beforeAllSubcases","t","type1","f16","type2","selectDeviceOrSkipTestCase","fn","returnType","undefined","create","bool","type","i32","kTests","valid","src","pass","alias","u32","f32","mixed_aint_afloat","mixed_i32_u32","vec_bool","vec2_bool_implicit","vec3_bool_implicit","vec_i32","vec_u32","vec_f32","vec_f16","matrix","atomic","array","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","no_args","too_few_args","too_many_args","use_it","use","expectCompileResult","includes","enables","code"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/select.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'select';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  concreteTypeOf,\n  isConvertible,\n  kAllScalarsAndVectors,\n  scalarTypeOf } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport { validateConstOrOverrideBuiltinEval } from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kArgumentTypes = objectsToRecord(kAllScalarsAndVectors);\n\ng.test('argument_types_1_and_2').\ndesc(\n  `\nValidates that scalar and vector arguments are not rejected by ${builtin}() for args 1 and 2\n`\n).\nparams((u) => u.combine('type1', keysOf(kArgumentTypes)).combine('type2', keysOf(kArgumentTypes))).\nbeforeAllSubcases((t) => {\n  if (\n  scalarTypeOf(kArgumentTypes[t.params.type1]) === Type.f16 ||\n  scalarTypeOf(kArgumentTypes[t.params.type2]) === Type.f16)\n  {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type1 = kArgumentTypes[t.params.type1];\n  const type2 = kArgumentTypes[t.params.type2];\n  // First and second arg must be the same or one convertible to the other.\n  // Note that we specify a concrete return type even if both args are abstract.\n  const returnType = isConvertible(type1, type2) ?\n  concreteTypeOf(type2) :\n  isConvertible(type2, type1) ?\n  concreteTypeOf(type1) :\n  undefined;\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    /* expectedResult */returnType !== undefined,\n    [type1.create(0), type2.create(0), Type.bool.create(0)],\n    'constant',\n    returnType\n  );\n});\n\ng.test('argument_types_3').\ndesc(\n  `\nValidates that third argument must be bool for ${builtin}()\n`\n).\nparams((u) => u.combine('type', keysOf(kArgumentTypes))).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kArgumentTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type = kArgumentTypes[t.params.type];\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    /* expectedResult */type === Type.bool,\n    [Type.i32.create(0), Type.i32.create(0), type.create(0)],\n    'constant',\n    /*return_type*/Type.i32\n  );\n});\n\nconst kTests = {\n  valid: {\n    src: `_ = ${builtin}(1, 2, true);`,\n    pass: true\n  },\n  alias: {\n    src: `_ = ${builtin}(i32_alias(1), i32_alias(2), bool_alias(true));`,\n    pass: true\n  },\n  bool: {\n    src: `_ = ${builtin}(false, false, true);`,\n    pass: true\n  },\n  i32: {\n    src: `_ = ${builtin}(1i, 1i, true);`,\n    pass: true\n  },\n  u32: {\n    src: `_ = ${builtin}(1u, 1u, true);`,\n    pass: true\n  },\n  f32: {\n    src: `_ = ${builtin}(1.0f, 1.0f, true);`,\n    pass: true\n  },\n  f16: {\n    src: `_ = ${builtin}(1.0h, 1.0h, true);`,\n    pass: true\n  },\n  mixed_aint_afloat: {\n    src: `_ = ${builtin}(1, 1.0, true);`,\n    pass: true\n  },\n  mixed_i32_u32: {\n    src: `_ = ${builtin}(1i, 1u, true);`,\n    pass: false\n  },\n  vec_bool: {\n    src: `_ = ${builtin}(vec2<bool>(false, true), vec2<bool>(false, true), true);`,\n    pass: true\n  },\n  vec2_bool_implicit: {\n    src: `_ = ${builtin}(vec2(false, true), vec2(false, true), true);`,\n    pass: true\n  },\n  vec3_bool_implicit: {\n    src: `_ = ${builtin}(vec3(false), vec3(true), true);`,\n    pass: true\n  },\n  vec_i32: {\n    src: `_ = ${builtin}(vec2<i32>(1, 1), vec2<i32>(1, 1), true);`,\n    pass: true\n  },\n  vec_u32: {\n    src: `_ = ${builtin}(vec2<u32>(1, 1), vec2<u32>(1, 1), true);`,\n    pass: true\n  },\n  vec_f32: {\n    src: `_ = ${builtin}(vec2<f32>(1, 1), vec2<f32>(1, 1), true);`,\n    pass: true\n  },\n  vec_f16: {\n    src: `_ = ${builtin}(vec2<f16>(1, 1), vec2<f16>(1, 1), true);`,\n    pass: true\n  },\n  matrix: {\n    src: `_ = ${builtin}(mat2x2(1, 1, 1, 1), mat2x2(1, 1, 1, 1), true);`,\n    pass: false\n  },\n  atomic: {\n    src: ` _ = ${builtin}(a, a, true);`,\n    pass: false\n  },\n  array: {\n    src: `var a: array<bool, 5>;\n            _ = ${builtin}(a, a, true);`,\n    pass: false\n  },\n  array_runtime: {\n    src: `_ = ${builtin}(k.arry, k.arry, true);`,\n    pass: false\n  },\n  struct: {\n    src: `var a: A;\n            _ = ${builtin}(a, a, true);`,\n    pass: false\n  },\n  enumerant: {\n    src: `_ = ${builtin}(read_write, read_write, true);`,\n    pass: false\n  },\n  ptr: {\n    src: `var<function> a = true;\n            let p: ptr<function, bool> = &a;\n            _ = ${builtin}(p, p, true);`,\n    pass: false\n  },\n  ptr_deref: {\n    src: `var<function> a = true;\n            let p: ptr<function, bool> = &a;\n            _ = ${builtin}(*p, *p, true);`,\n    pass: true\n  },\n  sampler: {\n    src: `_ = ${builtin}(s, s, true);`,\n    pass: false\n  },\n  texture: {\n    src: `_ = ${builtin}(t, t, true);`,\n    pass: false\n  },\n  no_args: {\n    src: `_ = ${builtin}();`,\n    pass: false\n  },\n  too_few_args: {\n    src: `_ = ${builtin}(1, true);`,\n    pass: false\n  },\n  too_many_args: {\n    src: `_ = ${builtin}(1, 1, 1, true);`,\n    pass: false\n  }\n};\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}(1, 2, true); }`);\n});\n\ng.test('arguments').\ndesc(`Test that ${builtin} is validated correctly.`).\nparams((u) => u.combine('test', keysOf(kTests))).\nbeforeAllSubcases((t) => {\n  if (t.params.test.includes('f16')) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const src = kTests[t.params.test].src;\n  const enables = t.params.test.includes('f16') ? 'enable f16;' : '';\n  const code = `\n  ${enables}\n  alias bool_alias = bool;\n  alias i32_alias = i32;\n\n  @group(0) @binding(0) var s: sampler;\n  @group(0) @binding(1) var t: texture_2d<f32>;\n\n  var<workgroup> a: atomic<u32>;\n\n  struct A {\n    i: bool,\n  }\n  struct B {\n    arry: array<u32>,\n  }\n  @group(0) @binding(3) var<storage> k: B;\n\n  @vertex\n  fn main() -> @builtin(position) vec4<f32> {\n    ${src}\n    return vec4<f32>(.4, .2, .3, .1);\n  }`;\n  t.expectCompileResult(kTests[t.params.test].pass, code);\n});"],"mappings":"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","ignoreList":[]}