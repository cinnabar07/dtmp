{"version":3,"file":"derivatives.spec.js","names":["description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kConcreteF16ScalarsAndVectors","scalarTypeOf","ShaderValidationTest","g","kDerivativeBuiltins","kEntryPoints","none","supportsDerivative","code","fragment","vertex","compute","fragment_and_compute","compute_without_call","test","specURL","desc","params","u","combine","fn","t","config","entry_point","call","expectCompileResult","kArgumentTypes","f32","mat2x2f","beforeAllSubcases","type","f16","selectDeviceOrSkipTestCase","toString","create","wgsl","use","func"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/derivatives.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for derivative builtins.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kConcreteF16ScalarsAndVectors,\n  scalarTypeOf } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kDerivativeBuiltins = [\n'dpdx',\n'dpdxCoarse',\n'dpdxFine',\n'dpdy',\n'dpdyCoarse',\n'dpdyFine',\n'fwidth',\n'fwidthCoarse',\n'fwidthFine'];\n\n\nconst kEntryPoints = {\n  none: { supportsDerivative: true, code: `` },\n  fragment: {\n    supportsDerivative: true,\n    code: `@fragment\nfn main() {\n  foo();\n}`\n  },\n  vertex: {\n    supportsDerivative: false,\n    code: `@vertex\nfn main() -> @builtin(position) vec4f {\n  foo();\n  return vec4f();\n}`\n  },\n  compute: {\n    supportsDerivative: false,\n    code: `@compute @workgroup_size(1)\nfn main() {\n  foo();\n}`\n  },\n  fragment_and_compute: {\n    supportsDerivative: false,\n    code: `@fragment\nfn main1() {\n  foo();\n}\n\n@compute @workgroup_size(1)\nfn main2() {\n  foo();\n}\n`\n  },\n  compute_without_call: {\n    supportsDerivative: true,\n    code: `@compute @workgroup_size(1)\nfn main() {\n}\n`\n  }\n};\n\ng.test('only_in_fragment').\nspecURL('https://www.w3.org/TR/WGSL/#derivative-builtin-functions').\ndesc(\n  `\nDerivative functions must only be used in the fragment shader stage.\n`\n).\nparams((u) =>\nu.combine('entry_point', keysOf(kEntryPoints)).combine('call', ['bar', ...kDerivativeBuiltins])\n).\nfn((t) => {\n  const config = kEntryPoints[t.params.entry_point];\n  const code = `\n${config.code}\nfn bar(f : f32) -> f32 { return f; }\n\nfn foo() {\n  _ = ${t.params.call}(1.0);\n}`;\n  t.expectCompileResult(t.params.call === 'bar' || config.supportsDerivative, code);\n});\n\n// The list of invalid argument types to test, with an f32 control case.\nconst kArgumentTypes = objectsToRecord([\nType.f32,\n...kConcreteIntegerScalarsAndVectors,\n...kConcreteF16ScalarsAndVectors,\nType.mat2x2f]\n);\n\ng.test('invalid_argument_types').\nspecURL('https://www.w3.org/TR/WGSL/#derivative-builtin-functions').\ndesc(\n  `\nDerivative builtins only accept f32 scalar and vector types.\n`\n).\nparams((u) =>\nu.combine('type', keysOf(kArgumentTypes)).combine('call', ['', ...kDerivativeBuiltins])\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(kArgumentTypes[t.params.type]) === Type.f16) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const type = kArgumentTypes[t.params.type];\n  const code = `\n${scalarTypeOf(kArgumentTypes[t.params.type]) === Type.f16 ? 'enable f16;' : ''}\n\nfn foo() {\n  let x: ${type.toString()} = ${t.params.call}(${type.create(1).wgsl()});\n}`;\n  t.expectCompileResult(kArgumentTypes[t.params.type] === Type.f32 || t.params.call === '', code);\n});\n\ng.test('must_use').\ndesc('Tests that the result must be used').\nparams((u) => u.combine('use', [true, false]).combine('func', kDerivativeBuiltins)).\nfn((t) => {\n  const code = `\n    fn foo() {\n      ${t.params.use ? '_ =' : ''} ${t.params.func}(1.0);\n    }`;\n  t.expectCompileResult(t.params.use, code);\n});"],"mappings":"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","ignoreList":[]}