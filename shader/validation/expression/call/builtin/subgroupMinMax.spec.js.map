{"version":3,"file":"subgroupMinMax.spec.js","names":["description","makeTestGroup","keysOf","objectsToRecord","Type","elementTypeOf","kAllScalarsAndVectors","isConvertible","ShaderValidationTest","g","kOps","test","desc","params","u","combine","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","wgsl","enable","op","expectCompileResult","kStages","constant","override","runtime","code","stage","must_use","kTypes","features","type","requiresF16","push","enables","create","eleType","bool","filter","retType","abstractInt","abstractFloat","paramType","toString","eleParamType","eleRetType","expect","i32","f32","compute","fragment","vertex","entry"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/subgroupMinMax.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for subgroupMin and subgroupMax.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  elementTypeOf,\n  kAllScalarsAndVectors,\n  isConvertible } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kOps = ['subgroupMin', 'subgroupMax'];\n\ng.test('requires_subgroups').\ndesc('Validates that the subgroups feature is required').\nparams((u) => u.combine('enable', [false, true]).combine('op', kOps)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn((t) => {\n  const wgsl = `\n${t.params.enable ? 'enable subgroups;' : ''}\nfn foo() {\n  _ = ${t.params.op}(0);\n}`;\n\n  t.expectCompileResult(t.params.enable, wgsl);\n});\n\nconst kStages = {\n  constant: (op) => {\n    return `\nenable subgroups;\n@compute @workgroup_size(16)\nfn main() {\n  const x = ${op}(0);\n}`;\n  },\n  override: (op) => {\n    return `\nenable subgroups\noverride o = ${op}(0);`;\n  },\n  runtime: (op) => {\n    return `\nenable subgroups;\n@compute @workgroup_size(16)\nfn main() {\n  let x = ${op}(0);\n}`;\n  }\n};\n\ng.test('early_eval').\ndesc('Ensures the builtin is not able to be compile time evaluated').\nparams((u) => u.combine('stage', keysOf(kStages)).combine('op', kOps)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn((t) => {\n  const code = kStages[t.params.stage](t.params.op);\n  t.expectCompileResult(t.params.stage === 'runtime', code);\n});\n\ng.test('must_use').\ndesc('Tests that the builtin has the @must_use attribute').\nparams((u) => u.combine('must_use', [true, false]).combine('op', kOps)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn((t) => {\n  const wgsl = `\nenable subgroups;\n@compute @workgroup_size(16)\nfn main() {\n  ${t.params.must_use ? '_ = ' : ''}${t.params.op}(0);\n}`;\n\n  t.expectCompileResult(t.params.must_use, wgsl);\n});\n\nconst kTypes = objectsToRecord(kAllScalarsAndVectors);\n\ng.test('data_type').\ndesc('Validates data parameter type').\nparams((u) => u.combine('type', keysOf(kTypes)).combine('op', kOps)).\nbeforeAllSubcases((t) => {\n  const features = ['subgroups'];\n  const type = kTypes[t.params.type];\n  if (type.requiresF16()) {\n    features.push('shader-f16');\n    features.push('subgroups-f16');\n  }\n  t.selectDeviceOrSkipTestCase(features);\n}).\nfn((t) => {\n  const type = kTypes[t.params.type];\n  let enables = `enable subgroups;\\n`;\n  if (type.requiresF16()) {\n    enables += `enable f16;\\nenable subgroups_f16;`;\n  }\n  const wgsl = `\n${enables}\n@compute @workgroup_size(1)\nfn main() {\n  _ = ${t.params.op}(${type.create(0).wgsl()});\n}`;\n\n  const eleType = elementTypeOf(type);\n  t.expectCompileResult(eleType !== Type.bool, wgsl);\n});\n\ng.test('return_type').\ndesc('Validates return type').\nparams((u) =>\nu.\ncombine('retType', keysOf(kTypes)).\nfilter((t) => {\n  const type = kTypes[t.retType];\n  const eleType = elementTypeOf(type);\n  return eleType !== Type.abstractInt && eleType !== Type.abstractFloat;\n}).\ncombine('op', kOps).\ncombine('paramType', keysOf(kTypes))\n).\nbeforeAllSubcases((t) => {\n  const features = ['subgroups'];\n  const retType = kTypes[t.params.retType];\n  const paramType = kTypes[t.params.paramType];\n  if (retType.requiresF16() || paramType.requiresF16()) {\n    features.push('shader-f16');\n    features.push('subgroups-f16');\n  }\n  t.selectDeviceOrSkipTestCase(features);\n}).\nfn((t) => {\n  const retType = kTypes[t.params.retType];\n  const paramType = kTypes[t.params.paramType];\n  let enables = `enable subgroups;\\n`;\n  if (retType.requiresF16() || paramType.requiresF16()) {\n    enables += `enable f16;\\nenable subgroups_f16;`;\n  }\n  const wgsl = `\n${enables}\n@compute @workgroup_size(1)\nfn main() {\n  let res : ${retType.toString()} = ${t.params.op}(${paramType.create(0).wgsl()});\n}`;\n\n  // Can't just use isConvertible since functions must concretize the parameter\n  // type before examining the whole statement.\n  const eleParamType = elementTypeOf(paramType);\n  const eleRetType = elementTypeOf(retType);\n  let expect = paramType === retType && eleRetType !== Type.bool;\n  if (eleParamType === Type.abstractInt) {\n    expect = eleRetType === Type.i32 && isConvertible(paramType, retType);\n  } else if (eleParamType === Type.abstractFloat) {\n    expect = eleRetType === Type.f32 && isConvertible(paramType, retType);\n  }\n  t.expectCompileResult(expect, wgsl);\n});\n\ng.test('stage').\ndesc('validates builtin is only usable in the correct stages').\nparams((u) => u.combine('stage', ['compute', 'fragment', 'vertex']).combine('op', kOps)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn((t) => {\n  const compute = `\n@compute @workgroup_size(1)\nfn main() {\n  foo();\n}`;\n\n  const fragment = `\n@fragment\nfn main() {\n  foo();\n}`;\n\n  const vertex = `\n@vertex\nfn main() -> @builtin(position) vec4f {\n  foo();\n  return vec4f();\n}`;\n\n  const entry = { compute, fragment, vertex }[t.params.stage];\n  const wgsl = `\nenable subgroups;\nfn foo() {\n  _ = ${t.params.op}(0);\n}\n\n${entry}\n`;\n\n  t.expectCompileResult(t.params.stage !== 'vertex', wgsl);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,kDAAkD,CAClF,SAASC,MAAM,EAAEC,eAAe,QAAQ,8CAA8C,CACtF;EACEC,IAAI;EACJC,aAAa;EACbC,qBAAqB;EACrBC,aAAa;AACf,mCAAmC;AACnC,SAASC,oBAAoB,QAAQ,oCAAoC;;AAEzE,OAAO,MAAMC,CAAC,GAAGR,aAAa,CAACO,oBAAoB,CAAC;;AAEpD,MAAME,IAAI,GAAG,CAAC,aAAa,EAAE,aAAa,CAAC;;AAE3CD,CAAC,CAACE,IAAI,CAAC,oBAAoB,CAAC;AAC5BC,IAAI,CAAC,kDAAkD,CAAC;AACxDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAACA,OAAO,CAAC,IAAI,EAAEL,IAAI,CAAC,CAAC;AACrEM,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvBA,CAAC,CAACC,0BAA0B,CAAC,WAAW,CAAC;AAC3C,CAAC,CAAC;AACFC,EAAE,CAAC,CAACF,CAAC,KAAK;EACR,MAAMG,IAAI,GAAG;AACf,EAAEH,CAAC,CAACJ,MAAM,CAACQ,MAAM,GAAG,mBAAmB,GAAG,EAAE;AAC5C;AACA,QAAQJ,CAAC,CAACJ,MAAM,CAACS,EAAE;AACnB,EAAE;;EAEAL,CAAC,CAACM,mBAAmB,CAACN,CAAC,CAACJ,MAAM,CAACQ,MAAM,EAAED,IAAI,CAAC;AAC9C,CAAC,CAAC;;AAEF,MAAMI,OAAO,GAAG;EACdC,QAAQ,EAAEA,CAACH,EAAE,KAAK;IAChB,OAAO;AACX;AACA;AACA;AACA,cAAcA,EAAE;AAChB,EAAE;EACA,CAAC;EACDI,QAAQ,EAAEA,CAACJ,EAAE,KAAK;IAChB,OAAO;AACX;AACA,eAAeA,EAAE,MAAM;EACrB,CAAC;EACDK,OAAO,EAAEA,CAACL,EAAE,KAAK;IACf,OAAO;AACX;AACA;AACA;AACA,YAAYA,EAAE;AACd,EAAE;EACA;AACF,CAAC;;AAEDb,CAAC,CAACE,IAAI,CAAC,YAAY,CAAC;AACpBC,IAAI,CAAC,8DAA8D,CAAC;AACpEC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,OAAO,EAAEb,MAAM,CAACsB,OAAO,CAAC,CAAC,CAACT,OAAO,CAAC,IAAI,EAAEL,IAAI,CAAC,CAAC;AACtEM,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvBA,CAAC,CAACC,0BAA0B,CAAC,WAAW,CAAC;AAC3C,CAAC,CAAC;AACFC,EAAE,CAAC,CAACF,CAAC,KAAK;EACR,MAAMW,IAAI,GAAGJ,OAAO,CAACP,CAAC,CAACJ,MAAM,CAACgB,KAAK,CAAC,CAACZ,CAAC,CAACJ,MAAM,CAACS,EAAE,CAAC;EACjDL,CAAC,CAACM,mBAAmB,CAACN,CAAC,CAACJ,MAAM,CAACgB,KAAK,KAAK,SAAS,EAAED,IAAI,CAAC;AAC3D,CAAC,CAAC;;AAEFnB,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC;AAClBC,IAAI,CAAC,oDAAoD,CAAC;AAC1DC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAACA,OAAO,CAAC,IAAI,EAAEL,IAAI,CAAC,CAAC;AACvEM,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvBA,CAAC,CAACC,0BAA0B,CAAC,WAAW,CAAC;AAC3C,CAAC,CAAC;AACFC,EAAE,CAAC,CAACF,CAAC,KAAK;EACR,MAAMG,IAAI,GAAG;AACf;AACA;AACA;AACA,IAAIH,CAAC,CAACJ,MAAM,CAACiB,QAAQ,GAAG,MAAM,GAAG,EAAE,GAAGb,CAAC,CAACJ,MAAM,CAACS,EAAE;AACjD,EAAE;;EAEAL,CAAC,CAACM,mBAAmB,CAACN,CAAC,CAACJ,MAAM,CAACiB,QAAQ,EAAEV,IAAI,CAAC;AAChD,CAAC,CAAC;;AAEF,MAAMW,MAAM,GAAG5B,eAAe,CAACG,qBAAqB,CAAC;;AAErDG,CAAC,CAACE,IAAI,CAAC,WAAW,CAAC;AACnBC,IAAI,CAAC,+BAA+B,CAAC;AACrCC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEb,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAChB,OAAO,CAAC,IAAI,EAAEL,IAAI,CAAC,CAAC;AACpEM,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvB,MAAMe,QAAQ,GAAG,CAAC,WAAW,CAAC;EAC9B,MAAMC,IAAI,GAAGF,MAAM,CAACd,CAAC,CAACJ,MAAM,CAACoB,IAAI,CAAC;EAClC,IAAIA,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;IACtBF,QAAQ,CAACG,IAAI,CAAC,YAAY,CAAC;IAC3BH,QAAQ,CAACG,IAAI,CAAC,eAAe,CAAC;EAChC;EACAlB,CAAC,CAACC,0BAA0B,CAACc,QAAQ,CAAC;AACxC,CAAC,CAAC;AACFb,EAAE,CAAC,CAACF,CAAC,KAAK;EACR,MAAMgB,IAAI,GAAGF,MAAM,CAACd,CAAC,CAACJ,MAAM,CAACoB,IAAI,CAAC;EAClC,IAAIG,OAAO,GAAG,qBAAqB;EACnC,IAAIH,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;IACtBE,OAAO,IAAI,oCAAoC;EACjD;EACA,MAAMhB,IAAI,GAAG;AACf,EAAEgB,OAAO;AACT;AACA;AACA,QAAQnB,CAAC,CAACJ,MAAM,CAACS,EAAE,IAAIW,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACjB,IAAI,CAAC,CAAC;AAC5C,EAAE;;EAEA,MAAMkB,OAAO,GAAGjC,aAAa,CAAC4B,IAAI,CAAC;EACnChB,CAAC,CAACM,mBAAmB,CAACe,OAAO,KAAKlC,IAAI,CAACmC,IAAI,EAAEnB,IAAI,CAAC;AACpD,CAAC,CAAC;;AAEFX,CAAC,CAACE,IAAI,CAAC,aAAa,CAAC;AACrBC,IAAI,CAAC,uBAAuB,CAAC;AAC7BC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,SAAS,EAAEb,MAAM,CAAC6B,MAAM,CAAC,CAAC;AAClCS,MAAM,CAAC,CAACvB,CAAC,KAAK;EACZ,MAAMgB,IAAI,GAAGF,MAAM,CAACd,CAAC,CAACwB,OAAO,CAAC;EAC9B,MAAMH,OAAO,GAAGjC,aAAa,CAAC4B,IAAI,CAAC;EACnC,OAAOK,OAAO,KAAKlC,IAAI,CAACsC,WAAW,IAAIJ,OAAO,KAAKlC,IAAI,CAACuC,aAAa;AACvE,CAAC,CAAC;AACF5B,OAAO,CAAC,IAAI,EAAEL,IAAI,CAAC;AACnBK,OAAO,CAAC,WAAW,EAAEb,MAAM,CAAC6B,MAAM,CAAC;AACnC,CAAC;AACDf,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvB,MAAMe,QAAQ,GAAG,CAAC,WAAW,CAAC;EAC9B,MAAMS,OAAO,GAAGV,MAAM,CAACd,CAAC,CAACJ,MAAM,CAAC4B,OAAO,CAAC;EACxC,MAAMG,SAAS,GAAGb,MAAM,CAACd,CAAC,CAACJ,MAAM,CAAC+B,SAAS,CAAC;EAC5C,IAAIH,OAAO,CAACP,WAAW,CAAC,CAAC,IAAIU,SAAS,CAACV,WAAW,CAAC,CAAC,EAAE;IACpDF,QAAQ,CAACG,IAAI,CAAC,YAAY,CAAC;IAC3BH,QAAQ,CAACG,IAAI,CAAC,eAAe,CAAC;EAChC;EACAlB,CAAC,CAACC,0BAA0B,CAACc,QAAQ,CAAC;AACxC,CAAC,CAAC;AACFb,EAAE,CAAC,CAACF,CAAC,KAAK;EACR,MAAMwB,OAAO,GAAGV,MAAM,CAACd,CAAC,CAACJ,MAAM,CAAC4B,OAAO,CAAC;EACxC,MAAMG,SAAS,GAAGb,MAAM,CAACd,CAAC,CAACJ,MAAM,CAAC+B,SAAS,CAAC;EAC5C,IAAIR,OAAO,GAAG,qBAAqB;EACnC,IAAIK,OAAO,CAACP,WAAW,CAAC,CAAC,IAAIU,SAAS,CAACV,WAAW,CAAC,CAAC,EAAE;IACpDE,OAAO,IAAI,oCAAoC;EACjD;EACA,MAAMhB,IAAI,GAAG;AACf,EAAEgB,OAAO;AACT;AACA;AACA,cAAcK,OAAO,CAACI,QAAQ,CAAC,CAAC,MAAM5B,CAAC,CAACJ,MAAM,CAACS,EAAE,IAAIsB,SAAS,CAACP,MAAM,CAAC,CAAC,CAAC,CAACjB,IAAI,CAAC,CAAC;AAC/E,EAAE;;EAEA;EACA;EACA,MAAM0B,YAAY,GAAGzC,aAAa,CAACuC,SAAS,CAAC;EAC7C,MAAMG,UAAU,GAAG1C,aAAa,CAACoC,OAAO,CAAC;EACzC,IAAIO,MAAM,GAAGJ,SAAS,KAAKH,OAAO,IAAIM,UAAU,KAAK3C,IAAI,CAACmC,IAAI;EAC9D,IAAIO,YAAY,KAAK1C,IAAI,CAACsC,WAAW,EAAE;IACrCM,MAAM,GAAGD,UAAU,KAAK3C,IAAI,CAAC6C,GAAG,IAAI1C,aAAa,CAACqC,SAAS,EAAEH,OAAO,CAAC;EACvE,CAAC,MAAM,IAAIK,YAAY,KAAK1C,IAAI,CAACuC,aAAa,EAAE;IAC9CK,MAAM,GAAGD,UAAU,KAAK3C,IAAI,CAAC8C,GAAG,IAAI3C,aAAa,CAACqC,SAAS,EAAEH,OAAO,CAAC;EACvE;EACAxB,CAAC,CAACM,mBAAmB,CAACyB,MAAM,EAAE5B,IAAI,CAAC;AACrC,CAAC,CAAC;;AAEFX,CAAC,CAACE,IAAI,CAAC,OAAO,CAAC;AACfC,IAAI,CAAC,wDAAwD,CAAC;AAC9DC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,CAACA,OAAO,CAAC,IAAI,EAAEL,IAAI,CAAC,CAAC;AACxFM,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvBA,CAAC,CAACC,0BAA0B,CAAC,WAAW,CAAC;AAC3C,CAAC,CAAC;AACFC,EAAE,CAAC,CAACF,CAAC,KAAK;EACR,MAAMkC,OAAO,GAAG;AAClB;AACA;AACA;AACA,EAAE;;EAEA,MAAMC,QAAQ,GAAG;AACnB;AACA;AACA;AACA,EAAE;;EAEA,MAAMC,MAAM,GAAG;AACjB;AACA;AACA;AACA;AACA,EAAE;;EAEA,MAAMC,KAAK,GAAG,EAAEH,OAAO,EAAEC,QAAQ,EAAEC,MAAM,CAAC,CAAC,CAACpC,CAAC,CAACJ,MAAM,CAACgB,KAAK,CAAC;EAC3D,MAAMT,IAAI,GAAG;AACf;AACA;AACA,QAAQH,CAAC,CAACJ,MAAM,CAACS,EAAE;AACnB;AACA;AACA,EAAEgC,KAAK;AACP,CAAC;;EAECrC,CAAC,CAACM,mBAAmB,CAACN,CAAC,CAACJ,MAAM,CAACgB,KAAK,KAAK,QAAQ,EAAET,IAAI,CAAC;AAC1D,CAAC,CAAC","ignoreList":[]}