{"version":3,"file":"reverseBits.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kFloatScalarsAndVectors","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","expectedResult","create","value","kFloatTypes","u32","kTests","valid","args","pass","no_parens","too_few_args","too_many_args","alias","bool","vec_bool","matrix","atomic","array","preamble","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","expectCompileResult","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/reverseBits.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/const builtin = 'reverseBits';export const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kFloatScalarsAndVectors } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval } from\n'./const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConcreteIntegerScalarsAndVectors);\n\ng.test('values').\ndesc(\n  `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n).\nparams((u) =>\nu.\ncombine('stage', kConstantAndOverrideStages).\ncombine('type', keysOf(kValuesTypes)).\nfilter((u) => stageSupportsType(u.stage, kValuesTypes[u.type])).\nbeginSubcases().\nexpand('value', (u) => fullRangeForType(kValuesTypes[u.type]))\n).\nfn((t) => {\n  const expectedResult = true; // reverseBits() should never error\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    expectedResult,\n    [kValuesTypes[t.params.type].create(t.params.value)],\n    t.params.stage\n  );\n});\n\n// u32 is included here to confirm that validation is failing due to a type issue and not something else.\nconst kFloatTypes = objectsToRecord([Type.u32, ...kFloatScalarsAndVectors]);\n\ng.test('float_argument').\ndesc(\n  `\nValidates that float arguments are rejected by ${builtin}()\n`\n).\nparams((u) => u.combine('type', keysOf(kFloatTypes))).\nfn((t) => {\n  const type = kFloatTypes[t.params.type];\n  validateConstOrOverrideBuiltinEval(\n    t,\n    builtin,\n    /* expectedResult */type === Type.u32,\n    [type.create(0)],\n    'constant'\n  );\n});\n\nconst kTests =\n\n\n\n\n\n\n\n\n{\n  valid: {\n    args: '(1u)',\n    pass: true\n  },\n  // Number of arguments.\n  no_parens: {\n    args: '',\n    pass: false\n  },\n  too_few_args: {\n    args: '()',\n    pass: false\n  },\n  too_many_args: {\n    args: '(1u,2u)',\n    pass: false\n  },\n  // Arguments types (only 1 argument for this builtin).\n  alias: {\n    args: '(u32_alias(1))',\n    pass: true\n  },\n  bool: {\n    args: '(false)',\n    pass: false\n  },\n  vec_bool: {\n    args: '(vec2<bool>(false,true))',\n    pass: false\n  },\n  matrix: {\n    args: '(mat2x2(1,1,1,1))',\n    pass: false\n  },\n  atomic: {\n    args: '(a)',\n    pass: false\n  },\n  array: {\n    preamble: 'var arry: array<u32, 5>;',\n    args: '(arry)',\n    pass: false\n  },\n  array_runtime: {\n    args: '(k.arry)',\n    pass: false\n  },\n  struct: {\n    preamble: 'var x: A;',\n    args: '(x)',\n    pass: false\n  },\n  enumerant: {\n    args: '(read_write)',\n    pass: false\n  },\n  ptr: {\n    preamble: `var<function> f = 1u;\n               let p: ptr<function, u32> = &f;`,\n    args: '(p)',\n    pass: false\n  },\n  ptr_deref: {\n    preamble: `var<function> f = 1u;\n               let p: ptr<function, u32> = &f;`,\n    args: '(*p)',\n    pass: true\n  },\n  sampler: {\n    args: '(s)',\n    pass: false\n  },\n  texture: {\n    args: '(t)',\n    pass: false\n  }\n};\n\ng.test('arguments').\ndesc(`Test compilation validation of ${builtin} with variously shaped and typed arguments`).\nparams((u) => u.combine('test', keysOf(kTests))).\nfn((t) => {\n  const test = kTests[t.params.test];\n  t.expectCompileResult(\n    test.pass,\n    `alias u32_alias = u32;\n\n      @group(0) @binding(0) var s: sampler;\n      @group(0) @binding(1) var t: texture_2d<f32>;\n\n      var<workgroup> a: atomic<u32>;\n\n      struct A {\n        i: u32,\n      }\n      struct B {\n        arry: array<u32>,\n      }\n      @group(0) @binding(3) var<storage> k: B;\n\n\n      @vertex\n      fn main() -> @builtin(position) vec4<f32> {\n        ${test.preamble ? test.preamble : ''}\n        _ = ${builtin}${test.args};\n        return vec4<f32>(.4, .2, .3, .1);\n      }`\n  );\n});\n\ng.test('must_use').\ndesc(`Result of ${builtin} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}(1u); }`);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,MAAMA,OAAO,GAAG,aAAa,CAAC,OAAO,MAAMC,WAAW,GAAG;AAC5D,2BAA2BD,OAAO;AAClC,CAAC,CACD,SAASE,aAAa,QAAQ,kDAAkD,CAChF,SAASC,MAAM,EAAEC,eAAe,QAAQ,8CAA8C;AACtF;EACEC,IAAI;EACJC,iCAAiC;EACjCC,uBAAuB;AACzB,mCAAmC;AACnC,SAASC,oBAAoB,QAAQ,oCAAoC;;AAEzE;EACEC,gBAAgB;EAChBC,0BAA0B;EAC1BC,iBAAiB;EACjBC,kCAAkC;AACpC,gCAAgC;;AAEhC,OAAO,MAAMC,CAAC,GAAGX,aAAa,CAACM,oBAAoB,CAAC;;AAEpD,MAAMM,YAAY,GAAGV,eAAe,CAACE,iCAAiC,CAAC;;AAEvEO,CAAC,CAACE,IAAI,CAAC,QAAQ,CAAC;AAChBC,IAAI;EACF;AACF,gEAAgEhB,OAAO;AACvE;AACA,CAAC;AACDiB,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,OAAO,EAAET,0BAA0B,CAAC;AAC5CS,OAAO,CAAC,MAAM,EAAEhB,MAAM,CAACW,YAAY,CAAC,CAAC;AACrCM,MAAM,CAAC,CAACF,CAAC,KAAKP,iBAAiB,CAACO,CAAC,CAACG,KAAK,EAAEP,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;AAC/DC,aAAa,CAAC,CAAC;AACfC,MAAM,CAAC,OAAO,EAAE,CAACN,CAAC,KAAKT,gBAAgB,CAACK,YAAY,CAACI,CAAC,CAACI,IAAI,CAAC,CAAC;AAC7D,CAAC;AACDG,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAMC,cAAc,GAAG,IAAI,CAAC,CAAC;EAC7Bf,kCAAkC;IAChCc,CAAC;IACD1B,OAAO;IACP2B,cAAc;IACd,CAACb,YAAY,CAACY,CAAC,CAACT,MAAM,CAACK,IAAI,CAAC,CAACM,MAAM,CAACF,CAAC,CAACT,MAAM,CAACY,KAAK,CAAC,CAAC;IACpDH,CAAC,CAACT,MAAM,CAACI;EACX,CAAC;AACH,CAAC,CAAC;;AAEF;AACA,MAAMS,WAAW,GAAG1B,eAAe,CAAC,CAACC,IAAI,CAAC0B,GAAG,EAAE,GAAGxB,uBAAuB,CAAC,CAAC;;AAE3EM,CAAC,CAACE,IAAI,CAAC,gBAAgB,CAAC;AACxBC,IAAI;EACF;AACF,iDAAiDhB,OAAO;AACxD;AACA,CAAC;AACDiB,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEhB,MAAM,CAAC2B,WAAW,CAAC,CAAC,CAAC;AACrDL,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAMJ,IAAI,GAAGQ,WAAW,CAACJ,CAAC,CAACT,MAAM,CAACK,IAAI,CAAC;EACvCV,kCAAkC;IAChCc,CAAC;IACD1B,OAAO;IACP,oBAAoBsB,IAAI,KAAKjB,IAAI,CAAC0B,GAAG;IACrC,CAACT,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;AACH,CAAC,CAAC;;AAEF,MAAMI,MAAM;;;;;;;;;AASZ;EACEC,KAAK,EAAE;IACLC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;EACR,CAAC;EACD;EACAC,SAAS,EAAE;IACTF,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACR,CAAC;EACDE,YAAY,EAAE;IACZH,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC;EACDG,aAAa,EAAE;IACbJ,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;EACD;EACAI,KAAK,EAAE;IACLL,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAE;EACR,CAAC;EACDK,IAAI,EAAE;IACJN,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC;EACDM,QAAQ,EAAE;IACRP,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAE;EACR,CAAC;EACDO,MAAM,EAAE;IACNR,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAE;EACR,CAAC;EACDQ,MAAM,EAAE;IACNT,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC;EACDS,KAAK,EAAE;IACLC,QAAQ,EAAE,0BAA0B;IACpCX,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACR,CAAC;EACDW,aAAa,EAAE;IACbZ,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACR,CAAC;EACDY,MAAM,EAAE;IACNF,QAAQ,EAAE,WAAW;IACrBX,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC;EACDa,SAAS,EAAE;IACTd,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACR,CAAC;EACDc,GAAG,EAAE;IACHJ,QAAQ,EAAE;AACd,+CAA+C;IAC3CX,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC;EACDe,SAAS,EAAE;IACTL,QAAQ,EAAE;AACd,+CAA+C;IAC3CX,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;EACR,CAAC;EACDgB,OAAO,EAAE;IACPjB,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC;EACDiB,OAAO,EAAE;IACPlB,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR;AACF,CAAC;;AAEDtB,CAAC,CAACE,IAAI,CAAC,WAAW,CAAC;AACnBC,IAAI,CAAC,kCAAkChB,OAAO,4CAA4C,CAAC;AAC3FiB,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEhB,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC;AAChDP,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAMX,IAAI,GAAGiB,MAAM,CAACN,CAAC,CAACT,MAAM,CAACF,IAAI,CAAC;EAClCW,CAAC,CAAC2B,mBAAmB;IACnBtC,IAAI,CAACoB,IAAI;IACT;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUpB,IAAI,CAAC8B,QAAQ,GAAG9B,IAAI,CAAC8B,QAAQ,GAAG,EAAE;AAC5C,cAAc7C,OAAO,GAAGe,IAAI,CAACmB,IAAI;AACjC;AACA;EACE,CAAC;AACH,CAAC,CAAC;;AAEFrB,CAAC,CAACE,IAAI,CAAC,UAAU,CAAC;AAClBC,IAAI,CAAC,aAAahB,OAAO,eAAe,CAAC;AACzCiB,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9CM,EAAE,CAAC,CAACC,CAAC,KAAK;EACR,MAAM4B,MAAM,GAAG5B,CAAC,CAACT,MAAM,CAACsC,GAAG,GAAG,MAAM,GAAG,EAAE;EACzC7B,CAAC,CAAC2B,mBAAmB,CAAC3B,CAAC,CAACT,MAAM,CAACsC,GAAG,EAAE,YAAYD,MAAM,GAAGtD,OAAO,SAAS,CAAC;AAC5E,CAAC,CAAC","ignoreList":[]}