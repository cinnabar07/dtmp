{"version":3,"file":"dot4U8Packed.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","kFeature","kFn","kArgCases","good","bad_0args","bad_1args","bad_3args","bad_0i32","bad_0f32","bad_0bool","bad_0vec2u","bad_1i32","bad_1f32","bad_1bool","bad_1vec2u","bad_bool_bool","bad_bool2_bool2","bad_0array","bad_0struct","kGoodArgs","g","test","desc","params","u","combine","fn","t","skipIfLanguageFeatureSupported","preamble","requires","code","expectCompileResult","skipIfLanguageFeatureNotSupported","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/dot4U8Packed.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validate dot4U8Packed`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nconst kFeature = 'packed_4x8_integer_dot_product';\nconst kFn = 'dot4U8Packed';\nconst kArgCases = {\n  good: '(1u,2u)',\n  bad_0args: '()',\n  bad_1args: '(1u)',\n  bad_3args: '(1u,2u,3u)',\n  bad_0i32: '(1i,2u)',\n  bad_0f32: '(1f,2u)',\n  bad_0bool: '(false,2u)',\n  bad_0vec2u: '(vec2u(),2u)',\n  bad_1i32: '(1u,2i)',\n  bad_1f32: '(1u,2f)',\n  bad_1bool: '(1u,true)',\n  bad_1vec2u: '(1u,vec2u())',\n  bad_bool_bool: '(false,true)',\n  bad_bool2_bool2: '(vec2<bool>(),vec2(false,true))',\n  bad_0array: '(array(1))',\n  bad_0struct: '(modf(1.1))'\n};\nconst kGoodArgs = kArgCases['good'];\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('unsupported').\ndesc(`Test absence of ${kFn} when ${kFeature} is not supported.`).\nparams((u) => u.combine('requires', [false, true])).\nfn((t) => {\n  t.skipIfLanguageFeatureSupported(kFeature);\n  const preamble = t.params.requires ? `requires ${kFeature}; ` : '';\n  const code = `${preamble}const c = ${kFn}${kGoodArgs};`;\n  t.expectCompileResult(false, code);\n});\n\ng.test('supported').\ndesc(`Test presence of ${kFn} when ${kFeature} is supported.`).\nparams((u) => u.combine('requires', [false, true])).\nfn((t) => {\n  t.skipIfLanguageFeatureNotSupported(kFeature);\n  const preamble = t.params.requires ? `requires ${kFeature}; ` : '';\n  const code = `${preamble}const c = ${kFn}${kGoodArgs};`;\n  t.expectCompileResult(true, code);\n});\n\ng.test('args').\ndesc(`Test compilation failure of ${kFn} with various numbers of and types of arguments`).\nparams((u) => u.combine('arg', keysOf(kArgCases))).\nfn((t) => {\n  t.skipIfLanguageFeatureNotSupported(kFeature);\n  t.expectCompileResult(t.params.arg === 'good', `const c = ${kFn}${kArgCases[t.params.arg]};`);\n});\n\ng.test('must_use').\ndesc(`Result of ${kFn} must be used`).\nparams((u) => u.combine('use', [true, false])).\nfn((t) => {\n  t.skipIfLanguageFeatureNotSupported(kFeature);\n  const use_it = t.params.use ? '_ = ' : '';\n  t.expectCompileResult(t.params.use, `fn f() { ${use_it}${kFn}${kGoodArgs}; }`);\n});"],"mappings":"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","ignoreList":[]}