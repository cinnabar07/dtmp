{"version":3,"file":"value_constructor.spec.js","names":["description","makeTestGroup","keysOf","isAbstractType","isConvertible","isFloatType","MatrixType","ScalarType","scalarTypeOf","Type","VectorType","ShaderValidationTest","g","kScalarTypes","test","desc","params","u","combine","beforeAllSubcases","t","type","selectDeviceOrSkipTestCase","fn","enable","code","expectCompileResult","value_type","includes","beginSubcases","abstract","param","decl","size","comparison","i","ty","eleTy","ele_type","requiresF16","eleValue","create","wgsl","valueCall","expect","width","decl_type","declTy","valueTy","valueVecTy","value_size","decl_size","ctor","full_type","num_eles","v","call","cols","rows","c","r","t1","type1","t2","type2","m2","c2","r2","c1","r1","vecTy2","values","kArrayCases","i32","element","valid","f32","u32","valid_array","invalid_rta","invalid_override_array","valid_struct","invalid_struct","invalid_atomic","testcase","case","kStructCases","name","decls","f32x2","vec3u","runtime_array","atomic","struct","many_members","kConstructors","u32_0","i32_0","bool_0","f32_0","f16_0","vec2_0","vec3_0","vec4_0","mat2x2_0","mat2x3_0","mat2x4_0","mat3x2_0","mat3x3_0","mat3x4_0","mat4x2_0_f16","mat4x3_0_f16","mat4x4_0_f16","S_0","array_0","bool","f16","vec2f","vec3_f16","vec4","mat2x2","mat2x3","mat2x4","mat3x2_f16","mat3x3_f16","mat3x4_f16","mat4x2","mat4x3","mat4x4","S","array_abs","array","use","expandWithParams","cases","compTy","push","numEles","index","value","compParams","stage","shader_error"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/value_constructor.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for constructor built-in functions.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport {\n  isAbstractType,\n  isConvertible,\n  isFloatType,\n  MatrixType,\n  ScalarType,\n  scalarTypeOf,\n  Type,\n  VectorType } from\n'../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kScalarTypes = ['bool', 'i32', 'u32', 'f32', 'f16'];\n\ng.test('scalar_zero_value').\ndesc('Tests zero value scalar constructors').\nparams((u) => u.combine('type', kScalarTypes)).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n  const code = `${enable}\n    const x : ${t.params.type} = ${t.params.type}();\n    const_assert x == ${t.params.type}(0);`;\n  t.expectCompileResult(true, code);\n});\n\ng.test('scalar_value').\ndesc('Tests scalar value constructors').\nparams((u) =>\nu.\ncombine('type', kScalarTypes).\ncombine('value_type', [...kScalarTypes, 'vec2u', 'S', 'array<u32, 2>'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16' || t.params.value_type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const enable = t.params.type === 'f16' || t.params.value_type === 'f16' ? 'enable f16;' : '';\n  const code = `${enable}\n    const x : ${t.params.type} = ${t.params.type}(${t.params.value_type}());`;\n  t.expectCompileResult(kScalarTypes.includes(t.params.value_type), code);\n});\n\ng.test('vector_zero_value').\ndesc('Tests zero value vector constructors').\nparams((u) =>\nu.\ncombine('type', [...kScalarTypes, 'abstract-int', 'abstract-float']).\nbeginSubcases().\ncombine('size', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n  const param = abstract ? '' : `<${t.params.type}>`;\n  const decl = `vec${t.params.size}${param}`;\n  const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n  const comparison = abstract ? '0' : `${t.params.type}(0)`;\n  let code = `${enable}\n    const x ${abstract ? '' : `: ${decl}`} = ${decl}();\\n`;\n  for (let i = 0; i < t.params.size; i++) {\n    code += `const_assert x[${i}] == ${comparison};\\n`;\n  }\n  t.expectCompileResult(true, code);\n});\n\ng.test('vector_splat').\ndesc('Test vector splat constructors').\nparams((u) =>\nu.\ncombine('type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float']\n).\ncombine('ele_type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float',\n'mat2x2f',\n'mat3x3h',\n'vec2i',\n'vec3f']\n).\nbeginSubcases().\ncombine('size', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  const ty = Type[t.params.type];\n  const eleTy = Type[t.params.ele_type];\n  if (ty.requiresF16() || eleTy.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const eleTy = Type[t.params.ele_type];\n  const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n  const param = abstract ? '' : `<${t.params.type}>`;\n  const decl = `vec${t.params.size}${param}`;\n  const enable = t.params.type === 'f16' || t.params.ele_type === 'f16' ? 'enable f16;' : '';\n  const eleValue = eleTy.create(1).wgsl();\n  const valueCall = decl;\n  const code = `${enable}\n    const x ${abstract ? '' : `: ${decl}`} = ${valueCall}(${eleValue});`;\n  const ty = Type[t.params.type];\n  const expect =\n  eleTy instanceof ScalarType && (isConvertible(eleTy, ty) || isAbstractType(ty)) ||\n  eleTy instanceof VectorType && eleTy.width === t.params.size;\n  t.expectCompileResult(expect, code);\n});\n\ng.test('vector_copy').\ndesc('Test vector copy constructors').\nparams((u) =>\nu.\ncombine('decl_type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float']\n).\ncombine('value_type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float']\n).\nbeginSubcases().\ncombine('decl_size', [2, 3, 4]).\ncombine('value_size', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  const ty = Type[t.params.decl_type];\n  const eleTy = Type[t.params.value_type];\n  if (ty.requiresF16() || eleTy.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const declTy = Type[t.params.decl_type];\n  const valueTy = Type[t.params.value_type];\n  const valueVecTy = Type['vec'](t.params.value_size, valueTy);\n  const enable = declTy.requiresF16() || valueTy.requiresF16() ? 'enable f16;' : '';\n  const decl = `vec${t.params.decl_size}<${t.params.decl_type}>`;\n  const ctor = `vec${t.params.decl_size}${\n  isAbstractType(declTy) ? '' : `<${t.params.decl_type}>`}`;\n\n  const code = `${enable}\n    const x ${isAbstractType(declTy) ? '' : `: ${decl}`} = ${ctor}(${valueVecTy.\n  create(1).\n  wgsl()});`;\n\n  t.expectCompileResult(t.params.decl_size === t.params.value_size, code);\n});\n\ng.test('vector_elementwise').\ndesc('Test element-wise vector constructors').\nparams((u) =>\nu.\ncombine('type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float']\n).\ncombine('ele_type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float',\n'mat2x2f',\n'mat3x3h',\n'vec2i',\n'vec3f']\n).\nbeginSubcases().\ncombine('size', [2, 3, 4]).\ncombine('num_eles', [2, 3, 4, 5]).\ncombine('full_type', [true, false])\n).\nbeforeAllSubcases((t) => {\n  const ty = Type[t.params.type];\n  const eleTy = Type[t.params.ele_type];\n  if (ty.requiresF16() || eleTy.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const eleTy = Type[t.params.ele_type];\n  const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n  const param = abstract ? '' : `<${t.params.type}>`;\n  const decl = `vec${t.params.size}${param}`;\n  const enable = t.params.type === 'f16' || t.params.ele_type === 'f16' ? 'enable f16;' : '';\n  const eleValue = eleTy.create(1).wgsl();\n  const valueCall = t.params.full_type ? decl : `vec${t.params.size}`;\n  let code = `${enable}\n    const x ${abstract ? '' : `: ${decl}`} = ${valueCall}(`;\n  for (let i = 0; i < t.params.num_eles; i++) {\n    code += `${eleValue},`;\n  }\n  code += `);`;\n  const ty = Type[t.params.type];\n  // WGSL requires:\n  // * number of elements match\n  // * element types match (or auto convert, vector special case)\n  //   * abstract decl works because it is untyped and inferred as a different type\n  const num_eles =\n  eleTy instanceof VectorType ? t.params.num_eles * eleTy.width : t.params.num_eles;\n  const expect =\n  !(eleTy instanceof MatrixType) &&\n  t.params.size === num_eles && (\n  isConvertible(scalarTypeOf(eleTy), ty) ||\n  t.params.type === 'abstract-int' ||\n  t.params.type === 'abstract-float');\n  t.expectCompileResult(expect, code);\n});\n\ng.test('vector_mixed').\ndesc('Test vector constructors with mixed elements and vectors').\nparams((u) =>\nu.\ncombine('type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float']\n).\ncombine('ele_type', [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'abstract-int',\n'abstract-float']\n).\nbeginSubcases().\ncombine('size', [3, 4]).\ncombine('num_eles', [3, 4, 5]).\ncombine('full_type', [true, false])\n).\nbeforeAllSubcases((t) => {\n  const ty = Type[t.params.type];\n  const eleTy = Type[t.params.ele_type];\n  if (ty.requiresF16() || eleTy.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const eleTy = Type[t.params.ele_type];\n  const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n  const param = abstract ? '' : `<${t.params.type}>`;\n  const decl = `vec${t.params.size}${param}`;\n  const enable = t.params.type === 'f16' || t.params.ele_type === 'f16' ? 'enable f16;' : '';\n  const v = eleTy.create(1).wgsl();\n  const call = t.params.full_type ? decl : `vec${t.params.size}`;\n  let code = `${enable}\\n`;\n\n  switch (t.params.num_eles) {\n    case 3:\n      code += `const x1 ${abstract ? '' : `: ${decl}`} = ${call}(${v}, vec2(${v}, ${v}));\\n`;\n      code += `const x2 ${abstract ? '' : `: ${decl}`} = ${call}(vec2(${v}, ${v}), ${v});\\n`;\n      break;\n    case 4:\n      code += `const x1 ${\n      abstract ? '' : `: ${decl}`} = ${\n      call}(${v}, vec2(${v}, ${v}), ${v});\\n`;\n      code += `const x2 ${\n      abstract ? '' : `: ${decl}`} = ${\n      call}(${v}, ${v}, vec2(${v}, ${v}));\\n`;\n      code += `const x3 ${\n      abstract ? '' : `: ${decl}`} = ${\n      call}(vec2(${v}, ${v}), ${v}, ${v});\\n`;\n      code += `const x4 ${\n      abstract ? '' : `: ${decl}`} = ${\n      call}(vec3(${v}, ${v}, ${v}), ${v});\\n`;\n      code += `const x5 ${\n      abstract ? '' : `: ${decl}`} = ${\n      call}(${v}, vec3(${v}, ${v}, ${v}));\\n`;\n      break;\n    case 5:\n      // This case is always invalid so try a few only.\n      code += `const x1 ${\n      abstract ? '' : `: ${decl}`} = ${\n      call}(${v}, vec3(${v}, ${v}), ${v});\\n`;\n      code += `const x1 ${abstract ? '' : `: ${decl}`} = ${call}(${v}, vec4(${v}}), ${v});\\n`;\n      break;\n  }\n  const ty = Type[t.params.type];\n  // WGSL requires:\n  // * number of elements match (in total, not parameters)\n  // * element types match (or auto convert)\n  //   * abstract decl works because it is untyped and inferred as a different type\n  const expect =\n  t.params.size === t.params.num_eles && (\n  isConvertible(eleTy, ty) ||\n  t.params.type === 'abstract-int' ||\n  t.params.type === 'abstract-float');\n  t.expectCompileResult(expect, code);\n});\n\ng.test('matrix_zero_value').\ndesc('Tests zero value matrix constructors').\nparams((u) =>\nu.\ncombine('type', ['f32', 'f16']).\nbeginSubcases().\ncombine('rows', [2, 3, 4]).\ncombine('cols', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const decl = `mat${t.params.cols}x${t.params.rows}<${t.params.type}>`;\n  const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n  let code = `${enable}\n    const x : ${decl} = ${decl}();\\n`;\n  for (let c = 0; c < t.params.cols; c++) {\n    for (let r = 0; r < t.params.rows; r++) {\n      code += `const_assert x[${c}][${r}] == ${t.params.type}(0);\\n`;\n    }\n  }\n  t.expectCompileResult(true, code);\n});\n\ng.test('matrix_copy').\ndesc('Test matrix copy constructors').\nparams((u) =>\nu.\ncombine('type1', ['f16', 'f32', 'abstract-float']).\ncombine('type2', ['f16', 'f32', 'abstract-float']).\nbeginSubcases().\ncombine('c1', [2, 3, 4]).\ncombine('r1', [2, 3, 4]).\ncombine('c2', [2, 3, 4]).\ncombine('r2', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  const t1 = Type[t.params.type1];\n  const t2 = Type[t.params.type2];\n  if (t1.requiresF16() || t2.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const t1 = Type[t.params.type1];\n  const t2 = Type[t.params.type2];\n  const m2 = Type['mat'](t.params.c2, t.params.r2, t2);\n  const enable = t1.requiresF16() || t2.requiresF16() ? 'enable f16;' : '';\n  const decl = `mat${t.params.c1}x${t.params.r1}<${t.params.type1}>`;\n  const call = `mat${t.params.c1}x${t.params.r1}${\n  isAbstractType(t1) ? '' : `<${t.params.type1}>`}`;\n\n  const code = `${enable}\n    const m ${isAbstractType(t1) ? '' : `: ${decl}`} = ${call}(${m2.create(0).wgsl()});`;\n  t.expectCompileResult(t.params.c1 === t.params.c2 && t.params.r1 === t.params.r2, code);\n});\n\ng.test('matrix_column').\ndesc('Test matrix column constructors').\nparams((u) =>\nu.\ncombine('type1', ['f16', 'f32', 'abstract-float']).\ncombine('type2', ['f16', 'f32', 'abstract-float', 'i32', 'u32', 'bool']).\nbeginSubcases().\ncombine('c1', [2, 3, 4]).\ncombine('r1', [2, 3, 4]).\ncombine('c2', [2, 3, 4]).\ncombine('r2', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  const t1 = Type[t.params.type1];\n  const t2 = Type[t.params.type2];\n  if (t1.requiresF16() || t2.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const t1 = Type[t.params.type1];\n  const t2 = Type[t.params.type2];\n  const enable = t1.requiresF16() || t2.requiresF16() ? 'enable f16;' : '';\n  const vecTy2 = Type['vec'](t.params.r2, t2);\n  let values = ``;\n  for (let i = 0; i < t.params.c2; i++) {\n    values += `${vecTy2.create(1).wgsl()},`;\n  }\n  const decl = `mat${t.params.c1}x${t.params.r1}<${t.params.type1}>`;\n  const call = `mat${t.params.c1}x${t.params.r1}${\n  isAbstractType(t1) ? '' : `<${t.params.type1}>`}`;\n\n  const code = `${enable}\n    const m ${isAbstractType(t1) ? '' : `: ${decl}`} = ${call}(${values});`;\n  const expect =\n  isFloatType(t2) &&\n  t.params.c1 === t.params.c2 &&\n  t.params.r1 === t.params.r2 && (\n  t1 === t2 || isAbstractType(t1) || isAbstractType(t2));\n  t.expectCompileResult(expect, code);\n});\n\ng.test('matrix_elementwise').\ndesc('Test matrix element-wise constructors').\nparams((u) =>\nu.\ncombine('type1', ['f16', 'f32', 'abstract-float']).\ncombine('type2', ['f16', 'f32', 'abstract-float', 'i32', 'u32', 'bool']).\nbeginSubcases().\ncombine('c1', [2, 3, 4]).\ncombine('r1', [2, 3, 4]).\ncombine('c2', [2, 3, 4]).\ncombine('r2', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  const t1 = Type[t.params.type1];\n  const t2 = Type[t.params.type2];\n  if (t1.requiresF16() || t2.requiresF16()) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const t1 = Type[t.params.type1];\n  const t2 = Type[t.params.type2];\n  const enable = t1.requiresF16() || t2.requiresF16() ? 'enable f16;' : '';\n  let values = ``;\n  for (let i = 0; i < t.params.c2 * t.params.r2; i++) {\n    values += `${t2.create(1).wgsl()},`;\n  }\n  const decl = `mat${t.params.c1}x${t.params.r1}<${t.params.type1}>`;\n  const call = `mat${t.params.c1}x${t.params.r1}${\n  isAbstractType(t1) ? '' : `<${t.params.type1}>`}`;\n\n  const code = `${enable}\n    const m ${isAbstractType(t1) ? '' : `: ${decl}`} = ${call}(${values});`;\n  const expect =\n  isFloatType(t2) &&\n  t.params.c1 * t.params.r1 === t.params.c2 * t.params.r2 && (\n  t1 === t2 || isAbstractType(t1) || isAbstractType(t2));\n  t.expectCompileResult(expect, code);\n});\n\n\n\n\n\n\n\n\nconst kArrayCases = {\n  i32: {\n    element: 'i32',\n    size: 4,\n    valid: true,\n    values: '1,2,3,4'\n  },\n  f32: {\n    element: 'f32',\n    size: 1,\n    valid: true,\n    values: '0'\n  },\n  u32: {\n    element: 'u32',\n    size: 2,\n    valid: true,\n    values: '2,4'\n  },\n  valid_array: {\n    element: 'array<u32, 2>',\n    size: 2,\n    valid: true,\n    values: 'array(0,1), array(2,3)'\n  },\n  invalid_rta: {\n    element: 'u32',\n    size: '',\n    valid: false,\n    values: '0'\n  },\n  invalid_override_array: {\n    element: 'u32',\n    size: 'o',\n    valid: false,\n    values: '1'\n  },\n  valid_struct: {\n    element: 'valid_S',\n    size: 1,\n    valid: true,\n    values: 'valid_S(0)'\n  },\n  invalid_struct: {\n    element: 'invalid_S',\n    size: 1,\n    valid: false,\n    values: 'array(0)'\n  },\n  invalid_atomic: {\n    element: 'atomic<u32>',\n    size: 1,\n    valid: false,\n    values: '0'\n  }\n};\n\ng.test('array_zero_value').\ndesc('Tests zero value array constructors').\nparams((u) => u.combine('case', keysOf(kArrayCases))).\nfn((t) => {\n  const testcase = kArrayCases[t.params.case];\n  const decl = `array<${testcase.element}, ${testcase.size}>`;\n  const code = `override o : i32 = 1;\n    struct valid_S {\n      x : u32\n    }\n    struct invalid_S {\n      x : array<u32>\n    }\n    const x : ${decl} = ${decl}();`;\n  t.expectCompileResult(testcase.valid, code);\n});\n\ng.test('array_value').\ndesc('Tests array value constructor').\nparams((u) => u.combine('case', keysOf(kArrayCases))).\nfn((t) => {\n  const testcase = kArrayCases[t.params.case];\n  const decl = `array<${testcase.element}, ${testcase.size}>`;\n  const code = `override o : i32 = 1;\n    struct valid_S {\n      x : u32\n    }\n    struct invalid_S {\n      x : array<u32>\n    }\n    const x : ${decl} = ${decl}(${testcase.values});`;\n  t.expectCompileResult(testcase.valid, code);\n});\n\nconst kStructCases = {\n  i32: {\n    name: 'S',\n    decls: `struct S { x : u32 }`,\n    valid: true,\n    values: '0'\n  },\n  f32x2: {\n    name: 'S',\n    decls: `struct S { x : f32, y : f32 }`,\n    valid: true,\n    values: '0,1'\n  },\n  vec3u: {\n    name: 'S',\n    decls: `struct S { x : vec3u }`,\n    valid: true,\n    values: 'vec3()'\n  },\n  valid_array: {\n    name: 'S',\n    decls: `struct S { x : array<u32, 2> }`,\n    valid: true,\n    values: 'array(1,2)'\n  },\n  runtime_array: {\n    name: 'S',\n    decls: `struct S { x : array<u32> }`,\n    valid: false,\n    values: 'array(0)'\n  },\n  atomic: {\n    name: 'S',\n    decls: `struct S { x : atomic<u32> }`,\n    valid: false,\n    values: '0'\n  },\n  struct: {\n    name: 'S',\n    decls: `struct S {\n      x : T\n    }\n    struct T {\n      x : u32\n    }`,\n    valid: true,\n    values: 'T(0)'\n  },\n  many_members: {\n    name: 'S',\n    decls: `struct S {\n      a : bool,\n      b : u32,\n      c : i32,\n      d : vec4f,\n    }`,\n    valid: true,\n    values: 'false, 1u, 32i, vec4f(1.0f)'\n  }\n};\n\ng.test('struct_zero_value').\ndesc('Tests zero value struct constructors').\nparams((u) => u.combine('case', keysOf(kStructCases))).\nfn((t) => {\n  const testcase = kStructCases[t.params.case];\n  const code = `\n    ${testcase.decls}\n    const x : ${testcase.name} = ${testcase.name}();`;\n  t.expectCompileResult(testcase.valid, code);\n});\n\ng.test('struct_value').\ndesc('Tests struct value constructors').\nparams((u) => u.combine('case', keysOf(kStructCases))).\nfn((t) => {\n  const testcase = kStructCases[t.params.case];\n  const code = `\n    ${testcase.decls}\n    const x : ${testcase.name} = ${testcase.name}(${testcase.values});`;\n  t.expectCompileResult(testcase.valid, code);\n});\n\nconst kConstructors = {\n  u32_0: 'u32()',\n  i32_0: 'i32()',\n  bool_0: 'bool()',\n  f32_0: 'f32()',\n  f16_0: 'f16()',\n  vec2_0: 'vec2()',\n  vec3_0: 'vec3()',\n  vec4_0: 'vec4()',\n  mat2x2_0: 'mat2x2f()',\n  mat2x3_0: 'mat2x3f()',\n  mat2x4_0: 'mat2x4f()',\n  mat3x2_0: 'mat3x2f()',\n  mat3x3_0: 'mat3x3f()',\n  mat3x4_0: 'mat3x4f()',\n  mat4x2_0_f16: 'mat4x2h()',\n  mat4x3_0_f16: 'mat4x3h()',\n  mat4x4_0_f16: 'mat4x4h()',\n  S_0: 'S()',\n  array_0: 'array<u32, 4>()',\n  u32: 'u32(1)',\n  i32: 'i32(1)',\n  bool: 'bool(true)',\n  f32: 'f32(1)',\n  f16: 'f16(1)',\n  vec2f: 'vec2<f32>(1)',\n  vec3_f16: 'vec3<f16>(1)',\n  vec4: 'vec4(1)',\n  mat2x2: 'mat2x2f(1,1,1,1)',\n  mat2x3: 'mat2x3f(1,1,1,1,1,1)',\n  mat2x4: 'mat2x4f(1,1,1,1,1,1,1,1)',\n  mat3x2_f16: 'mat3x2<f16>(vec2h(),vec2h(),vec2h())',\n  mat3x3_f16: 'mat3x3<f16>(vec3h(),vec3h(),vec3h())',\n  mat3x4_f16: 'mat3x4<f16>(vec4h(),vec4h(),vec4h())',\n  mat4x2: 'mat4x2(vec2(),vec2(),vec2(),vec2())',\n  mat4x3: 'mat4x3(vec3(),vec3(),vec3(),vec3())',\n  mat4x4: 'mat4x4(vec4(),vec4(),vec4(),vec4())',\n  S: 'S(1,1)',\n  array_abs: 'array(1,2,3)',\n  array: 'array<u32, 4>(1,2,3,4)'\n};\n\ng.test('must_use').\ndesc('Tests that value constructors must be used').\nparams((u) => u.combine('ctor', keysOf(kConstructors)).combine('use', [true, false])).\nbeforeAllSubcases((t) => {\n  if (t.params.ctor.includes('f16')) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const code = `\n    ${t.params.ctor.includes('f16') ? 'enable f16;' : ''}\n    struct S {\n      x : u32,\n      y : f32,\n    }\n    fn foo() {\n      ${t.params.use ? '_ =' : ''} ${kConstructors[t.params.ctor]};\n    }`;\n  t.expectCompileResult(t.params.use, code);\n});\n\ng.test('partial_eval').\ndesc('Tests that mixed runtime and early eval expressions catch errors').\nparams((u) =>\nu.\ncombine('eleTy', ['i32', 'u32']).\ncombine('compTy', ['array', 'vec2', 'vec3', 'vec4', 'S']).\ncombine('stage', ['constant', 'runtime']).\nbeginSubcases().\nexpandWithParams((t) => {\n  const cases = [];\n  switch (t.compTy) {\n    case 'array':\n      cases.push({ numEles: 2, index: 0 });\n      cases.push({ numEles: 2, index: 1 });\n      cases.push({ numEles: 3, index: 0 });\n      cases.push({ numEles: 3, index: 1 });\n      cases.push({ numEles: 3, index: 2 });\n      break;\n    case 'vec2':\n      cases.push({ numEles: 2, index: 0 });\n      cases.push({ numEles: 2, index: 1 });\n      break;\n    case 'vec3':\n      cases.push({ numEles: 3, index: 0 });\n      cases.push({ numEles: 3, index: 1 });\n      cases.push({ numEles: 3, index: 2 });\n      break;\n    case 'vec4':\n      cases.push({ numEles: 4, index: 0 });\n      cases.push({ numEles: 4, index: 1 });\n      cases.push({ numEles: 4, index: 2 });\n      cases.push({ numEles: 4, index: 3 });\n      break;\n    case 'S':\n      cases.push({ numEles: 2, index: 0 });\n      cases.push({ numEles: 2, index: 1 });\n      break;\n  }\n  return cases;\n})\n).\nfn((t) => {\n  const eleTy = Type['abstract-int'];\n  const value = t.params.eleTy === 'i32' ? 0xfffffffff : -1;\n  let compParams = '';\n  for (let i = 0; i < t.params.numEles; i++) {\n    if (t.params.index === i) {\n      switch (t.params.stage) {\n        case 'constant':\n          compParams += `${eleTy.create(value).wgsl()}, `;\n          break;\n        case 'runtime':\n          compParams += `v, `;\n          break;\n      }\n    } else {\n      compParams += `v, `;\n    }\n  }\n  const wgsl = `\nstruct S {\n  x : ${t.params.eleTy},\n  y : ${t.params.eleTy},\n}\n\nfn foo() {\n  var v : ${t.params.eleTy};\n  let tmp = ${t.params.compTy}(${compParams});\n}`;\n\n  const shader_error = t.params.stage === 'constant';\n  t.expectCompileResult(!shader_error, wgsl);\n});"],"mappings":"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","ignoreList":[]}