{"version":3,"file":"builtins.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","generateShader","g","kBuiltins","name","stage","io","type","kTestTypes","test","desc","params","u","combineWithParams","combine","beginSubcases","beforeAllSubcases","t","skipIf","isCompatibility","includes","selectDeviceOrSkipTestCase","target_stage","target_io","use_struct","fn","code","attribute","expectation","some","x","expectCompileResult","target_type","p1","first","p2","second","s1a","s1b","s2a","s2b","ra","rb","firstIsRet","secondIsRet","unless","enable_extension","use","kTests","pos","src","pass","trailing_comma","newline_in_attr","whitespace_in_attr","invalid_name","no_params","missing_param","missing_parens","missing_lparen","missing_rparen","multiple_params","ident_param","number_param","duplicate","builtin","undefined","scope","attr"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/builtins.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validation tests for entry point built-in variables`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { generateShader } from './util.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// List of all built-in variables and their stage, in|out usage, and type.\n// Taken from table in Section 15:\n// https://www.w3.org/TR/WGSL/#builtin-inputs-outputs\nexport const kBuiltins = [\n{ name: 'vertex_index', stage: 'vertex', io: 'in', type: 'u32' },\n{ name: 'instance_index', stage: 'vertex', io: 'in', type: 'u32' },\n{ name: 'position', stage: 'vertex', io: 'out', type: 'vec4<f32>' },\n{ name: 'position', stage: 'fragment', io: 'in', type: 'vec4<f32>' },\n{ name: 'front_facing', stage: 'fragment', io: 'in', type: 'bool' },\n{ name: 'frag_depth', stage: 'fragment', io: 'out', type: 'f32' },\n{ name: 'local_invocation_id', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n{ name: 'local_invocation_index', stage: 'compute', io: 'in', type: 'u32' },\n{ name: 'global_invocation_id', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n{ name: 'workgroup_id', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n{ name: 'num_workgroups', stage: 'compute', io: 'in', type: 'vec3<u32>' },\n{ name: 'sample_index', stage: 'fragment', io: 'in', type: 'u32' },\n{ name: 'sample_mask', stage: 'fragment', io: 'in', type: 'u32' },\n{ name: 'sample_mask', stage: 'fragment', io: 'out', type: 'u32' },\n{ name: 'subgroup_invocation_id', stage: 'compute', io: 'in', type: 'u32' },\n{ name: 'subgroup_size', stage: 'compute', io: 'in', type: 'u32' },\n{ name: 'subgroup_invocation_id', stage: 'fragment', io: 'in', type: 'u32' },\n{ name: 'subgroup_size', stage: 'fragment', io: 'in', type: 'u32' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,1>' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,2>' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,3>' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,4>' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,5>' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,6>' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,7>' },\n{ name: 'clip_distances', stage: 'vertex', io: 'out', type: 'array<f32,8>' }];\n\n\n// List of types to test against.\nconst kTestTypes = [\n'bool',\n'u32',\n'i32',\n'f32',\n'vec2<bool>',\n'vec2<u32>',\n'vec2<i32>',\n'vec2<f32>',\n'vec3<bool>',\n'vec3<u32>',\n'vec3<i32>',\n'vec3<f32>',\n'vec4<bool>',\n'vec4<u32>',\n'vec4<i32>',\n'vec4<f32>',\n'mat2x2<f32>',\n'mat2x3<f32>',\n'mat2x4<f32>',\n'mat3x2<f32>',\n'mat3x3<f32>',\n'mat3x4<f32>',\n'mat4x2<f32>',\n'mat4x3<f32>',\n'mat4x4<f32>',\n'atomic<u32>',\n'atomic<i32>',\n'array<bool,4>',\n'array<u32,4>',\n'array<i32,4>',\n'array<f32,1>',\n'array<f32,2>',\n'array<f32,3>',\n'array<f32,4>',\n'array<f32,5>',\n'array<f32,6>',\n'array<f32,7>',\n'array<f32,8>',\n'array<f32,9>',\n'MyStruct'];\n\n\ng.test('stage_inout').\ndesc(\n  `Test that each @builtin attribute is validated against the required stage and in/out usage for that built-in variable.`\n).\nparams((u) =>\nu.\ncombineWithParams(kBuiltins).\ncombine('use_struct', [true, false]).\ncombine('target_stage', ['', 'vertex', 'fragment', 'compute']).\ncombine('target_io', ['in', 'out']).\nbeginSubcases()\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && ['sample_index', 'sample_mask'].includes(t.params.name),\n    'compatibility mode does not support sample_index or sample_mask'\n  );\n  if (t.params.name.includes('subgroup')) {\n    t.selectDeviceOrSkipTestCase('subgroups');\n  } else if (t.params.name === 'clip_distances') {\n    t.selectDeviceOrSkipTestCase('clip-distances');\n  }\n  t.skipIf(\n    t.params.name !== 'position' &&\n    t.params.target_stage === 'vertex' &&\n    t.params.target_io === 'out' &&\n    !t.params.use_struct,\n    'missing @builtin(position) in the vertex output when the vertex output is not a struct'\n  );\n}).\nfn((t) => {\n  const code = generateShader({\n    attribute: `@builtin(${t.params.name})`,\n    type: t.params.type,\n    stage: t.params.target_stage,\n    io: t.params.target_io,\n    use_struct: t.params.use_struct\n  });\n\n  // Expect to pass iff the built-in table contains an entry that matches.\n  const expectation = kBuiltins.some(\n    (x) =>\n    x.name === t.params.name && (\n    x.stage === t.params.target_stage ||\n    t.params.use_struct && t.params.target_stage === '') && (\n    x.io === t.params.target_io || t.params.target_stage === '') &&\n    x.type === t.params.type\n  );\n  t.expectCompileResult(expectation, code);\n});\n\ng.test('type').\ndesc(\n  `Test that each @builtin attribute is validated against the required type of that built-in variable.`\n).\nparams((u) =>\nu.\ncombineWithParams(kBuiltins).\ncombine('use_struct', [true, false]).\nbeginSubcases().\ncombine('target_type', kTestTypes)\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(\n    t.isCompatibility && ['sample_index', 'sample_mask'].includes(t.params.name),\n    'compatibility mode does not support sample_index or sample_mask'\n  );\n  if (t.params.name.includes('subgroup')) {\n    t.selectDeviceOrSkipTestCase('subgroups');\n  } else if (t.params.name === 'clip_distances') {\n    t.selectDeviceOrSkipTestCase('clip-distances');\n  }\n  t.skipIf(\n    t.params.name !== 'position' &&\n    t.params.stage === 'vertex' &&\n    t.params.io === 'out' &&\n    !t.params.use_struct,\n    'missing @builtin(position) in the vertex output'\n  );\n}).\nfn((t) => {\n  let code = '';\n\n  if (t.params.target_type === 'MyStruct') {\n    // Generate a struct that contains the correct built-in type.\n    code += 'struct MyStruct {\\n';\n    code += `  value : ${t.params.type}\\n`;\n    code += '};\\n\\n';\n  }\n\n  code += generateShader({\n    attribute: `@builtin(${t.params.name})`,\n    type: t.params.target_type,\n    stage: t.params.stage,\n    io: t.params.io,\n    use_struct: t.params.use_struct\n  });\n\n  // Expect to pass iff the built-in table contains an entry that matches.\n  const expectation = kBuiltins.some(\n    (x) =>\n    x.name === t.params.name &&\n    x.stage === t.params.stage &&\n    x.io === t.params.io &&\n    x.type === t.params.target_type\n  );\n  t.expectCompileResult(expectation, code);\n});\n\ng.test('nesting').\ndesc(`Test validation of nested built-in variables`).\nparams((u) =>\nu.\ncombine('target_stage', ['fragment', '']).\ncombine('target_io', ['in', 'out']).\nbeginSubcases()\n).\nfn((t) => {\n  // Generate a struct that contains a frag_depth builtin, nested inside another struct.\n  let code = `\n    struct Inner {\n      @builtin(frag_depth) value : f32\n    };\n    struct Outer {\n      inner : Inner\n    };`;\n\n  code += generateShader({\n    attribute: '',\n    type: 'Outer',\n    stage: t.params.target_stage,\n    io: t.params.target_io,\n    use_struct: false\n  });\n\n  // Expect to pass only if the struct is not used for entry point IO.\n  t.expectCompileResult(t.params.target_stage === '', code);\n});\n\ng.test('duplicates').\ndesc(`Test that duplicated built-in variables are validated.`).\nparams((u) =>\nu\n// Place two @builtin(sample_mask) attributes onto the entry point function.\n// We use `sample_mask` as it is valid as both an input and output for the same entry point.\n// The function:\n// - has two non-struct parameters (`p1` and `p2`)\n// - has two struct parameters each with two members (`s1{a,b}` and `s2{a,b}`)\n// - returns a struct with two members (`ra` and `rb`)\n// By default, all of these variables will have unique @location() attributes.\n.combine('first', ['p1', 's1a', 's2a', 'ra']).\ncombine('second', ['p2', 's1b', 's2b', 'rb']).\nbeginSubcases()\n).\nbeforeAllSubcases((t) => {\n  t.skipIf(t.isCompatibility, 'compatibility mode does not support sample_mask');\n}).\nfn((t) => {\n  const p1 =\n  t.params.first === 'p1' ? '@builtin(sample_mask)' : '@location(1) @interpolate(flat, either)';\n  const p2 =\n  t.params.second === 'p2' ?\n  '@builtin(sample_mask)' :\n  '@location(2) @interpolate(flat, either)';\n  const s1a =\n  t.params.first === 's1a' ?\n  '@builtin(sample_mask)' :\n  '@location(3) @interpolate(flat, either)';\n  const s1b =\n  t.params.second === 's1b' ?\n  '@builtin(sample_mask)' :\n  '@location(4) @interpolate(flat, either)';\n  const s2a =\n  t.params.first === 's2a' ?\n  '@builtin(sample_mask)' :\n  '@location(5) @interpolate(flat, either)';\n  const s2b =\n  t.params.second === 's2b' ?\n  '@builtin(sample_mask)' :\n  '@location(6) @interpolate(flat, either)';\n  const ra =\n  t.params.first === 'ra' ? '@builtin(sample_mask)' : '@location(1) @interpolate(flat, either)';\n  const rb =\n  t.params.second === 'rb' ?\n  '@builtin(sample_mask)' :\n  '@location(2) @interpolate(flat, either)';\n  const code = `\n    struct S1 {\n      ${s1a} a : u32,\n      ${s1b} b : u32,\n    };\n    struct S2 {\n      ${s2a} a : u32,\n      ${s2b} b : u32,\n    };\n    struct R {\n      ${ra} a : u32,\n      ${rb} b : u32,\n    };\n    @fragment\n    fn main(${p1} p1 : u32,\n            ${p2} p2 : u32,\n            s1 : S1,\n            s2 : S2,\n            ) -> R {\n      return R();\n    }\n    `;\n\n  // The test should fail if both @builtin(sample_mask) attributes are on the input parameters\n  // or structures, or it they are both on the output struct. Otherwise it should pass.\n  const firstIsRet = t.params.first === 'ra';\n  const secondIsRet = t.params.second === 'rb';\n  const expectation = firstIsRet !== secondIsRet;\n  t.expectCompileResult(expectation, code);\n});\n\ng.test('missing_vertex_position').\ndesc(`Test that vertex shaders are required to output @builtin(position).`).\nparams((u) =>\nu.\ncombine('use_struct', [true, false]).\ncombine('attribute', ['@builtin(position)', '@location(0)']).\nbeginSubcases()\n).\nfn((t) => {\n  const code = `\n    struct S {\n      ${t.params.attribute} value : vec4<f32>\n    };\n\n    @vertex\n    fn main() -> ${t.params.use_struct ? 'S' : `${t.params.attribute} vec4<f32>`} {\n      return ${t.params.use_struct ? 'S' : 'vec4<f32>'}();\n    }\n    `;\n\n  // Expect to pass only when using @builtin(position).\n  t.expectCompileResult(t.params.attribute === '@builtin(position)', code);\n});\n\ng.test('reuse_builtin_name').\ndesc(`Test that a builtin name can be used in different contexts`).\nparams((u) =>\nu.\ncombineWithParams(kBuiltins).\ncombine('use', ['alias', 'struct', 'function', 'module-var', 'function-var']).\ncombine('enable_extension', [true, false]).\nunless(\n  (t) => t.enable_extension && !(t.name.includes('subgroup') || t.name === 'clip_distances')\n)\n).\nbeforeAllSubcases((t) => {\n  if (!t.params.enable_extension) {\n    return;\n  }\n  if (t.params.name.includes('subgroup')) {\n    t.selectDeviceOrSkipTestCase('subgroups');\n  } else if (t.params.name === 'clip_distances') {\n    t.selectDeviceOrSkipTestCase('clip-distances');\n  }\n}).\nfn((t) => {\n  let code = '';\n  if (t.params.enable_extension) {\n    if (t.params.name.includes('subgroups')) {\n      code += 'enable subgroup;\\n';\n    } else if (t.params.name === 'clip_distances') {\n      code += 'enable clip_distances;\\n';\n    }\n  }\n  if (t.params.use === 'alias') {\n    code += `alias ${t.params.name} = i32;`;\n  } else if (t.params.use === `struct`) {\n    code += `struct ${t.params.name} { i: f32, }`;\n  } else if (t.params.use === `function`) {\n    code += `fn ${t.params.name}() {}`;\n  } else if (t.params.use === `module-var`) {\n    code += `const ${t.params.name} = 1;`;\n  } else if (t.params.use === `function-var`) {\n    code += `fn test() { let ${t.params.name} = 1; }`;\n  }\n  t.expectCompileResult(true, code);\n});\n\nconst kTests = {\n  pos: {\n    src: `@builtin(position)`,\n    pass: true\n  },\n  trailing_comma: {\n    src: `@builtin(position,)`,\n    pass: true\n  },\n  newline_in_attr: {\n    src: `@ \\n builtin(position)`,\n    pass: true\n  },\n  whitespace_in_attr: {\n    src: `@/* comment */builtin/* comment */\\n\\n(\\t/*comment*/position/*comment*/)`,\n    pass: true\n  },\n  invalid_name: {\n    src: `@abuiltin(position)`,\n    pass: false\n  },\n  no_params: {\n    src: `@builtin`,\n    pass: false\n  },\n  missing_param: {\n    src: `@builtin()`,\n    pass: false\n  },\n  missing_parens: {\n    src: `@builtin position`,\n    pass: false\n  },\n  missing_lparen: {\n    src: `@builtin position)`,\n    pass: false\n  },\n  missing_rparen: {\n    src: `@builtin(position`,\n    pass: false\n  },\n  multiple_params: {\n    src: `@builtin(position, frag_depth)`,\n    pass: false\n  },\n  ident_param: {\n    src: `@builtin(identifier)`,\n    pass: false\n  },\n  number_param: {\n    src: `@builtin(2)`,\n    pass: false\n  },\n  duplicate: {\n    src: `@builtin(position) @builtin(position)`,\n    pass: false\n  }\n};\n\ng.test('parse').\ndesc(`Test that @builtin is parsed correctly.`).\nparams((u) => u.combine('builtin', keysOf(kTests))).\nfn((t) => {\n  const src = kTests[t.params.builtin].src;\n  const code = `\n@vertex\nfn main() -> ${src} vec4<f32> {\n  return vec4<f32>(.4, .2, .3, .1);\n}`;\n  t.expectCompileResult(kTests[t.params.builtin].pass, code);\n});\n\ng.test('placement').\ndesc('Tests the locations @builtin is allowed to appear').\nparams((u) =>\nu.\ncombine('scope', [\n// The fn-param and fn-ret are part of the shader_io/builtins tests\n'private-var',\n'storage-var',\n'struct-member',\n'non-ep-param',\n'non-ep-ret',\n'fn-decl',\n'fn-var',\n'while-stmt',\nundefined]\n).\ncombine('attribute', [\n{\n  'private-var': false,\n  'storage-var': false,\n  'struct-member': true,\n  'non-ep-param': false,\n  'non-ep-ret': false,\n  'fn-decl': false,\n  'fn-var': false,\n  'fn-return': false,\n  'while-stmt': false\n}]\n).\nbeginSubcases()\n).\nfn((t) => {\n  const scope = t.params.scope;\n\n  const attr = '@builtin(vertex_index)';\n  const code = `\n      ${scope === 'private-var' ? attr : ''}\n      var<private> priv_var : u32;\n\n      ${scope === 'storage-var' ? attr : ''}\n      @group(0) @binding(0)\n      var<storage> stor_var : u32;\n\n      struct A {\n        ${scope === 'struct-member' ? attr : ''}\n        a : u32,\n      }\n\n      fn v(${scope === 'non-ep-param' ? attr : ''} i : u32) ->\n            ${scope === 'non-ep-ret' ? attr : ''} u32 { return 1; }\n\n      @vertex\n      ${scope === 'fn-decl' ? attr : ''}\n      fn f(\n        @location(0) b : u32,\n      ) -> @builtin(position) vec4f {\n        ${scope === 'fn-var' ? attr : ''}\n        var<function> func_v : u32;\n\n        ${scope === 'while-stmt' ? attr : ''}\n        while false {}\n\n        return vec4(1, 1, 1, 1);\n      }\n    `;\n\n  t.expectCompileResult(scope === undefined || t.params.attribute[scope], code);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG,qDAAqD,CAAC,SAASC,aAAa,QAAQ,4CAA4C,CAC9J,SAASC,MAAM,QAAQ,wCAAwC,CAC/D,SAASC,oBAAoB,QAAQ,8BAA8B;;AAEnE,SAASC,cAAc,QAAQ,WAAW;;AAE1C,OAAO,MAAMC,CAAC,GAAGJ,aAAa,CAACE,oBAAoB,CAAC;;AAEpD;AACA;AACA;AACA,OAAO,MAAMG,SAAS,GAAG;AACzB,EAAEC,IAAI,EAAE,cAAc,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAChE,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAClE,EAAEH,IAAI,EAAE,UAAU,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,WAAW,CAAC,CAAC;AACnE,EAAEH,IAAI,EAAE,UAAU,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,WAAW,CAAC,CAAC;AACpE,EAAEH,IAAI,EAAE,cAAc,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,MAAM,CAAC,CAAC;AACnE,EAAEH,IAAI,EAAE,YAAY,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AACjE,EAAEH,IAAI,EAAE,qBAAqB,EAAEC,KAAK,EAAE,SAAS,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,WAAW,CAAC,CAAC;AAC9E,EAAEH,IAAI,EAAE,wBAAwB,EAAEC,KAAK,EAAE,SAAS,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC3E,EAAEH,IAAI,EAAE,sBAAsB,EAAEC,KAAK,EAAE,SAAS,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,WAAW,CAAC,CAAC;AAC/E,EAAEH,IAAI,EAAE,cAAc,EAAEC,KAAK,EAAE,SAAS,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,WAAW,CAAC,CAAC;AACvE,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,SAAS,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,WAAW,CAAC,CAAC;AACzE,EAAEH,IAAI,EAAE,cAAc,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAClE,EAAEH,IAAI,EAAE,aAAa,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AACjE,EAAEH,IAAI,EAAE,aAAa,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAClE,EAAEH,IAAI,EAAE,wBAAwB,EAAEC,KAAK,EAAE,SAAS,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC3E,EAAEH,IAAI,EAAE,eAAe,EAAEC,KAAK,EAAE,SAAS,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAClE,EAAEH,IAAI,EAAE,wBAAwB,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,eAAe,EAAEC,KAAK,EAAE,UAAU,EAAEC,EAAE,EAAE,IAAI,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnE,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5E,EAAEH,IAAI,EAAE,gBAAgB,EAAEC,KAAK,EAAE,QAAQ,EAAEC,EAAE,EAAE,KAAK,EAAEC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;;;AAG7E;AACA,MAAMC,UAAU,GAAG;AACnB,MAAM;AACN,KAAK;AACL,KAAK;AACL,KAAK;AACL,YAAY;AACZ,WAAW;AACX,WAAW;AACX,WAAW;AACX,YAAY;AACZ,WAAW;AACX,WAAW;AACX,WAAW;AACX,YAAY;AACZ,WAAW;AACX,WAAW;AACX,WAAW;AACX,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,eAAe;AACf,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,UAAU,CAAC;;;AAGXN,CAAC,CAACO,IAAI,CAAC,aAAa,CAAC;AACrBC,IAAI;EACF;AACF,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,iBAAiB,CAACV,SAAS,CAAC;AAC5BW,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpCA,OAAO,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AAC9DA,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnCC,aAAa,CAAC;AACd,CAAC;AACDC,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvBA,CAAC,CAACC,MAAM;IACND,CAAC,CAACE,eAAe,IAAI,CAAC,cAAc,EAAE,aAAa,CAAC,CAACC,QAAQ,CAACH,CAAC,CAACN,MAAM,CAACP,IAAI,CAAC;IAC5E;EACF,CAAC;EACD,IAAIa,CAAC,CAACN,MAAM,CAACP,IAAI,CAACgB,QAAQ,CAAC,UAAU,CAAC,EAAE;IACtCH,CAAC,CAACI,0BAA0B,CAAC,WAAW,CAAC;EAC3C,CAAC,MAAM,IAAIJ,CAAC,CAACN,MAAM,CAACP,IAAI,KAAK,gBAAgB,EAAE;IAC7Ca,CAAC,CAACI,0BAA0B,CAAC,gBAAgB,CAAC;EAChD;EACAJ,CAAC,CAACC,MAAM;IACND,CAAC,CAACN,MAAM,CAACP,IAAI,KAAK,UAAU;IAC5Ba,CAAC,CAACN,MAAM,CAACW,YAAY,KAAK,QAAQ;IAClCL,CAAC,CAACN,MAAM,CAACY,SAAS,KAAK,KAAK;IAC5B,CAACN,CAAC,CAACN,MAAM,CAACa,UAAU;IACpB;EACF,CAAC;AACH,CAAC,CAAC;AACFC,EAAE,CAAC,CAACR,CAAC,KAAK;EACR,MAAMS,IAAI,GAAGzB,cAAc,CAAC;IAC1B0B,SAAS,EAAE,YAAYV,CAAC,CAACN,MAAM,CAACP,IAAI,GAAG;IACvCG,IAAI,EAAEU,CAAC,CAACN,MAAM,CAACJ,IAAI;IACnBF,KAAK,EAAEY,CAAC,CAACN,MAAM,CAACW,YAAY;IAC5BhB,EAAE,EAAEW,CAAC,CAACN,MAAM,CAACY,SAAS;IACtBC,UAAU,EAAEP,CAAC,CAACN,MAAM,CAACa;EACvB,CAAC,CAAC;;EAEF;EACA,MAAMI,WAAW,GAAGzB,SAAS,CAAC0B,IAAI;IAChC,CAACC,CAAC;IACFA,CAAC,CAAC1B,IAAI,KAAKa,CAAC,CAACN,MAAM,CAACP,IAAI;IACxB0B,CAAC,CAACzB,KAAK,KAAKY,CAAC,CAACN,MAAM,CAACW,YAAY;IACjCL,CAAC,CAACN,MAAM,CAACa,UAAU,IAAIP,CAAC,CAACN,MAAM,CAACW,YAAY,KAAK,EAAE,CAAC;IACpDQ,CAAC,CAACxB,EAAE,KAAKW,CAAC,CAACN,MAAM,CAACY,SAAS,IAAIN,CAAC,CAACN,MAAM,CAACW,YAAY,KAAK,EAAE,CAAC;IAC5DQ,CAAC,CAACvB,IAAI,KAAKU,CAAC,CAACN,MAAM,CAACJ;EACtB,CAAC;EACDU,CAAC,CAACc,mBAAmB,CAACH,WAAW,EAAEF,IAAI,CAAC;AAC1C,CAAC,CAAC;;AAEFxB,CAAC,CAACO,IAAI,CAAC,MAAM,CAAC;AACdC,IAAI;EACF;AACF,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,iBAAiB,CAACV,SAAS,CAAC;AAC5BW,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpCC,aAAa,CAAC,CAAC;AACfD,OAAO,CAAC,aAAa,EAAEN,UAAU;AACjC,CAAC;AACDQ,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvBA,CAAC,CAACC,MAAM;IACND,CAAC,CAACE,eAAe,IAAI,CAAC,cAAc,EAAE,aAAa,CAAC,CAACC,QAAQ,CAACH,CAAC,CAACN,MAAM,CAACP,IAAI,CAAC;IAC5E;EACF,CAAC;EACD,IAAIa,CAAC,CAACN,MAAM,CAACP,IAAI,CAACgB,QAAQ,CAAC,UAAU,CAAC,EAAE;IACtCH,CAAC,CAACI,0BAA0B,CAAC,WAAW,CAAC;EAC3C,CAAC,MAAM,IAAIJ,CAAC,CAACN,MAAM,CAACP,IAAI,KAAK,gBAAgB,EAAE;IAC7Ca,CAAC,CAACI,0BAA0B,CAAC,gBAAgB,CAAC;EAChD;EACAJ,CAAC,CAACC,MAAM;IACND,CAAC,CAACN,MAAM,CAACP,IAAI,KAAK,UAAU;IAC5Ba,CAAC,CAACN,MAAM,CAACN,KAAK,KAAK,QAAQ;IAC3BY,CAAC,CAACN,MAAM,CAACL,EAAE,KAAK,KAAK;IACrB,CAACW,CAAC,CAACN,MAAM,CAACa,UAAU;IACpB;EACF,CAAC;AACH,CAAC,CAAC;AACFC,EAAE,CAAC,CAACR,CAAC,KAAK;EACR,IAAIS,IAAI,GAAG,EAAE;;EAEb,IAAIT,CAAC,CAACN,MAAM,CAACqB,WAAW,KAAK,UAAU,EAAE;IACvC;IACAN,IAAI,IAAI,qBAAqB;IAC7BA,IAAI,IAAI,aAAaT,CAAC,CAACN,MAAM,CAACJ,IAAI,IAAI;IACtCmB,IAAI,IAAI,QAAQ;EAClB;;EAEAA,IAAI,IAAIzB,cAAc,CAAC;IACrB0B,SAAS,EAAE,YAAYV,CAAC,CAACN,MAAM,CAACP,IAAI,GAAG;IACvCG,IAAI,EAAEU,CAAC,CAACN,MAAM,CAACqB,WAAW;IAC1B3B,KAAK,EAAEY,CAAC,CAACN,MAAM,CAACN,KAAK;IACrBC,EAAE,EAAEW,CAAC,CAACN,MAAM,CAACL,EAAE;IACfkB,UAAU,EAAEP,CAAC,CAACN,MAAM,CAACa;EACvB,CAAC,CAAC;;EAEF;EACA,MAAMI,WAAW,GAAGzB,SAAS,CAAC0B,IAAI;IAChC,CAACC,CAAC;IACFA,CAAC,CAAC1B,IAAI,KAAKa,CAAC,CAACN,MAAM,CAACP,IAAI;IACxB0B,CAAC,CAACzB,KAAK,KAAKY,CAAC,CAACN,MAAM,CAACN,KAAK;IAC1ByB,CAAC,CAACxB,EAAE,KAAKW,CAAC,CAACN,MAAM,CAACL,EAAE;IACpBwB,CAAC,CAACvB,IAAI,KAAKU,CAAC,CAACN,MAAM,CAACqB;EACtB,CAAC;EACDf,CAAC,CAACc,mBAAmB,CAACH,WAAW,EAAEF,IAAI,CAAC;AAC1C,CAAC,CAAC;;AAEFxB,CAAC,CAACO,IAAI,CAAC,SAAS,CAAC;AACjBC,IAAI,CAAC,8CAA8C,CAAC;AACpDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDE,OAAO,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACzCA,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnCC,aAAa,CAAC;AACd,CAAC;AACDU,EAAE,CAAC,CAACR,CAAC,KAAK;EACR;EACA,IAAIS,IAAI,GAAG;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;;EAELA,IAAI,IAAIzB,cAAc,CAAC;IACrB0B,SAAS,EAAE,EAAE;IACbpB,IAAI,EAAE,OAAO;IACbF,KAAK,EAAEY,CAAC,CAACN,MAAM,CAACW,YAAY;IAC5BhB,EAAE,EAAEW,CAAC,CAACN,MAAM,CAACY,SAAS;IACtBC,UAAU,EAAE;EACd,CAAC,CAAC;;EAEF;EACAP,CAAC,CAACc,mBAAmB,CAACd,CAAC,CAACN,MAAM,CAACW,YAAY,KAAK,EAAE,EAAEI,IAAI,CAAC;AAC3D,CAAC,CAAC;;AAEFxB,CAAC,CAACO,IAAI,CAAC,YAAY,CAAC;AACpBC,IAAI,CAAC,wDAAwD,CAAC;AAC9DC,MAAM,CAAC,CAACC,CAAC;AACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACCE,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7CA,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7CC,aAAa,CAAC;AACd,CAAC;AACDC,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvBA,CAAC,CAACC,MAAM,CAACD,CAAC,CAACE,eAAe,EAAE,iDAAiD,CAAC;AAChF,CAAC,CAAC;AACFM,EAAE,CAAC,CAACR,CAAC,KAAK;EACR,MAAMgB,EAAE;EACRhB,CAAC,CAACN,MAAM,CAACuB,KAAK,KAAK,IAAI,GAAG,uBAAuB,GAAG,yCAAyC;EAC7F,MAAMC,EAAE;EACRlB,CAAC,CAACN,MAAM,CAACyB,MAAM,KAAK,IAAI;EACxB,uBAAuB;EACvB,yCAAyC;EACzC,MAAMC,GAAG;EACTpB,CAAC,CAACN,MAAM,CAACuB,KAAK,KAAK,KAAK;EACxB,uBAAuB;EACvB,yCAAyC;EACzC,MAAMI,GAAG;EACTrB,CAAC,CAACN,MAAM,CAACyB,MAAM,KAAK,KAAK;EACzB,uBAAuB;EACvB,yCAAyC;EACzC,MAAMG,GAAG;EACTtB,CAAC,CAACN,MAAM,CAACuB,KAAK,KAAK,KAAK;EACxB,uBAAuB;EACvB,yCAAyC;EACzC,MAAMM,GAAG;EACTvB,CAAC,CAACN,MAAM,CAACyB,MAAM,KAAK,KAAK;EACzB,uBAAuB;EACvB,yCAAyC;EACzC,MAAMK,EAAE;EACRxB,CAAC,CAACN,MAAM,CAACuB,KAAK,KAAK,IAAI,GAAG,uBAAuB,GAAG,yCAAyC;EAC7F,MAAMQ,EAAE;EACRzB,CAAC,CAACN,MAAM,CAACyB,MAAM,KAAK,IAAI;EACxB,uBAAuB;EACvB,yCAAyC;EACzC,MAAMV,IAAI,GAAG;AACf;AACA,QAAQW,GAAG;AACX,QAAQC,GAAG;AACX;AACA;AACA,QAAQC,GAAG;AACX,QAAQC,GAAG;AACX;AACA;AACA,QAAQC,EAAE;AACV,QAAQC,EAAE;AACV;AACA;AACA,cAAcT,EAAE;AAChB,cAAcE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;;EAEH;EACA;EACA,MAAMQ,UAAU,GAAG1B,CAAC,CAACN,MAAM,CAACuB,KAAK,KAAK,IAAI;EAC1C,MAAMU,WAAW,GAAG3B,CAAC,CAACN,MAAM,CAACyB,MAAM,KAAK,IAAI;EAC5C,MAAMR,WAAW,GAAGe,UAAU,KAAKC,WAAW;EAC9C3B,CAAC,CAACc,mBAAmB,CAACH,WAAW,EAAEF,IAAI,CAAC;AAC1C,CAAC,CAAC;;AAEFxB,CAAC,CAACO,IAAI,CAAC,yBAAyB,CAAC;AACjCC,IAAI,CAAC,qEAAqE,CAAC;AAC3EC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDE,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpCA,OAAO,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,cAAc,CAAC,CAAC;AAC5DC,aAAa,CAAC;AACd,CAAC;AACDU,EAAE,CAAC,CAACR,CAAC,KAAK;EACR,MAAMS,IAAI,GAAG;AACf;AACA,QAAQT,CAAC,CAACN,MAAM,CAACgB,SAAS;AAC1B;AACA;AACA;AACA,mBAAmBV,CAAC,CAACN,MAAM,CAACa,UAAU,GAAG,GAAG,GAAG,GAAGP,CAAC,CAACN,MAAM,CAACgB,SAAS,YAAY;AAChF,eAAeV,CAAC,CAACN,MAAM,CAACa,UAAU,GAAG,GAAG,GAAG,WAAW;AACtD;AACA,KAAK;;EAEH;EACAP,CAAC,CAACc,mBAAmB,CAACd,CAAC,CAACN,MAAM,CAACgB,SAAS,KAAK,oBAAoB,EAAED,IAAI,CAAC;AAC1E,CAAC,CAAC;;AAEFxB,CAAC,CAACO,IAAI,CAAC,oBAAoB,CAAC;AAC5BC,IAAI,CAAC,4DAA4D,CAAC;AAClEC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,iBAAiB,CAACV,SAAS,CAAC;AAC5BW,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;AAC7EA,OAAO,CAAC,kBAAkB,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1C+B,MAAM;EACJ,CAAC5B,CAAC,KAAKA,CAAC,CAAC6B,gBAAgB,IAAI,EAAE7B,CAAC,CAACb,IAAI,CAACgB,QAAQ,CAAC,UAAU,CAAC,IAAIH,CAAC,CAACb,IAAI,KAAK,gBAAgB;AAC3F;AACA,CAAC;AACDY,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvB,IAAI,CAACA,CAAC,CAACN,MAAM,CAACmC,gBAAgB,EAAE;IAC9B;EACF;EACA,IAAI7B,CAAC,CAACN,MAAM,CAACP,IAAI,CAACgB,QAAQ,CAAC,UAAU,CAAC,EAAE;IACtCH,CAAC,CAACI,0BAA0B,CAAC,WAAW,CAAC;EAC3C,CAAC,MAAM,IAAIJ,CAAC,CAACN,MAAM,CAACP,IAAI,KAAK,gBAAgB,EAAE;IAC7Ca,CAAC,CAACI,0BAA0B,CAAC,gBAAgB,CAAC;EAChD;AACF,CAAC,CAAC;AACFI,EAAE,CAAC,CAACR,CAAC,KAAK;EACR,IAAIS,IAAI,GAAG,EAAE;EACb,IAAIT,CAAC,CAACN,MAAM,CAACmC,gBAAgB,EAAE;IAC7B,IAAI7B,CAAC,CAACN,MAAM,CAACP,IAAI,CAACgB,QAAQ,CAAC,WAAW,CAAC,EAAE;MACvCM,IAAI,IAAI,oBAAoB;IAC9B,CAAC,MAAM,IAAIT,CAAC,CAACN,MAAM,CAACP,IAAI,KAAK,gBAAgB,EAAE;MAC7CsB,IAAI,IAAI,0BAA0B;IACpC;EACF;EACA,IAAIT,CAAC,CAACN,MAAM,CAACoC,GAAG,KAAK,OAAO,EAAE;IAC5BrB,IAAI,IAAI,SAAST,CAAC,CAACN,MAAM,CAACP,IAAI,SAAS;EACzC,CAAC,MAAM,IAAIa,CAAC,CAACN,MAAM,CAACoC,GAAG,KAAK,QAAQ,EAAE;IACpCrB,IAAI,IAAI,UAAUT,CAAC,CAACN,MAAM,CAACP,IAAI,cAAc;EAC/C,CAAC,MAAM,IAAIa,CAAC,CAACN,MAAM,CAACoC,GAAG,KAAK,UAAU,EAAE;IACtCrB,IAAI,IAAI,MAAMT,CAAC,CAACN,MAAM,CAACP,IAAI,OAAO;EACpC,CAAC,MAAM,IAAIa,CAAC,CAACN,MAAM,CAACoC,GAAG,KAAK,YAAY,EAAE;IACxCrB,IAAI,IAAI,SAAST,CAAC,CAACN,MAAM,CAACP,IAAI,OAAO;EACvC,CAAC,MAAM,IAAIa,CAAC,CAACN,MAAM,CAACoC,GAAG,KAAK,cAAc,EAAE;IAC1CrB,IAAI,IAAI,mBAAmBT,CAAC,CAACN,MAAM,CAACP,IAAI,SAAS;EACnD;EACAa,CAAC,CAACc,mBAAmB,CAAC,IAAI,EAAEL,IAAI,CAAC;AACnC,CAAC,CAAC;;AAEF,MAAMsB,MAAM,GAAG;EACbC,GAAG,EAAE;IACHC,GAAG,EAAE,oBAAoB;IACzBC,IAAI,EAAE;EACR,CAAC;EACDC,cAAc,EAAE;IACdF,GAAG,EAAE,qBAAqB;IAC1BC,IAAI,EAAE;EACR,CAAC;EACDE,eAAe,EAAE;IACfH,GAAG,EAAE,wBAAwB;IAC7BC,IAAI,EAAE;EACR,CAAC;EACDG,kBAAkB,EAAE;IAClBJ,GAAG,EAAE,0EAA0E;IAC/EC,IAAI,EAAE;EACR,CAAC;EACDI,YAAY,EAAE;IACZL,GAAG,EAAE,qBAAqB;IAC1BC,IAAI,EAAE;EACR,CAAC;EACDK,SAAS,EAAE;IACTN,GAAG,EAAE,UAAU;IACfC,IAAI,EAAE;EACR,CAAC;EACDM,aAAa,EAAE;IACbP,GAAG,EAAE,YAAY;IACjBC,IAAI,EAAE;EACR,CAAC;EACDO,cAAc,EAAE;IACdR,GAAG,EAAE,mBAAmB;IACxBC,IAAI,EAAE;EACR,CAAC;EACDQ,cAAc,EAAE;IACdT,GAAG,EAAE,oBAAoB;IACzBC,IAAI,EAAE;EACR,CAAC;EACDS,cAAc,EAAE;IACdV,GAAG,EAAE,mBAAmB;IACxBC,IAAI,EAAE;EACR,CAAC;EACDU,eAAe,EAAE;IACfX,GAAG,EAAE,gCAAgC;IACrCC,IAAI,EAAE;EACR,CAAC;EACDW,WAAW,EAAE;IACXZ,GAAG,EAAE,sBAAsB;IAC3BC,IAAI,EAAE;EACR,CAAC;EACDY,YAAY,EAAE;IACZb,GAAG,EAAE,aAAa;IAClBC,IAAI,EAAE;EACR,CAAC;EACDa,SAAS,EAAE;IACTd,GAAG,EAAE,uCAAuC;IAC5CC,IAAI,EAAE;EACR;AACF,CAAC;;AAEDjD,CAAC,CAACO,IAAI,CAAC,OAAO,CAAC;AACfC,IAAI,CAAC,yCAAyC,CAAC;AAC/CC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACE,OAAO,CAAC,SAAS,EAAEf,MAAM,CAACiD,MAAM,CAAC,CAAC,CAAC;AACnDvB,EAAE,CAAC,CAACR,CAAC,KAAK;EACR,MAAMiC,GAAG,GAAGF,MAAM,CAAC/B,CAAC,CAACN,MAAM,CAACsD,OAAO,CAAC,CAACf,GAAG;EACxC,MAAMxB,IAAI,GAAG;AACf;AACA,eAAewB,GAAG;AAClB;AACA,EAAE;EACAjC,CAAC,CAACc,mBAAmB,CAACiB,MAAM,CAAC/B,CAAC,CAACN,MAAM,CAACsD,OAAO,CAAC,CAACd,IAAI,EAAEzB,IAAI,CAAC;AAC5D,CAAC,CAAC;;AAEFxB,CAAC,CAACO,IAAI,CAAC,WAAW,CAAC;AACnBC,IAAI,CAAC,mDAAmD,CAAC;AACzDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDE,OAAO,CAAC,OAAO,EAAE;AACjB;AACA,aAAa;AACb,aAAa;AACb,eAAe;AACf,cAAc;AACd,YAAY;AACZ,SAAS;AACT,QAAQ;AACR,YAAY;AACZoD,SAAS;AACT,CAAC;AACDpD,OAAO,CAAC,WAAW,EAAE;AACrB;EACE,aAAa,EAAE,KAAK;EACpB,aAAa,EAAE,KAAK;EACpB,eAAe,EAAE,IAAI;EACrB,cAAc,EAAE,KAAK;EACrB,YAAY,EAAE,KAAK;EACnB,SAAS,EAAE,KAAK;EAChB,QAAQ,EAAE,KAAK;EACf,WAAW,EAAE,KAAK;EAClB,YAAY,EAAE;AAChB,CAAC;AACD,CAAC;AACDC,aAAa,CAAC;AACd,CAAC;AACDU,EAAE,CAAC,CAACR,CAAC,KAAK;EACR,MAAMkD,KAAK,GAAGlD,CAAC,CAACN,MAAM,CAACwD,KAAK;;EAE5B,MAAMC,IAAI,GAAG,wBAAwB;EACrC,MAAM1C,IAAI,GAAG;AACf,QAAQyC,KAAK,KAAK,aAAa,GAAGC,IAAI,GAAG,EAAE;AAC3C;AACA;AACA,QAAQD,KAAK,KAAK,aAAa,GAAGC,IAAI,GAAG,EAAE;AAC3C;AACA;AACA;AACA;AACA,UAAUD,KAAK,KAAK,eAAe,GAAGC,IAAI,GAAG,EAAE;AAC/C;AACA;AACA;AACA,aAAaD,KAAK,KAAK,cAAc,GAAGC,IAAI,GAAG,EAAE;AACjD,cAAcD,KAAK,KAAK,YAAY,GAAGC,IAAI,GAAG,EAAE;AAChD;AACA;AACA,QAAQD,KAAK,KAAK,SAAS,GAAGC,IAAI,GAAG,EAAE;AACvC;AACA;AACA;AACA,UAAUD,KAAK,KAAK,QAAQ,GAAGC,IAAI,GAAG,EAAE;AACxC;AACA;AACA,UAAUD,KAAK,KAAK,YAAY,GAAGC,IAAI,GAAG,EAAE;AAC5C;AACA;AACA;AACA;AACA,KAAK;;EAEHnD,CAAC,CAACc,mBAAmB,CAACoC,KAAK,KAAKD,SAAS,IAAIjD,CAAC,CAACN,MAAM,CAACgB,SAAS,CAACwC,KAAK,CAAC,EAAEzC,IAAI,CAAC;AAC/E,CAAC,CAAC","ignoreList":[]}