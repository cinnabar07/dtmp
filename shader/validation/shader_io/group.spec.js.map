{"version":3,"file":"group.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kTests","const_expr","src","pass","override_expr","zero","one","comment","split_line","trailing_comma","int_literal","uint_literal","hex_literal","negative","missing_value","missing_left_paren","missing_right_paren","multiple_values","f32_val_literal","f32_val","no_params","misspelling","multi_group","test","desc","params","u","combine","fn","t","code","attr","expectCompileResult","beforeAllSubcases","selectDeviceOrSkipTestCase"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/group.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validation tests for group`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTests = {\n  const_expr: {\n    src: `const z = 5;\n    const y = 2;\n    @group(z + y)`,\n    pass: true\n  },\n  override_expr: {\n    src: `override z = 5;\n    @group(z)`,\n    pass: false\n  },\n\n  zero: {\n    src: `@group(0)`,\n    pass: true\n  },\n  one: {\n    src: `@group(1)`,\n    pass: true\n  },\n  comment: {\n    src: `@/* comment */group(1)`,\n    pass: true\n  },\n  split_line: {\n    src: '@ \\n group(1)',\n    pass: true\n  },\n  trailing_comma: {\n    src: `@group(1,)`,\n    pass: true\n  },\n  int_literal: {\n    src: `@group(1i)`,\n    pass: true\n  },\n  uint_literal: {\n    src: `@group(1u)`,\n    pass: true\n  },\n  hex_literal: {\n    src: `@group(0x1)`,\n    pass: true\n  },\n\n  negative: {\n    src: `@group(-1)`,\n    pass: false\n  },\n  missing_value: {\n    src: `@group()`,\n    pass: false\n  },\n  missing_left_paren: {\n    src: `@group 1)`,\n    pass: false\n  },\n  missing_right_paren: {\n    src: `@group(1`,\n    pass: false\n  },\n  multiple_values: {\n    src: `@group(1,2)`,\n    pass: false\n  },\n  f32_val_literal: {\n    src: `@group(1.0)`,\n    pass: false\n  },\n  f32_val: {\n    src: `@group(1f)`,\n    pass: false\n  },\n  no_params: {\n    src: `@group`,\n    pass: false\n  },\n  misspelling: {\n    src: `@agroup(1)`,\n    pass: false\n  },\n  multi_group: {\n    src: `@group(1) @group(1)`,\n    pass: false\n  }\n};\ng.test('group').\ndesc(`Test validation of group`).\nparams((u) => u.combine('attr', keysOf(kTests))).\nfn((t) => {\n  const code = `\n${kTests[t.params.attr].src} @binding(1)\nvar<storage> a: i32;\n\n@workgroup_size(1, 1, 1)\n@compute fn main() {\n  _ = a;\n}`;\n  t.expectCompileResult(kTests[t.params.attr].pass, code);\n});\n\ng.test('group_f16').\ndesc(`Test validation of group with f16`).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const code = `\n@group(1h) @binding(1)\nvar<storage> a: i32;\n\n@workgroup_size(1, 1, 1)\n@compute fn main() {\n  _ = a;\n}`;\n  t.expectCompileResult(false, code);\n});"],"mappings":"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","ignoreList":[]}