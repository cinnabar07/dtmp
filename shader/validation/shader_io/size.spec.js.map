{"version":3,"file":"size.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kSizeTests","valid","src","pass","non_align_size","i32","u32","constant","const_expr","trailing_comma","hex","whitespace","comment","large","misspelling","no_value","missing_left_paren","missing_right_paren","missing_parens","multiple_values","override","zero","negative","f32_literal","f32","duplicate1","duplicate2","too_small","test","desc","params","u","combine","fn","t","code","attr","expectCompileResult","beforeAllSubcases","selectDeviceOrSkipTestCase","ext","kNonStructTests","control","mod_src","func_src","size","struct","vec","mat","array","scalar","data","array_size"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/size.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validation tests for size`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kSizeTests = {\n  valid: {\n    src: `@size(4)`,\n    pass: true\n  },\n  non_align_size: {\n    src: `@size(5)`,\n    pass: true\n  },\n  i32: {\n    src: `@size(4i)`,\n    pass: true\n  },\n  u32: {\n    src: `@size(4u)`,\n    pass: true\n  },\n  constant: {\n    src: `@size(z)`,\n    pass: true\n  },\n  const_expr: {\n    src: `@size(z + 4)`,\n    pass: true\n  },\n  trailing_comma: {\n    src: `@size(4,)`,\n    pass: true\n  },\n  hex: {\n    src: `@size(0x4)`,\n    pass: true\n  },\n  whitespace: {\n    src: '@\\nsize(4)',\n    pass: true\n  },\n  comment: {\n    src: `@/* comment */size(4)`,\n    pass: true\n  },\n  large: {\n    src: `@size(2147483647)`,\n    pass: true\n  },\n\n  misspelling: {\n    src: `@msize(4)`,\n    pass: false\n  },\n  no_value: {\n    src: `@size()`,\n    pass: false\n  },\n  missing_left_paren: {\n    src: `@size 4)`,\n    pass: false\n  },\n  missing_right_paren: {\n    src: `@size(4`,\n    pass: false\n  },\n  missing_parens: {\n    src: `@size`,\n    pass: false\n  },\n  multiple_values: {\n    src: `@size(4, 8)`,\n    pass: false\n  },\n  override: {\n    src: `@size(over)`,\n    pass: false\n  },\n  zero: {\n    src: `@size(0)`,\n    pass: false\n  },\n  negative: {\n    src: `@size(-4)`,\n    pass: false\n  },\n  f32_literal: {\n    src: `@size(4.0)`,\n    pass: false\n  },\n  f32: {\n    src: `@size(4f)`,\n    pass: false\n  },\n  duplicate1: {\n    src: `@size(4) @size(4)`,\n    pass: false\n  },\n  duplicate2: {\n    src: `@size(4) @size(8)`,\n    pass: false\n  },\n  too_small: {\n    src: `@size(1)`,\n    pass: false\n  }\n};\n\ng.test('size').\ndesc(`Test validation of size`).\nparams((u) => u.combine('attr', keysOf(kSizeTests))).\nfn((t) => {\n  const code = `\noverride over: i32 = 4;\nconst z: i32 = 4;\n\nstruct S {\n  ${kSizeTests[t.params.attr].src} a: f32,\n};\n@group(0) @binding(0)\nvar<storage> a: S;\n\n@workgroup_size(1)\n@compute fn main() {\n  _ = a;\n}`;\n  t.expectCompileResult(kSizeTests[t.params.attr].pass, code);\n});\n\ng.test('size_fp16').\ndesc(`Test validation of size with fp16`).\nparams((u) => u.combine('ext', ['', 'h'])).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const code = `\nstruct S {\n  @size(4${t.params.ext}) a: f32,\n}\n@group(0) @binding(0)\nvar<storage> a: S;\n\n@workgroup_size(1)\n@compute fn main() {\n  _ = a;\n}`;\n  t.expectCompileResult(t.params.ext === '', code);\n});\n\nconst kNonStructTests = {\n  control: {\n    mod_src: ``,\n    func_src: ``,\n    size: 0,\n    pass: true\n  },\n  struct: {\n    mod_src: `struct S { a: f32 }`,\n    func_src: ``,\n    size: 4,\n    pass: false\n  },\n  constant: {\n    mod_src: `const a: f32 = 4.0;`,\n    func_src: ``,\n    size: 4,\n    pass: false\n  },\n  vec: {\n    mod_src: ``,\n    func_src: `vec4<f32>`,\n    size: 16,\n    pass: false\n  },\n  mat: {\n    mod_src: ``,\n    func_src: `mat4x4<f32>`,\n    size: 64,\n    pass: false\n  },\n  array: {\n    mod_src: ``,\n    func_src: `array<f32, 4>`,\n    size: 16,\n    pass: false\n  },\n  scalar: {\n    mod_src: ``,\n    func_src: `f32`,\n    size: 4,\n    pass: false\n  }\n};\n\ng.test('size_non_struct').\ndesc(`Test validation of size outside of a struct`).\nparams((u) => u.combine('attr', keysOf(kNonStructTests))).\nfn((t) => {\n  const data = kNonStructTests[t.params.attr];\n  let code = '';\n  if (data.mod_src !== '') {\n    code += `@size(${data.size}) ${data.mod_src}`;\n  }\n\n  code += `\n@workgroup_size(1)\n@compute fn main() {\n`;\n  if (data.func_src !== '') {\n    code += `@size(${data.size}) var a: ${data.func_src};`;\n  }\n  code += '}';\n\n  t.expectCompileResult(data.pass, code);\n});\n\ng.test('size_creation_fixed_footprint').\ndesc(`Test that @size is only valid on types that have creation-fixed footprint.`).\nparams((u) => u.combine('array_size', [', 4', ''])).\nfn((t) => {\n  const code = `\nstruct S {\n  @size(64) a: array<f32${t.params.array_size}>,\n};\n@group(0) @binding(0)\nvar<storage> a: S;\n\n@workgroup_size(1)\n@compute fn main() {\n  _ = a.a[0];\n}`;\n  t.expectCompileResult(t.params.array_size !== '', code);\n});"],"mappings":"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","ignoreList":[]}