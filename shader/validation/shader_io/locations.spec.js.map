{"version":3,"file":"locations.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","generateShader","g","kValidLocationTypes","Set","kInvalidLocationTypes","test","desc","params","u","combine","beginSubcases","fn","t","code","attribute","type","stage","target_stage","io","target_io","use_struct","expectation","expectCompileResult","beforeAllSubcases","startsWith","endsWith","selectDeviceOrSkipTestCase","has","p1","first","p2","second","s1a","s1b","s2a","s2b","ra","rb","firstIsRet","secondIsRet","kValidationTests","zero","src","pass","one","extra_comma","i32","u32","hex","const_expr","max","newline","comment","misspelling","no_parens","empty_params","missing_left_paren","missing_right_paren","extra_params","f32","f32_literal","negative","override_expr","vec","duplicate","attr","ext","kOutOfOrderCases","reverse_params","valid","no_zero_params","reverse_overlap","struct","decls","struct_override","struct_random","struct_random_overlap","mixed_locations1","mixed_locations2","mixed_overlap","with_param_builtin","non_zero_return","returnType","returnValue","reverse_return","gap_return","with_return_builtin","testcase","case","undefined"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/locations.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validation tests for entry point user-defined IO`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { generateShader } from './util.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidLocationTypes = new Set([\n'f16',\n'f32',\n'i32',\n'u32',\n'vec2<f32>',\n'vec2<i32>',\n'vec2<u32>',\n'vec3<f32>',\n'vec3<i32>',\n'vec3<u32>',\n'vec4<f32>',\n'vec4<i32>',\n'vec4<u32>',\n'vec2h',\n'vec2f',\n'vec2i',\n'vec2u',\n'vec3h',\n'vec3f',\n'vec3i',\n'vec3u',\n'vec4h',\n'vec4f',\n'vec4i',\n'vec4u',\n'MyAlias']\n);\n\nconst kInvalidLocationTypes = new Set([\n'bool',\n'vec2<bool>',\n'vec3<bool>',\n'vec4<bool>',\n'mat2x2<f32>',\n'mat2x3<f32>',\n'mat2x4<f32>',\n'mat3x2<f32>',\n'mat3x3<f32>',\n'mat3x4<f32>',\n'mat4x2<f32>',\n'mat4x3<f32>',\n'mat4x4<f32>',\n'mat2x2f',\n'mat2x3f',\n'mat2x4f',\n'mat3x2f',\n'mat3x3f',\n'mat3x4f',\n'mat4x2f',\n'mat4x3f',\n'mat4x4f',\n'mat2x2h',\n'mat2x3h',\n'mat2x4h',\n'mat3x2h',\n'mat3x3h',\n'mat3x4h',\n'mat4x2h',\n'mat4x3h',\n'mat4x4h',\n'array<f32, 12>',\n'array<i32, 12>',\n'array<u32, 12>',\n'array<bool, 12>',\n'atomic<i32>',\n'atomic<u32>',\n'MyStruct',\n'texture_1d<i32>',\n'texture_2d<f32>',\n'texture_2d_array<i32>',\n'texture_3d<f32>',\n'texture_cube<u32>',\n'texture_cube_array<i32>',\n'texture_multisampled_2d<i32>',\n'texture_external',\n'texture_storage_1d<rgba8unorm, write>',\n'texture_storage_2d<rg32float, write>',\n'texture_storage_2d_array<r32float, write>',\n'texture_storage_3d<r32float, write>',\n'texture_depth_2d',\n'texture_depth_2d_array',\n'texture_depth_cube',\n'texture_depth_cube_array',\n'texture_depth_multisampled_2d',\n'sampler',\n'sampler_comparison']\n);\n\ng.test('stage_inout').\ndesc(`Test validation of user-defined IO stage and in/out usage`).\nparams((u) =>\nu.\ncombine('use_struct', [true, false]).\ncombine('target_stage', ['vertex', 'fragment', 'compute']).\ncombine('target_io', ['in', 'out']).\nbeginSubcases()\n).\nfn((t) => {\n  const code = generateShader({\n    attribute: '@location(0)',\n    type: 'f32',\n    stage: t.params.target_stage,\n    io: t.params.target_io,\n    use_struct: t.params.use_struct\n  });\n\n  // Expect to fail for compute shaders or when used as a non-struct vertex output (since the\n  // position built-in must also be specified).\n  const expectation =\n  t.params.target_stage === 'fragment' ||\n  t.params.target_stage === 'vertex' && (t.params.target_io === 'in' || t.params.use_struct);\n  t.expectCompileResult(expectation, code);\n});\n\ng.test('type').\ndesc(`Test validation of user-defined IO types`).\nparams((u) =>\nu.\ncombine('use_struct', [true, false]).\ncombine('type', new Set([...kValidLocationTypes, ...kInvalidLocationTypes])).\nbeginSubcases()\n).\nbeforeAllSubcases((t) => {\n  if (\n  t.params.type === 'f16' ||\n  (t.params.type.startsWith('mat') || t.params.type.startsWith('vec')) &&\n  t.params.type.endsWith('h'))\n  {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  let code = '';\n\n  if (\n  t.params.type === 'f16' ||\n  (t.params.type.startsWith('mat') || t.params.type.startsWith('vec')) &&\n  t.params.type.endsWith('h'))\n  {\n    code += 'enable f16;\\n';\n  }\n\n  if (t.params.type === 'MyStruct') {\n    // Generate a struct that contains a valid type.\n    code += `struct MyStruct {\n                value : f32,\n              }\n              `;\n  }\n  if (t.params.type === 'MyAlias') {\n    code += 'alias MyAlias = i32;\\n';\n  }\n\n  code += generateShader({\n    attribute: '@location(0) @interpolate(flat, either)',\n    type: t.params.type,\n    stage: 'fragment',\n    io: 'in',\n    use_struct: t.params.use_struct\n  });\n\n  t.expectCompileResult(kValidLocationTypes.has(t.params.type), code);\n});\n\ng.test('nesting').\ndesc(`Test validation of nested user-defined IO`).\nparams((u) =>\nu.\ncombine('target_stage', ['vertex', 'fragment', '']).\ncombine('target_io', ['in', 'out']).\nbeginSubcases()\n).\nfn((t) => {\n  let code = '';\n\n  // Generate a struct that contains a valid type.\n  code += `struct Inner {\n               @location(0) value : f32,\n             }\n             struct Outer {\n               inner : Inner,\n             }\n             `;\n\n  code += generateShader({\n    attribute: '',\n    type: 'Outer',\n    stage: t.params.target_stage,\n    io: t.params.target_io,\n    use_struct: false\n  });\n\n  // Expect to pass only if the struct is not used for entry point IO.\n  t.expectCompileResult(t.params.target_stage === '', code);\n});\n\ng.test('duplicates').\ndesc(`Test that duplicated user-defined IO attributes are validated.`).\nparams((u) =>\nu\n// Place two @location(0) attributes onto the entry point function.\n// The function:\n// - has two non-struct parameters (`p1` and `p2`)\n// - has two struct parameters each with two members (`s1{a,b}` and `s2{a,b}`)\n// - returns a struct with two members (`ra` and `rb`)\n// By default, all of these user-defined IO variables will have unique location attributes.\n.combine('first', ['p1', 's1a', 's2a', 'ra']).\ncombine('second', ['p2', 's1b', 's2b', 'rb']).\nbeginSubcases()\n).\nfn((t) => {\n  const p1 = t.params.first === 'p1' ? '0' : '1';\n  const p2 = t.params.second === 'p2' ? '0' : '2';\n  const s1a = t.params.first === 's1a' ? '0' : '3';\n  const s1b = t.params.second === 's1b' ? '0' : '4';\n  const s2a = t.params.first === 's2a' ? '0' : '5';\n  const s2b = t.params.second === 's2b' ? '0' : '6';\n  const ra = t.params.first === 'ra' ? '0' : '1';\n  const rb = t.params.second === 'rb' ? '0' : '2';\n  const code = `\n    struct S1 {\n      @location(${s1a}) a : f32,\n      @location(${s1b}) b : f32,\n    };\n    struct S2 {\n      @location(${s2a}) a : f32,\n      @location(${s2b}) b : f32,\n    };\n    struct R {\n      @location(${ra}) a : f32,\n      @location(${rb}) b : f32,\n    };\n    @fragment\n    fn main(@location(${p1}) p1 : f32,\n            @location(${p2}) p2 : f32,\n            s1 : S1,\n            s2 : S2,\n            ) -> R {\n      return R();\n    }\n    `;\n\n  // The test should fail if both @location(0) attributes are on the input parameters or\n  // structures, or it they are both on the output struct. Otherwise it should pass.\n  const firstIsRet = t.params.first === 'ra';\n  const secondIsRet = t.params.second === 'rb';\n  const expectation = firstIsRet !== secondIsRet;\n  t.expectCompileResult(expectation, code);\n});\n\nconst kValidationTests = {\n  zero: {\n    src: `@location(0)`,\n    pass: true\n  },\n  one: {\n    src: `@location(1)`,\n    pass: true\n  },\n  extra_comma: {\n    src: `@location(1,)`,\n    pass: true\n  },\n  i32: {\n    src: `@location(1i)`,\n    pass: true\n  },\n  u32: {\n    src: `@location(1u)`,\n    pass: true\n  },\n  hex: {\n    src: `@location(0x1)`,\n    pass: true\n  },\n  const_expr: {\n    src: `@location(a + b)`,\n    pass: true\n  },\n  max: {\n    src: `@location(2147483647)`,\n    pass: true\n  },\n  newline: {\n    src: '@\\nlocation(1)',\n    pass: true\n  },\n  comment: {\n    src: `@/* comment */location(1)`,\n    pass: true\n  },\n\n  misspelling: {\n    src: `@mlocation(1)`,\n    pass: false\n  },\n  no_parens: {\n    src: `@location`,\n    pass: false\n  },\n  empty_params: {\n    src: `@location()`,\n    pass: false\n  },\n  missing_left_paren: {\n    src: `@location 1)`,\n    pass: false\n  },\n  missing_right_paren: {\n    src: `@location(1`,\n    pass: false\n  },\n  extra_params: {\n    src: `@location(1, 2)`,\n    pass: false\n  },\n  f32: {\n    src: `@location(1f)`,\n    pass: false\n  },\n  f32_literal: {\n    src: `@location(1.0)`,\n    pass: false\n  },\n  negative: {\n    src: `@location(-1)`,\n    pass: false\n  },\n  override_expr: {\n    src: `@location(z + y)`,\n    pass: false\n  },\n  vec: {\n    src: `@location(vec2(1,1))`,\n    pass: false\n  },\n  duplicate: {\n    src: `@location(0) @location(0)`,\n    pass: false\n  }\n};\ng.test('validation').\ndesc(`Test validation of location`).\nparams((u) => u.combine('attr', keysOf(kValidationTests))).\nfn((t) => {\n  const code = `\nconst a = 5;\nconst b = 6;\noverride z = 7;\noverride y = 8;\n\n@vertex fn main(\n  ${kValidationTests[t.params.attr].src} res: f32\n) -> @builtin(position) vec4f {\n  return vec4f(0);\n}`;\n  t.expectCompileResult(kValidationTests[t.params.attr].pass, code);\n});\n\ng.test('location_fp16').\ndesc(`Test validation of location with fp16`).\nparams((u) => u.combine('ext', ['', 'h'])).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn((t) => {\n  const code = `\n\n@vertex fn main(\n  @location(1${t.params.ext}) res: f32\n) -> @builtin(position) vec4f {\n  return vec4f();\n}`;\n  t.expectCompileResult(t.params.ext === '', code);\n});\n\n\n\n\n\n\n\n\n\nconst kOutOfOrderCases = {\n  reverse_params: {\n    params: `@location(2) p1 : f32, @location(1) p2 : f32, @location(0) p3 : f32`,\n    valid: true\n  },\n  no_zero_params: {\n    params: `@location(2) p1 : f32, @location(1) p2 : f32`,\n    valid: true\n  },\n  reverse_overlap: {\n    params: `@location(2) p1 : f32, @location(1) p2 : f32, @location(1) p3 : f32`,\n    valid: false\n  },\n  struct: {\n    params: `p1 : S`,\n    decls: `struct S {\n      @location(1) x : f32,\n      @location(0) y : f32,\n    }`,\n    valid: true\n  },\n  struct_override: {\n    params: `@location(0) p1 : S`,\n    decls: `struct S {\n      @location(1) x : f32,\n      @location(0) y : f32,\n    }`,\n    valid: false\n  },\n  struct_random: {\n    params: `p1 : S, p2 : T`,\n    decls: `struct S {\n      @location(16) x : f32,\n      @location(4) y : f32,\n    }\n    struct T {\n      @location(13) x : f32,\n      @location(7) y : f32,\n    }`,\n    valid: true\n  },\n  struct_random_overlap: {\n    params: `p1 : S, p2 : T`,\n    decls: `struct S {\n      @location(16) x : f32,\n      @location(4) y : f32,\n    }\n    struct T {\n      @location(13) x : f32,\n      @location(4) y : f32,\n    }`,\n    valid: false\n  },\n  mixed_locations1: {\n    params: `@location(12) p1 : f32, p2 : S`,\n    decls: `struct S {\n      @location(2) x : f32,\n    }`,\n    valid: true\n  },\n  mixed_locations2: {\n    params: `p1 : S, @location(2) p2 : f32`,\n    decls: `struct S {\n      @location(12) x : f32,\n    }`,\n    valid: true\n  },\n  mixed_overlap: {\n    params: `p1 : S, @location(12) p2 : f32`,\n    decls: `struct S {\n      @location(12) x : f32,\n    }`,\n    valid: false\n  },\n  with_param_builtin: {\n    params: `p : S`,\n    decls: `struct S {\n      @location(12) x : f32,\n      @builtin(position) pos : vec4f,\n      @location(0) y : f32,\n    }`,\n    valid: true\n  },\n  non_zero_return: {\n    returnType: `@location(1) vec4f`,\n    returnValue: `vec4f()`,\n    valid: true\n  },\n  reverse_return: {\n    returnType: `S`,\n    returnValue: `S()`,\n    decls: `struct S {\n      @location(2) x : f32,\n      @location(1) y : f32,\n      @location(0) z : f32,\n    }`,\n    valid: true\n  },\n  gap_return: {\n    returnType: `S`,\n    returnValue: `S()`,\n    decls: `struct S {\n      @location(13) x : f32,\n      @location(7) y : f32,\n      @location(2) z : f32,\n    }`,\n    valid: true\n  },\n  with_return_builtin: {\n    returnType: `S`,\n    returnValue: `S()`,\n    decls: `struct S {\n      @location(11) x : f32,\n      @builtin(frag_depth) d : f32,\n      @location(10) y : f32,\n    }`,\n    valid: true\n  }\n};\n\ng.test('out_of_order').\ndesc(`Test validation of out of order locations`).\nparams((u) => u.combine('case', keysOf(kOutOfOrderCases))).\nfn((t) => {\n  const testcase = kOutOfOrderCases[t.params.case];\n  const decls = testcase.decls !== undefined ? testcase.decls : ``;\n  const params = testcase.params !== undefined ? testcase.params : ``;\n  const returnType = testcase.returnType !== undefined ? `-> ${testcase.returnType}` : ``;\n  const returnValue = testcase.returnValue !== undefined ? `return ${testcase.returnValue};` : ``;\n  const code = `\n${decls}\n\n@fragment\nfn main(${params}) ${returnType} {\n  ${returnValue}\n}\n`;\n\n  t.expectCompileResult(testcase.valid, code);\n});"],"mappings":"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","ignoreList":[]}