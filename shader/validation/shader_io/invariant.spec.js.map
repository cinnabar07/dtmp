{"version":3,"file":"invariant.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","kBuiltins","generateShader","g","kTests","invariant","src","pass","comment","split_line","empty_parens","value","missing_right_paren","missing_left_paren","duplicate","test","desc","params","u","combine","fn","t","code","attr","expectCompileResult","combineWithParams","beginSubcases","attribute","name","type","stage","io","use_struct","use_invariant"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/invariant.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validation tests for the invariant attribute`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { kBuiltins } from './builtins.spec.js';\nimport { generateShader } from './util.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTests = {\n  invariant: {\n    src: `@invariant`,\n    pass: true\n  },\n  comment: {\n    src: `@/* comment */invariant`,\n    pass: true\n  },\n  split_line: {\n    src: '@\\ninvariant',\n    pass: true\n  },\n  empty_parens: {\n    src: `@invariant()`,\n    pass: false\n  },\n  value: {\n    src: `@invariant(0)`,\n    pass: false\n  },\n  missing_right_paren: {\n    src: `@invariant(`,\n    pass: false\n  },\n  missing_left_paren: {\n    src: `@invariant)`,\n    pass: false\n  },\n  duplicate: {\n    src: `@invariant @invariant`,\n    pass: false\n  }\n};\n\ng.test('parsing').\ndesc(`Test parsing of the invariant attribute`).\nparams((u) => u.combine('attr', keysOf(kTests))).\nfn((t) => {\n  const code = `\n    struct VertexOut {\n      @builtin(position) ${kTests[t.params.attr].src} position : vec4<f32>\n    };\n    @vertex\n    fn main() -> VertexOut {\n      return VertexOut();\n    }\n    `;\n  t.expectCompileResult(kTests[t.params.attr].pass, code);\n});\n\ng.test('valid_only_with_vertex_position_builtin').\ndesc(`Test that the invariant attribute is only accepted with the vertex position builtin`).\nparams((u) =>\nu.\ncombineWithParams(kBuiltins).\ncombine('use_struct', [true, false]).\nbeginSubcases()\n).\nfn((t) => {\n  const code = generateShader({\n    attribute: `@builtin(${t.params.name}) @invariant`,\n    type: t.params.type,\n    stage: t.params.stage,\n    io: t.params.io,\n    use_struct: t.params.use_struct\n  });\n\n  t.expectCompileResult(t.params.name === 'position', code);\n});\n\ng.test('not_valid_on_user_defined_io').\ndesc(`Test that the invariant attribute is not accepted on user-defined IO attributes.`).\nparams((u) => u.combine('use_invariant', [true, false]).beginSubcases()).\nfn((t) => {\n  const invariant = t.params.use_invariant ? '@invariant' : '';\n  const code = `\n    struct VertexOut {\n      @location(0) ${invariant} loc0 : vec4<f32>,\n      @builtin(position) position : vec4<f32>,\n    };\n    @vertex\n    fn main() -> VertexOut {\n      return VertexOut();\n    }\n    `;\n  t.expectCompileResult(!t.params.use_invariant, code);\n});"],"mappings":"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","ignoreList":[]}