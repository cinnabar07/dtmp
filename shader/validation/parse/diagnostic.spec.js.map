{"version":3,"file":"diagnostic.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kSpecDiagnosticRules","kSpecDiagnosticSeverities","kDiagnosticTypes","kBadSeverities","kBadSingleTokenRules","generateDiagnostic","type","severity","rule","diagnostic","kValidLocations","module","diag","function","compound","if_stmt","if_then","if_else","switch_stmt","switch_body","switch_default","switch_case","loop_stmt","loop_body","loop_continuing","while_stmt","while_body","for_stmt","for_body","kInvalidLocations","module_var","module_const","module_override","struct","struct_member","function_params","function_var","function_let","function_const","pre_else","pre_default","pre_case","pre_continuing","pre_for_params","kNestedLocations","d1","d2","test","specURL","desc","params","u","combine","fn","t","code","expectCompileResult","expectCompileWarning","location","res","s1","s2","beginSubcases","filter","loc","rule1","rule2","same_rule","beforeAllSubcases","directive","startsWith","selectDeviceOrSkipTestCase","skipIfLanguageFeatureNotSupported","scopeCode","body","kScopeCases","override_global_off","result","override_global_on","override_global_warn","global_if_nothing_else_warn","deepest_nesting_warn","deepest_nesting_off","deepest_nesting_error","other_nest_unaffected","deeper_nest_no_effect","call_unaffected_error","call_unaffected_warn","call_unaffected_off","if_condition_error","if_condition_warn","if_condition_off","switch_error","switch_warn","switch_off","testcase","case"],"sources":["../../../../../src/webgpu/shader/validation/parse/diagnostic.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Validation tests for diagnostic directive and attribute`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kSpecDiagnosticRules = ['derivative_uniformity', 'subgroup_uniformity'];\nconst kSpecDiagnosticSeverities = ['off', 'info', 'warning', 'error'];\nconst kDiagnosticTypes = ['attribute', 'directive'];\n\nconst kBadSeverities = ['none', 'warn', 'goose', 'fatal', 'severe'];\nconst kBadSingleTokenRules = ['unknown', 'blahblahblah', 'derivative_uniform'];\n\nfunction generateDiagnostic(type, severity, rule) {\n  const diagnostic = `diagnostic(${severity}, ${rule})`;\n  if (type === 'directive') {\n    return diagnostic;\n  } else {\n    return '@' + diagnostic;\n  }\n}\n\nconst kValidLocations = {\n  module: (diag) => `${diag};`,\n  function: (diag) => `${diag} fn foo() { }`,\n  compound: (diag) => `fn foo() { ${diag} { } }`,\n  if_stmt: (diag) => `fn foo() { ${diag} if true { } }`,\n  if_then: (diag) => `fn foo() { if true ${diag} { } }`,\n  if_else: (diag) => `fn foo() { if true { } else ${diag} { } }`,\n  switch_stmt: (diag) => `fn foo() { ${diag} switch 0 { default { } } }`,\n  switch_body: (diag) => `fn foo() { switch 0 ${diag} { default { } } }`,\n  switch_default: (diag) => `fn foo() { switch 0 { default ${diag} { } } }`,\n  switch_case: (diag) => `fn foo() { switch 0 { case 0 ${diag} { } default { } } }`,\n  loop_stmt: (diag) => `fn foo() { ${diag} loop { break; } }`,\n  loop_body: (diag) => `fn foo() { loop ${diag} { break; } }`,\n  loop_continuing: (diag) => `fn foo() { loop { continuing ${diag} { break if true; } } }`,\n  while_stmt: (diag) => `fn foo() { ${diag} while true { break; } }`,\n  while_body: (diag) => `fn foo() { while true ${diag} { break; } }`,\n  for_stmt: (diag) => `fn foo() { ${diag} for (var i = 0; i < 10; i++) { } }`,\n  for_body: (diag) => `fn foo() { for (var i = 0; i < 10; i++) ${diag} { } }`\n};\n\nconst kInvalidLocations = {\n  module_var: (diag) => `${diag} var<private> x : u32;`,\n  module_const: (diag) => `${diag} const x = 0;`,\n  module_override: (diag) => `${diag} override x : u32;`,\n  struct: (diag) => `${diag} struct S { x : u32 }`,\n  struct_member: (diag) => ` struct S { ${diag} x : u32 }`,\n  function_params: (diag) => `fn foo${diag}() { }`,\n  function_var: (diag) => `fn foo() { ${diag} var x = 0; }`,\n  function_let: (diag) => `fn foo() { ${diag} let x = 0; }`,\n  function_const: (diag) => `fn foo() { ${diag} const x = 0; }`,\n  pre_else: (diag) => `fn foo() { if true { } ${diag} else { } }`,\n  pre_default: (diag) => `fn foo() { switch 0 { ${diag} default { } } }`,\n  pre_case: (diag) => `fn foo() { switch 0 { ${diag} case 0 { } default { } } }`,\n  pre_continuing: (diag) => `fn foo() { loop { ${diag} continuing { break if true; } } }`,\n  pre_for_params: (diag) => `fn foo() { for ${diag} (var i = 0; i < 10; i++) { } }`\n};\n\nconst kNestedLocations = {\n  compound: (d1, d2) => `${d1} fn foo() { ${d2} { } }`,\n  if_stmt: (d1, d2) => `fn foo() { ${d1} if true ${d2} { } }`,\n  switch_stmt: (d1, d2) => `fn foo() { ${d1} switch 0 ${d2} { default { } } }`,\n  switch_body: (d1, d2) => `fn foo() { switch 0 ${d1} { default ${d2} { } } }`,\n  switch_case: (d1, d2) =>\n  `fn foo() { switch 0 { case 0 ${d1} { } default ${d2} { } } }`,\n  loop_stmt: (d1, d2) => `fn foo() { ${d1} loop ${d2} { break; } }`,\n  while_stmt: (d1, d2) => `fn foo() { ${d1} while true ${d2} { break; } }`,\n  for_stmt: (d1, d2) => `fn foo() { ${d1} for (var i = 0; i < 10; i++) ${d2} { } }`\n};\n\ng.test('valid_params').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests required accepted diagnostic parameters`).\nparams((u) =>\nu.\ncombine('severity', kSpecDiagnosticSeverities).\ncombine('rule', kSpecDiagnosticRules).\ncombine('type', kDiagnosticTypes)\n).\nfn((t) => {\n  const diag = generateDiagnostic(t.params.type, t.params.severity, t.params.rule);\n  let code = ``;\n  if (t.params.type === 'directive') {\n    code = kValidLocations['module'](diag);\n  } else {\n    code = kValidLocations['function'](diag);\n  }\n  t.expectCompileResult(true, code);\n});\n\ng.test('invalid_severity').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests invalid severities are rejected`).\nparams((u) => u.combine('severity', kBadSeverities).combine('type', kDiagnosticTypes)).\nfn((t) => {\n  const diag = generateDiagnostic(t.params.type, t.params.severity, 'derivative_uniformity');\n  let code = ``;\n  if (t.params.type === 'directive') {\n    code = kValidLocations['module'](diag);\n  } else {\n    code = kValidLocations['function'](diag);\n  }\n  t.expectCompileResult(false, code);\n});\n\ng.test('warning_unknown_rule').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests unknown single token rules issue a warning`).\nparams((u) => u.combine('type', kDiagnosticTypes).combine('rule', kBadSingleTokenRules)).\nfn((t) => {\n  const diag = generateDiagnostic(t.params.type, 'info', t.params.rule);\n  let code = ``;\n  if (t.params.type === 'directive') {\n    code = kValidLocations['module'](diag);\n  } else {\n    code = kValidLocations['function'](diag);\n  }\n  t.expectCompileWarning(true, code);\n});\n\ng.test('valid_locations').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests valid locations`).\nparams((u) =>\nu.\ncombine('type', kDiagnosticTypes).\ncombine('location', keysOf(kValidLocations)).\ncombine('rule', kSpecDiagnosticRules)\n).\nfn((t) => {\n  const diag = generateDiagnostic(t.params.type, 'info', t.params.rule);\n  const code = kValidLocations[t.params.location](diag);\n  let res = true;\n  if (t.params.type === 'directive') {\n    res = t.params.location === 'module';\n  } else {\n    res = t.params.location !== 'module';\n  }\n  if (res === false) {\n    t.expectCompileResult(true, kValidLocations[t.params.location](''));\n  }\n  t.expectCompileResult(res, code);\n});\n\ng.test('invalid_locations').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests invalid locations`).\nparams((u) =>\nu.\ncombine('type', kDiagnosticTypes).\ncombine('location', keysOf(kInvalidLocations)).\ncombine('rule', kSpecDiagnosticRules)\n).\nfn((t) => {\n  const diag = generateDiagnostic(t.params.type, 'info', t.params.rule);\n  t.expectCompileResult(true, kInvalidLocations[t.params.location](''));\n  t.expectCompileResult(false, kInvalidLocations[t.params.location](diag));\n});\n\ng.test('conflicting_directive').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests conflicts between directives`).\nparams((u) => u.combine('s1', kSpecDiagnosticSeverities).combine('s2', kSpecDiagnosticSeverities)).\nfn((t) => {\n  const d1 = generateDiagnostic('directive', t.params.s1, 'derivative_uniformity');\n  const d2 = generateDiagnostic('directive', t.params.s2, 'derivative_uniformity');\n  const code = `${kValidLocations['module'](d1)}\\n${kValidLocations['module'](d2)}`;\n  t.expectCompileResult(t.params.s1 === t.params.s2, code);\n});\n\ng.test('duplicate_attribute_same_location').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests duplicate diagnostics at the same location must be on different rules`).\nparams((u) =>\nu.\ncombine('loc', keysOf(kValidLocations)).\ncombine('same_rule', [true, false]).\nbeginSubcases().\ncombine('s1', kSpecDiagnosticSeverities).\ncombine('s2', kSpecDiagnosticSeverities).\nfilter((u) => {\n  return u.loc !== 'module';\n})\n).\nfn((t) => {\n  const rule1 = 'derivative_uniformity';\n  const rule2 = 'another_diagnostic_rule';\n  const d1 = generateDiagnostic('attribute', t.params.s1, rule1);\n  const d2 = generateDiagnostic('attribute', t.params.s2, t.params.same_rule ? rule1 : rule2);\n  const code = `${kValidLocations[t.params.loc](`${d1} ${d2}`)}`;\n  t.expectCompileResult(!t.params.same_rule, code);\n});\n\ng.test('conflicting_attribute_different_location').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests conflicts between attributes`).\nparams((u) =>\nu.\ncombine('loc', keysOf(kNestedLocations)).\ncombine('s1', kSpecDiagnosticSeverities).\ncombine('s2', kSpecDiagnosticSeverities).\nfilter((u) => {\n  return u.s1 !== u.s2;\n})\n).\nfn((t) => {\n  const d1 = generateDiagnostic('attribute', t.params.s1, 'derivative_uniformity');\n  const d2 = generateDiagnostic('attribute', t.params.s2, 'derivative_uniformity');\n  const code = `${kNestedLocations[t.params.loc](d1, d2)}`;\n  t.expectCompileResult(true, code);\n});\n\ng.test('after_other_directives').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc(`Tests other global directives before a diagnostic directive.`).\nparams((u) =>\nu.combine('directive', ['enable f16', 'requires readonly_and_readwrite_storage_textures'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.directive.startsWith('enable')) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  if (t.params.directive.startsWith('requires')) {\n    t.skipIfLanguageFeatureNotSupported('readonly_and_readwrite_storage_textures');\n  }\n\n  let code = `${t.params.directive};`;\n  code += generateDiagnostic('directive', 'info', 'derivative_uniformity') + ';';\n  t.expectCompileResult(true, code);\n});\n\n\n\n\n\n\nfunction scopeCode(body) {\n  return `\n@group(0) @binding(0) var t : texture_1d<f32>;\n@group(0) @binding(1) var s : sampler;\nvar<private> non_uniform_cond : bool;\nvar<private> non_uniform_coord : f32;\nvar<private> non_uniform_val : u32;\n@fragment fn main() {\n  ${body}\n}\n`;\n}\n\nconst kScopeCases = {\n  override_global_off: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)};\n    `,\n    result: true\n  },\n  override_global_on: {\n    code: `\n    ${generateDiagnostic('directive', 'off', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: false\n  },\n  override_global_warn: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: 'warn'\n  },\n  global_if_nothing_else_warn: {\n    code: `\n    ${generateDiagnostic('directive', 'warning', 'derivative_uniformity')};\n    ${scopeCode(`\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: 'warn'\n  },\n  deepest_nesting_warn: {\n    code: scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n        if non_uniform_cond {\n          _ = textureSample(t,s,0.0);\n        }\n      }`),\n    result: 'warn'\n  },\n  deepest_nesting_off: {\n    code: scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        if non_uniform_cond {\n          _ = textureSample(t,s,0.0);\n        }\n      }`),\n    result: true\n  },\n  deepest_nesting_error: {\n    code: scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n        if non_uniform_cond {\n          _ = textureSample(t,s,0.0);\n        }\n      }`),\n    result: false\n  },\n  other_nest_unaffected: {\n    code: `\n    ${generateDiagnostic('directive', 'warning', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: 'warn'\n  },\n  deeper_nest_no_effect: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    ${scopeCode(`\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        if non_uniform_cond {\n        }\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: false\n  },\n  call_unaffected_error: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    fn foo() { _ = textureSample(t,s,0.0); }\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        foo();\n      }`)}\n    `,\n    result: false\n  },\n  call_unaffected_warn: {\n    code: `\n    ${generateDiagnostic('directive', 'warning', 'derivative_uniformity')};\n    fn foo() { _ = textureSample(t,s,0.0); }\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        foo();\n      }`)}\n    `,\n    result: 'warn'\n  },\n  call_unaffected_off: {\n    code: `\n    ${generateDiagnostic('directive', 'off', 'derivative_uniformity')};\n    fn foo() { _ = textureSample(t,s,0.0); }\n    ${scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        foo();\n      }`)}\n    `,\n    result: true\n  },\n  if_condition_error: {\n    code: scopeCode(`\n      if (non_uniform_cond) {\n        ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n        if textureSample(t,s,non_uniform_coord).x > 0.0\n          ${generateDiagnostic('', 'off', 'derivative_uniformity')} {\n        }\n      }`),\n    result: false\n  },\n  if_condition_warn: {\n    code: scopeCode(`\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n        if textureSample(t,s,non_uniform_coord).x > 0.0\n          ${generateDiagnostic('', 'error', 'derivative_uniformity')} {\n        }\n      }`),\n    result: 'warn'\n  },\n  if_condition_off: {\n    code: scopeCode(`\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        if textureSample(t,s,non_uniform_coord).x > 0.0\n          ${generateDiagnostic('', 'error', 'derivative_uniformity')} {\n        }\n      }`),\n    result: true\n  },\n  switch_error: {\n    code: scopeCode(`\n        ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n        switch non_uniform_val {\n          case 0 ${generateDiagnostic('', 'off', 'derivative_uniformity')} {\n          }\n          default {\n            _ = textureSample(t,s,0.0);\n          }\n        }`),\n    result: false\n  },\n  switch_warn: {\n    code: scopeCode(`\n        ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n        switch non_uniform_val {\n          case 0 ${generateDiagnostic('', 'off', 'derivative_uniformity')} {\n          }\n          default {\n            _ = textureSample(t,s,0.0);\n          }\n        }`),\n    result: 'warn'\n  },\n  switch_off: {\n    code: scopeCode(`\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        switch non_uniform_val {\n          case 0 ${generateDiagnostic('', 'error', 'derivative_uniformity')}{\n          }\n          default {\n            _ = textureSample(t,s,0.0);\n          }\n        }`),\n    result: true\n  }\n};\n\ng.test('diagnostic_scoping').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics').\ndesc('Tests that innermost scope controls the diagnostic').\nparams((u) => u.combine('case', keysOf(kScopeCases))).\nfn((t) => {\n  const testcase = kScopeCases[t.params.case];\n  if (testcase.result === 'warn') {\n    t.expectCompileWarning(true, testcase.code);\n  } else {\n    t.expectCompileResult(testcase.result, testcase.code);\n  }\n});"],"mappings":"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","ignoreList":[]}