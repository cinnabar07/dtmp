{"version":3,"file":"alias.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","test","desc","params","u","combine","fn","t","wgsl","target","expectCompileResult","attribute","kTypes","beforeAllSubcases","type","selectDeviceOrSkipTestCase","ty","skipIf","includes","hasLanguageFeature","enable","code","kMatchCases","function_param","constructor","template_param","predeclared_alias","struct_element","testcase","case"],"sources":["../../../../../src/webgpu/shader/validation/types/alias.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for type aliases\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('no_direct_recursion').\ndesc('Test that direct recursion of type aliases is rejected').\nparams((u) => u.combine('target', ['i32', 'T'])).\nfn((t) => {\n  const wgsl = `alias T = ${t.params.target};`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion').\ndesc('Test that indirect recursion of type aliases is rejected').\nparams((u) => u.combine('target', ['i32', 'S'])).\nfn((t) => {\n  const wgsl = `\nalias S = T;\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_vector_element').\ndesc('Test that indirect recursion of type aliases via vector element types is rejected').\nparams((u) => u.combine('target', ['i32', 'V'])).\nfn((t) => {\n  const wgsl = `\nalias V = vec4<T>;\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_matrix_element').\ndesc('Test that indirect recursion of type aliases via matrix element types is rejected').\nparams((u) => u.combine('target', ['f32', 'M'])).\nfn((t) => {\n  const wgsl = `\nalias M = mat4x4<T>;\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'f32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_array_element').\ndesc('Test that indirect recursion of type aliases via array element types is rejected').\nparams((u) => u.combine('target', ['i32', 'A'])).\nfn((t) => {\n  const wgsl = `\nalias A = array<T, 4>;\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_array_size').\ndesc('Test that indirect recursion of type aliases via array size expressions is rejected').\nparams((u) => u.combine('target', ['i32', 'A'])).\nfn((t) => {\n  const wgsl = `\nalias A = array<i32, T(1)>;\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_atomic').\ndesc('Test that indirect recursion of type aliases via atomic types is rejected').\nparams((u) => u.combine('target', ['i32', 'A'])).\nfn((t) => {\n  const wgsl = `\nalias A = atomic<T>;\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_ptr_store_type').\ndesc('Test that indirect recursion of type aliases via pointer store types is rejected').\nparams((u) => u.combine('target', ['i32', 'P'])).\nfn((t) => {\n  const wgsl = `\nalias P = ptr<function, T>;\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_struct_member').\ndesc('Test that indirect recursion of type aliases via struct members is rejected').\nparams((u) => u.combine('target', ['i32', 'S'])).\nfn((t) => {\n  const wgsl = `\nstruct S {\n  a : T\n}\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\ng.test('no_indirect_recursion_via_struct_attribute').\ndesc('Test that indirect recursion of type aliases via struct members is rejected').\nparams((u) =>\nu //\n.combine('target', ['i32', 'S']).\ncombine('attribute', ['align', 'location', 'size'])\n).\nfn((t) => {\n  const wgsl = `\nstruct S {\n  @${t.params.attribute}(T(4)) a : f32\n}\nalias T = ${t.params.target};\n`;\n  t.expectCompileResult(t.params.target === 'i32', wgsl);\n});\n\nconst kTypes = [\n'bool',\n'i32',\n'u32',\n'f32',\n'f16',\n'vec2<i32>',\n'vec3<u32>',\n'vec4<f32>',\n'mat2x2<f32>',\n'mat2x3<f32>',\n'mat2x4<f32>',\n'mat3x2<f32>',\n'mat3x3<f32>',\n'mat3x4<f32>',\n'mat4x2<f32>',\n'mat4x3<f32>',\n'mat4x4<f32>',\n'array<u32>',\n'array<i32, 4>',\n'array<vec2<u32>, 8>',\n'S',\n'T',\n'atomic<u32>',\n'atomic<i32>',\n'ptr<function, u32>',\n'ptr<private, i32>',\n'ptr<workgroup, f32>',\n'ptr<uniform, vec2f>',\n'ptr<storage, vec2u>',\n'ptr<storage, vec3i, read>',\n'ptr<storage, vec4f, read_write>',\n'sampler',\n'sampler_comparison',\n'texture_1d<f32>',\n'texture_2d<u32>',\n'texture_2d_array<i32>',\n'texture_3d<f32>',\n'texture_cube<i32>',\n'texture_cube_array<u32>',\n'texture_multisampled_2d<f32>',\n'texture_depth_multisampled_2d',\n'texture_external',\n'texture_storage_1d<rgba8snorm, write>',\n'texture_storage_1d<r32uint, write>',\n'texture_storage_1d<r32sint, read_write>',\n'texture_storage_1d<r32float, read>',\n'texture_storage_2d<rgba16uint, write>',\n'texture_storage_2d_array<rgba32float, write>',\n'texture_storage_3d<bgra8unorm, write>',\n'texture_depth_2d',\n'texture_depth_2d_array',\n'texture_depth_cube',\n'texture_depth_cube_array',\n\n// Pre-declared aliases (spot check)\n'vec2f',\n'vec3u',\n'vec4i',\n'mat2x2f',\n\n// User-defined aliases\n'anotherAlias',\n'random_alias'];\n\n\ng.test('any_type').\ndesc('Test that any type can be aliased').\nparams((u) => u.combine('type', kTypes)).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const ty = t.params.type;\n  t.skipIf(\n    ty.includes('texture_storage') &&\n    ty.includes('read') &&\n    !t.hasLanguageFeature('readonly_and_readwrite_storage_textures'),\n    'Missing language feature'\n  );\n  const enable = ty === 'f16' ? 'enable f16;' : '';\n  const code = `\n    ${enable}\n    struct S { x : u32 }\n    struct T { y : S }\n    alias anotherAlias = u32;\n    alias random_alias = i32;\n    alias myType = ${ty};`;\n  t.expectCompileResult(true, code);\n});\n\nconst kMatchCases = {\n  function_param: `\n    fn foo(x : u32) { }\n    fn bar() {\n      var x : alias_alias_u32;\n      foo(x);\n    }`,\n  constructor: `var<private> v : u32 = alias_u32(1);`,\n  template_param: `var<private> v : vec2<alias_u32> = vec2<u32>();`,\n  predeclared_alias: `var<private> v : vec2<alias_alias_u32> = vec2u();`,\n  struct_element: `\n    struct S { x : alias_u32 }\n    const c_u32 = 0u;\n    const c = S(c_u32);`\n};\n\ng.test('match_non_alias').\ndesc('Test that type checking succeeds using aliased and unaliased type').\nparams((u) => u.combine('case', keysOf(kMatchCases))).\nfn((t) => {\n  const testcase = kMatchCases[t.params.case];\n  const code = `\n    alias alias_u32 = u32;\n    alias alias_alias_u32 = alias_u32;\n    ${testcase}`;\n  t.expectCompileResult(true, code);\n});"],"mappings":"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","ignoreList":[]}