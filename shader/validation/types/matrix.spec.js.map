{"version":3,"file":"matrix.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kValidCases","mat2x2_f32","mat2x3_f32","mat2x4_f32","mat3x2_f32","mat3x3_f32","mat3x4_f32","mat4x2_f32","mat4x3_f32","mat4x4_f32","mat2x2_f16","mat2x3_f16","mat2x4_f16","mat3x2_f16","mat3x3_f16","mat3x4_f16","mat4x2_f16","mat4x3_f16","mat4x4_f16","mat2x2f","mat2x3f","mat2x4f","mat3x2f","mat3x3f","mat3x4f","mat4x2f","mat4x3f","mat4x4f","mat2x2h","mat2x3h","mat2x4h","mat3x2h","mat3x3h","mat3x4h","mat4x2h","mat4x3h","mat4x4h","trailing_comma","abstract_2x2","abstract_2x3","abstract_2x4","shadow_mat2x2","shadow_mat2x3","shadow_mat2x4","shadow_mat3x2","shadow_mat3x3","shadow_mat3x4","shadow_mat4x2","shadow_mat4x3","shadow_mat4x4","shadow_mat2x2f","shadow_mat2x3f","shadow_mat2x4f","shadow_mat3x2f","shadow_mat3x3f","shadow_mat3x4f","shadow_mat4x2f","shadow_mat4x3f","shadow_mat4x4f","shadow_mat2x2h","shadow_mat2x3h","shadow_mat2x4h","shadow_mat3x2h","shadow_mat3x3h","shadow_mat3x4h","shadow_mat4x2h","shadow_mat4x3h","shadow_mat4x4h","alias","test","desc","params","u","combine","beforeAllSubcases","t","code","case","indexOf","selectDeviceOrSkipTestCase","fn","expectCompileResult","kInvalidCases","mat2x2_i32","mat3x3_u32","mat4x4_bool","mat2x2_vec4f","mat2x2_array","mat2x2_struct","mat1x1","mat2x1","mat2x5","mat5x5","mat2x","matx2","mat2","mat","mat_f32","no_enable_mat2x2h","no_enable_mat2x3h","no_enable_mat2x4h","no_enable_mat3x2h","no_enable_mat3x3h","no_enable_mat3x4h","no_enable_mat4x2h","no_enable_mat4x3h","no_enable_mat4x4h","missing_template","missing_left_template","missing_right_template","missing_comp","mat2x2i","mat2x2u","mat2x2b"],"sources":["../../../../../src/webgpu/shader/validation/types/matrix.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nValidation tests for matrix types\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidCases = {\n  // Basic matrices\n  mat2x2_f32: `alias T = mat2x2<f32>;`,\n  mat2x3_f32: `alias T = mat2x3<f32>;`,\n  mat2x4_f32: `alias T = mat2x4<f32>;`,\n  mat3x2_f32: `alias T = mat3x2<f32>;`,\n  mat3x3_f32: `alias T = mat3x3<f32>;`,\n  mat3x4_f32: `alias T = mat3x4<f32>;`,\n  mat4x2_f32: `alias T = mat4x2<f32>;`,\n  mat4x3_f32: `alias T = mat4x3<f32>;`,\n  mat4x4_f32: `alias T = mat4x4<f32>;`,\n  mat2x2_f16: `enable f16;\\nalias T = mat2x2<f16>;`,\n  mat2x3_f16: `enable f16;\\nalias T = mat2x3<f16>;`,\n  mat2x4_f16: `enable f16;\\nalias T = mat2x4<f16>;`,\n  mat3x2_f16: `enable f16;\\nalias T = mat3x2<f16>;`,\n  mat3x3_f16: `enable f16;\\nalias T = mat3x3<f16>;`,\n  mat3x4_f16: `enable f16;\\nalias T = mat3x4<f16>;`,\n  mat4x2_f16: `enable f16;\\nalias T = mat4x2<f16>;`,\n  mat4x3_f16: `enable f16;\\nalias T = mat4x3<f16>;`,\n  mat4x4_f16: `enable f16;\\nalias T = mat4x4<f16>;`,\n\n  // Pre-declared aliases\n  mat2x2f: `alias T = mat2x2f;`,\n  mat2x3f: `alias T = mat2x3f;`,\n  mat2x4f: `alias T = mat2x4f;`,\n  mat3x2f: `alias T = mat3x2f;`,\n  mat3x3f: `alias T = mat3x3f;`,\n  mat3x4f: `alias T = mat3x4f;`,\n  mat4x2f: `alias T = mat4x2f;`,\n  mat4x3f: `alias T = mat4x3f;`,\n  mat4x4f: `alias T = mat4x4f;`,\n  mat2x2h: `enable f16;\\nalias T = mat2x2h;`,\n  mat2x3h: `enable f16;\\nalias T = mat2x3h;`,\n  mat2x4h: `enable f16;\\nalias T = mat2x4h;`,\n  mat3x2h: `enable f16;\\nalias T = mat3x2h;`,\n  mat3x3h: `enable f16;\\nalias T = mat3x3h;`,\n  mat3x4h: `enable f16;\\nalias T = mat3x4h;`,\n  mat4x2h: `enable f16;\\nalias T = mat4x2h;`,\n  mat4x3h: `enable f16;\\nalias T = mat4x3h;`,\n  mat4x4h: `enable f16;\\nalias T = mat4x4h;`,\n\n  trailing_comma: `alias T = mat2x2<f32,>;`,\n\n  // Abstract matrices\n  abstract_2x2: `const m = mat2x2(1,1,1,1);`,\n  abstract_2x3: `const m = mat2x3(1,1,1,1,1,1);`,\n  abstract_2x4: `const m = mat2x4(1,1,1,1,1,1,1,1);`,\n\n  // Base roots shadowable\n  shadow_mat2x2: `alias mat2x2 = array<vec2f, 2>;`,\n  shadow_mat2x3: `alias mat2x3 = array<vec2f, 3>;`,\n  shadow_mat2x4: `alias mat2x4 = array<vec2f, 4>;`,\n  shadow_mat3x2: `alias mat3x2 = array<vec3f, 2>;`,\n  shadow_mat3x3: `alias mat3x3 = array<vec3f, 3>;`,\n  shadow_mat3x4: `alias mat3x4 = array<vec3f, 4>;`,\n  shadow_mat4x2: `alias mat4x2 = array<vec4f, 2>;`,\n  shadow_mat4x3: `alias mat4x3 = array<vec4f, 3>;`,\n  shadow_mat4x4: `alias mat4x4 = array<vec4f, 4>;`,\n\n  // Pre-declared aliases shadowable\n  shadow_mat2x2f: `alias mat2x2f = mat2x2<f32>;`,\n  shadow_mat2x3f: `alias mat2x3f = mat2x3<f32>;`,\n  shadow_mat2x4f: `alias mat2x4f = mat2x4<f32>;`,\n  shadow_mat3x2f: `alias mat3x2f = mat3x2<f32>;`,\n  shadow_mat3x3f: `alias mat3x3f = mat3x3<f32>;`,\n  shadow_mat3x4f: `alias mat3x4f = mat3x4<f32>;`,\n  shadow_mat4x2f: `alias mat4x2f = mat4x2<f32>;`,\n  shadow_mat4x3f: `alias mat4x3f = mat4x3<f32>;`,\n  shadow_mat4x4f: `alias mat4x4f = mat4x4<f32>;`,\n  shadow_mat2x2h: `enable f16;\\nalias mat2x2h = mat2x2<f16>;`,\n  shadow_mat2x3h: `enable f16;\\nalias mat2x3h = mat2x3<f16>;`,\n  shadow_mat2x4h: `enable f16;\\nalias mat2x4h = mat2x4<f16>;`,\n  shadow_mat3x2h: `enable f16;\\nalias mat3x2h = mat3x2<f16>;`,\n  shadow_mat3x3h: `enable f16;\\nalias mat3x3h = mat3x3<f16>;`,\n  shadow_mat3x4h: `enable f16;\\nalias mat3x4h = mat3x4<f16>;`,\n  shadow_mat4x2h: `enable f16;\\nalias mat4x2h = mat4x2<f16>;`,\n  shadow_mat4x3h: `enable f16;\\nalias mat4x3h = mat4x3<f16>;`,\n  shadow_mat4x4h: `enable f16;\\nalias mat4x4h = mat4x4<f16>;`,\n\n  // Alias\n  alias: `alias E = f32; alias T = mat2x2<E>;`\n};\n\ng.test('valid').\ndesc('Valid matrix type tests').\nparams((u) => u.combine('case', keysOf(kValidCases))).\nbeforeAllSubcases((t) => {\n  const code = kValidCases[t.params.case];\n  if (code.indexOf('f16') >= 0) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const code = kValidCases[t.params.case];\n  t.expectCompileResult(true, code);\n});\n\nconst kInvalidCases = {\n  // Invalid component types\n  mat2x2_i32: `alias T = mat2x2<i32>;`,\n  mat3x3_u32: `alias T = mat3x3<u32>;`,\n  mat4x4_bool: `alias T = mat4x4<bool>;`,\n  mat2x2_vec4f: `alias T = mat2x2<vec2f>;`,\n  mat2x2_array: `alias T = mat2x2<array<f32, 2>>;`,\n  mat2x2_struct: `struct S { x : f32 }\\nalias T = mat2x2<S>;`,\n\n  // Invalid dimensions\n  mat1x1: `alias T = mat1x1<f32>;`,\n  mat2x1: `alias T = mat2x1<f32>;`,\n  mat2x5: `alias T = mat2x5<f32>;`,\n  mat5x5: `alias T = mat5x5<f32>;`,\n  mat2x: `alias T = mat2x<f32>;`,\n  matx2: `alias T = matx2<f32>;`,\n  mat2: `alias T = mat2<f32>;`,\n  mat: `alias T = mat;`,\n  mat_f32: `alias T = mat<f32>;`,\n\n  // Half-precision aliases require enable\n  no_enable_mat2x2h: `alias T = mat2x2h;`,\n  no_enable_mat2x3h: `alias T = mat2x3h;`,\n  no_enable_mat2x4h: `alias T = mat2x4h;`,\n  no_enable_mat3x2h: `alias T = mat3x2h;`,\n  no_enable_mat3x3h: `alias T = mat3x3h;`,\n  no_enable_mat3x4h: `alias T = mat3x4h;`,\n  no_enable_mat4x2h: `alias T = mat4x2h;`,\n  no_enable_mat4x3h: `alias T = mat4x3h;`,\n  no_enable_mat4x4h: `alias T = mat4x4h;`,\n\n  missing_template: `alias T = mat2x2;`,\n  missing_left_template: `alias T = mat2x2f32>;`,\n  missing_right_template: `alias T = mat2x2<f32;`,\n  missing_comp: `alias T = mat2x2<>;`,\n  mat2x2i: `alias T = mat2x2i;`,\n  mat2x2u: `alias T = mat2x2u;`,\n  mat2x2b: `alias T = mat2x2b;`\n};\n\ng.test('invalid').\ndesc('Invalid matrix type tests').\nparams((u) => u.combine('case', keysOf(kInvalidCases))).\nbeforeAllSubcases((t) => {\n  const code = kInvalidCases[t.params.case];\n  if (code.indexOf('f16') >= 0) {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const code = kInvalidCases[t.params.case];\n  t.expectCompileResult(false, code);\n});"],"mappings":"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","ignoreList":[]}