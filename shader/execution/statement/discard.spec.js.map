{"version":3,"file":"discard.spec.js","names":["description","makeTestGroup","iterRange","GPUTest","checkElementsPassPredicate","g","kWidth","kHeight","kSharedCode","drawFullScreen","t","code","dataChecker","framebufferChecker","pipeline","device","createRenderPipeline","layout","vertex","module","createShaderModule","entryPoint","fragment","targets","format","primitive","topology","bytesPerWord","framebuffer","createTextureTracked","size","usage","GPUTextureUsage","COPY_SRC","COPY_DST","RENDER_ATTACHMENT","TEXTURE_BINDING","fbBuffer","makeBufferWithContents","Uint32Array","x","GPUBufferUsage","dataSize","dataBufferSize","dataBuffer","createBufferTracked","STORAGE","uniformSize","uniformBuffer","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","offset","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","copyBufferToTexture","bytesPerRow","rowsPerImage","texture","width","height","pass","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","setPipeline","setBindGroup","draw","end","copyTextureToBuffer","queue","submit","finish","expectGPUBufferValuesPassCheck","type","Float32Array","typedLength","test","desc","fn","a","idx","value","predicatePrinter","leftHeader","getValueForCell","fbChecker","is_x","Math","floor","y","expect"],"sources":["../../../../../src/webgpu/shader/execution/statement/discard.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution tests for discard.\n\nThe discard statement converts invocations into helpers.\nThis results in the following conditions:\n  * No outputs are written\n  * No resources are written\n  * Atomics are undefined\n\nConditions that still occur:\n  * Derivative calculations are correct\n  * Reads\n  * Writes to non-external memory\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { iterRange } from '../../../../common/util/util.js';\nimport { GPUTest } from '../../../gpu_test.js';\nimport { checkElementsPassPredicate } from '../../../util/check_contents.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Framebuffer dimensions\nconst kWidth = 64;\nconst kHeight = 64;\n\nconst kSharedCode = `\n@group(0) @binding(0) var<storage, read_write> output: array<vec2f>;\n@group(0) @binding(1) var<storage, read_write> atomicIndex : atomic<u32>;\n@group(0) @binding(2) var<storage> uniformValues : array<u32, 5>;\n\n@vertex\nfn vsMain(@builtin(vertex_index) index : u32) -> @builtin(position) vec4f {\n  const vertices = array(\n    vec2(-1, -1), vec2(-1,  0), vec2( 0, -1),\n    vec2(-1,  0), vec2( 0,  0), vec2( 0, -1),\n\n    vec2( 0, -1), vec2( 0,  0), vec2( 1, -1),\n    vec2( 0,  0), vec2( 1,  0), vec2( 1, -1),\n\n    vec2(-1,  0), vec2(-1,  1), vec2( 0,  0),\n    vec2(-1,  1), vec2( 0,  1), vec2( 0,  0),\n\n    vec2( 0,  0), vec2( 0,  1), vec2( 1,  0),\n    vec2( 0,  1), vec2( 1,  1), vec2( 1,  0),\n  );\n  return vec4f(vec2f(vertices[index]), 0, 1);\n}\n`;\n\nfunction drawFullScreen(\nt,\ncode,\ndataChecker,\nframebufferChecker)\n{\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({ code }),\n      entryPoint: 'vsMain'\n    },\n    fragment: {\n      module: t.device.createShaderModule({ code }),\n      entryPoint: 'fsMain',\n      targets: [{ format: 'r32uint' }]\n    },\n    primitive: {\n      topology: 'triangle-list'\n    }\n  });\n\n  const bytesPerWord = 4;\n  const framebuffer = t.createTextureTracked({\n    size: [kWidth, kHeight],\n    usage:\n    GPUTextureUsage.COPY_SRC |\n    GPUTextureUsage.COPY_DST |\n    GPUTextureUsage.RENDER_ATTACHMENT |\n    GPUTextureUsage.TEXTURE_BINDING,\n    format: 'r32uint'\n  });\n\n  // Create a buffer to copy the framebuffer contents into.\n  // Initialize with a sentinel value and load this buffer to detect unintended writes.\n  const fbBuffer = t.makeBufferWithContents(\n    new Uint32Array([...iterRange(kWidth * kHeight, (x) => kWidth * kHeight)]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  );\n\n  // Create a buffer to hold the storage shader resources.\n  // (0,0) = vec2u width * height\n  // (0,1) = u32\n  const dataSize = 2 * kWidth * kHeight * bytesPerWord;\n  const dataBufferSize = dataSize + bytesPerWord;\n  const dataBuffer = t.createBufferTracked({\n    size: dataBufferSize,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  });\n\n  const uniformSize = bytesPerWord * 5;\n  const uniformBuffer = t.makeBufferWithContents(\n    // Loop bound, [derivative constants].\n    new Uint32Array([4, 1, 4, 4, 7]),\n    GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  );\n\n  // 'atomicIndex' packed at the end of the buffer.\n  const bg = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n    {\n      binding: 0,\n      resource: {\n        buffer: dataBuffer,\n        offset: 0,\n        size: dataSize\n      }\n    },\n    {\n      binding: 1,\n      resource: {\n        buffer: dataBuffer,\n        offset: dataSize,\n        size: bytesPerWord\n      }\n    },\n    {\n      binding: 2,\n      resource: {\n        buffer: uniformBuffer,\n        offset: 0,\n        size: uniformSize\n      }\n    }]\n\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  encoder.copyBufferToTexture(\n    {\n      buffer: fbBuffer,\n      offset: 0,\n      bytesPerRow: kWidth * bytesPerWord,\n      rowsPerImage: kHeight\n    },\n    { texture: framebuffer },\n    { width: kWidth, height: kHeight }\n  );\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: framebuffer.createView(),\n      loadOp: 'load',\n      storeOp: 'store'\n    }]\n\n  });\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.draw(24);\n  pass.end();\n  encoder.copyTextureToBuffer(\n    { texture: framebuffer },\n    {\n      buffer: fbBuffer,\n      offset: 0,\n      bytesPerRow: kWidth * bytesPerWord,\n      rowsPerImage: kHeight\n    },\n    { width: kWidth, height: kHeight }\n  );\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesPassCheck(dataBuffer, dataChecker, {\n    type: Float32Array,\n    typedLength: dataSize / bytesPerWord\n  });\n\n  t.expectGPUBufferValuesPassCheck(fbBuffer, framebufferChecker, {\n    type: Uint32Array,\n    typedLength: kWidth * kHeight\n  });\n}\n\ng.test('all').\ndesc('Test a shader that discards all fragments').\nfn((t) => {\n  const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) u32 {\n  _ = uniformValues[0];\n  discard;\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return 1;\n}\n`;\n\n  // No storage writes occur.\n  const dataChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === 0;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'data exp ==',\n          getValueForCell: (idx) => {\n            return 0;\n          }\n        }]\n\n      }\n    );\n  };\n\n  // No fragment outputs occur.\n  const fbChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === kWidth * kHeight;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'fb exp ==',\n          getValueForCell: (idx) => {\n            return 0;\n          }\n        }]\n\n      }\n    );\n  };\n\n  drawFullScreen(t, code, dataChecker, fbChecker);\n});\n\ng.test('three_quarters').\ndesc('Test a shader that discards all but the upper-left quadrant fragments').\nfn((t) => {\n  const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) u32 {\n  _ = uniformValues[0];\n  if (pos.x >= 0.5 * ${kWidth} || pos.y >= 0.5 * ${kHeight}) {\n    discard;\n  }\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return idx;\n}\n`;\n\n  // Only the the upper left quadrant is kept.\n  const dataChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        const is_x = idx % 2 === 0;\n        if (is_x) {\n          return value < 0.5 * kWidth;\n        } else {\n          return value < 0.5 * kHeight;\n        }\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'data exp ==',\n          getValueForCell: (idx) => {\n            const is_x = idx % 2 === 0;\n            if (is_x) {\n              const x = Math.floor(idx / 2) % kWidth;\n              if (x >= kWidth / 2) {\n                return 0;\n              }\n            } else {\n              const y = Math.floor((idx - 1) / kWidth);\n              if (y >= kHeight / 2) {\n                return 0;\n              }\n            }\n            if (is_x) {\n              return `< ${0.5 * kWidth}`;\n            } else {\n              return `< ${0.5 * kHeight}`;\n            }\n          }\n        }]\n\n      }\n    );\n  };\n  const fbChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        const x = idx % kWidth;\n        const y = Math.floor(idx / kWidth);\n        if (x < kWidth / 2 && y < kHeight / 2) {\n          return value < kWidth * kHeight / 4;\n        } else {\n          return value === kWidth * kHeight;\n        }\n        return value < kWidth * kHeight / 4;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'fb exp ==',\n          getValueForCell: (idx) => {\n            const x = idx % kWidth;\n            const y = Math.floor(idx / kWidth);\n            if (x < kWidth / 2 && y < kHeight / 2) {\n              return 'any';\n            } else {\n              return 0;\n            }\n          }\n        }]\n\n      }\n    );\n  };\n\n  drawFullScreen(t, code, dataChecker, fbChecker);\n});\n\ng.test('function_call').\ndesc('Test discards happening in a function call').\nfn((t) => {\n  const code = `\n${kSharedCode}\n\nfn foo(pos : vec2f) {\n  let p = vec2i(pos);\n  if p.x <= ${kWidth} / 2 && p.y <= ${kHeight} / 2 {\n    discard;\n  }\n  if p.x >= ${kWidth} / 2 && p.y >= ${kHeight} / 2 {\n    discard;\n  }\n}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) u32 {\n  _ = uniformValues[0];\n  foo(pos.xy);\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return idx;\n}\n`;\n\n  // Only the upper right and bottom left quadrants are kept.\n  const dataChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        const is_x = idx % 2 === 0;\n        if (value === 0.0) {\n          return is_x ? a[idx + 1] === 0 : a[idx - 1] === 0;\n        }\n\n        let expect = is_x ? kWidth : kHeight;\n        expect = 0.5 * expect;\n        if (value < expect) {\n          return is_x ? a[idx + 1] > 0.5 * kWidth : a[idx - 1] > 0.5 * kHeight;\n        } else {\n          return is_x ? a[idx + 1] < 0.5 * kWidth : a[idx - 1] < 0.5 * kHeight;\n        }\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'data exp ==',\n          getValueForCell: (idx) => {\n            if (idx < kWidth * kHeight / 2) {\n              return 'any';\n            } else {\n              return 0;\n            }\n          }\n        }]\n\n      }\n    );\n  };\n  const fbChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        const x = idx % kWidth;\n        const y = Math.floor(idx / kWidth);\n        if (x >= kWidth / 2 && y >= kHeight / 2 || x <= kWidth / 2 && y <= kHeight / 2) {\n          return value === kWidth * kHeight;\n        } else {\n          return value < kWidth * kHeight / 2;\n        }\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'fb exp ==',\n          getValueForCell: (idx) => {\n            const x = idx % kWidth;\n            const y = Math.floor(idx / kWidth);\n            if (\n            x <= kWidth / 2 && y <= kHeight / 2 ||\n            x >= kWidth / 2 && y >= kHeight / 2)\n            {\n              return kWidth * kHeight;\n            }\n            return 'any';\n          }\n        }]\n\n      }\n    );\n  };\n\n  drawFullScreen(t, code, dataChecker, fbChecker);\n});\n\ng.test('loop').\ndesc('Test discards in a loop').\nfn((t) => {\n  const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) u32 {\n  _ = uniformValues[0];\n  for (var i = 0; i < 2; i++) {\n    if i > 0 {\n      discard;\n    }\n  }\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return 1;\n}\n`;\n\n  // No storage writes occur.\n  const dataChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === 0;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'data exp ==',\n          getValueForCell: (idx) => {\n            return 0;\n          }\n        }]\n\n      }\n    );\n  };\n\n  // No fragment outputs occur.\n  const fbChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === kWidth * kHeight;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'fb exp ==',\n          getValueForCell: (idx) => {\n            return kWidth * kHeight;\n          }\n        }]\n\n      }\n    );\n  };\n\n  drawFullScreen(t, code, dataChecker, fbChecker);\n});\n\ng.test('continuing').\ndesc('Test discards in a loop').\nfn((t) => {\n  const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) u32 {\n  _ = uniformValues[0];\n  var i = 0;\n  loop {\n    continuing {\n      if i > 0 {\n        discard;\n      }\n      i++;\n      break if i >= 2;\n    }\n  }\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return 1;\n}\n`;\n\n  // No storage writes occur.\n  const dataChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === 0;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'data exp ==',\n          getValueForCell: (idx) => {\n            return 0;\n          }\n        }]\n\n      }\n    );\n  };\n\n  // No fragment outputs occur.\n  const fbChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === kWidth * kHeight;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'fb exp ==',\n          getValueForCell: (idx) => {\n            return kWidth * kHeight;\n          }\n        }]\n\n      }\n    );\n  };\n\n  drawFullScreen(t, code, dataChecker, fbChecker);\n});\n\ng.test('uniform_read_loop').\ndesc('Test that helpers read a uniform value in a loop').\nfn((t) => {\n  const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) u32 {\n  discard;\n  for (var i = 0u; i < uniformValues[0]; i++) {\n  }\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return 1;\n}\n`;\n\n  // No storage writes occur.\n  const dataChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === 0;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'data exp ==',\n          getValueForCell: (idx) => {\n            return 0;\n          }\n        }]\n\n      }\n    );\n  };\n\n  // No fragment outputs occur.\n  const fbChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        return value === kWidth * kHeight;\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'fb exp ==',\n          getValueForCell: (idx) => {\n            return kWidth * kHeight;\n          }\n        }]\n\n      }\n    );\n  };\n\n  drawFullScreen(t, code, dataChecker, fbChecker);\n});\n\ng.test('derivatives').\ndesc('Test that derivatives are correct in the presence of discard').\nfn((t) => {\n  const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) u32 {\n  let ipos = vec2i(pos.xy);\n  let lsb = ipos & vec2(0x1);\n  let left_sel = select(2, 4, lsb.y == 1);\n  let right_sel = select(1, 3, lsb.y == 1);\n  let uidx = select(left_sel, right_sel, lsb.x == 1);\n  if ((lsb.x | lsb.y) & 0x1) == 0 {\n    discard;\n  }\n\n  let v = uniformValues[uidx];\n  let idx = atomicAdd(&atomicIndex, 1);\n  let dx = dpdx(f32(v));\n  let dy = dpdy(f32(v));\n  output[idx] = vec2(dx, dy);\n  return idx;\n}\n`;\n\n  // One pixel per quad is discarded. The derivatives values are always the same +/- 3.\n  const dataChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        if (idx < 3 * (2 * kWidth * kHeight) / 4) {\n          return value === -3 || value === 3;\n        } else {\n          return value === 0;\n        }\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'data exp ==',\n          getValueForCell: (idx) => {\n            if (idx < 3 * (2 * kWidth * kHeight) / 4) {\n              return '+/- 3';\n            } else {\n              return 0;\n            }\n          }\n        }]\n\n      }\n    );\n  };\n\n  // 3/4 of the fragments are written.\n  const fbChecker = (a) => {\n    return checkElementsPassPredicate(\n      a,\n      (idx, value) => {\n        const x = idx % kWidth;\n        const y = Math.floor(idx / kWidth);\n        if (((x | y) & 0x1) === 0) {\n          return value === kWidth * kHeight;\n        } else {\n          return value < 3 * (kWidth * kHeight) / 4;\n        }\n      },\n      {\n        predicatePrinter: [\n        {\n          leftHeader: 'fb exp ==',\n          getValueForCell: (idx) => {\n            const x = idx % kWidth;\n            const y = Math.floor(idx / kWidth);\n            if (((x | y) & 0x1) === 0) {\n              return kWidth * kHeight;\n            } else {\n              return 'any';\n            }\n          }\n        }]\n\n      }\n    );\n  };\n\n  drawFullScreen(t, code, dataChecker, fbChecker);\n});"],"mappings":"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","ignoreList":[]}