{"version":3,"file":"phony.spec.js","names":["description","makeTestGroup","keysOf","GPUTest","g","runStatementTest","t","ty","values","wgsl_main","wgsl","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","maxOutputValues","outputBuffer","createBufferTracked","size","usage","GPUBufferUsage","STORAGE","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual","kTests","literal","src","call","call_in_subexpr","nested_call","unreached","loop","test","desc","params","u","combine","fn","Int32Array","case"],"sources":["../../../../../src/webgpu/shader/execution/statement/phony.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nPhony assignment execution tests\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\n\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/**\n * Builds, runs then checks the output of a statement shader test.\n *\n * @param t The test object\n * @param ty The WGSL scalar type to be written\n * @param values The expected output values of type ty\n * @param wgsl_main The body of the WGSL entry point.\n */\nexport function runStatementTest(\nt,\nty,\nvalues,\nwgsl_main)\n{\n  const wgsl = `\nstruct Outputs {\n  data  : array<${ty}>,\n};\nvar<private> count: u32 = 0;\n\n@group(0) @binding(1) var<storage, read_write> outputs : Outputs;\n\nfn put(value : ${ty}) -> ${ty} {\n  outputs.data[count] = value;\n  count += 1;\n  return value;\n}\n\n@compute @workgroup_size(1)\nfn main() {\n  let x = outputs.data[0];\n  ${wgsl_main}\n}\n`;\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({ code: wgsl }),\n      entryPoint: 'main'\n    }\n  });\n\n  const maxOutputValues = 1000;\n  const outputBuffer = t.createBufferTracked({\n    size: 4 * (1 + maxOutputValues),\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [{ binding: 1, resource: { buffer: outputBuffer } }]\n  });\n\n  // Run the shader.\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(outputBuffer, values);\n}\n\n// In each case, the program will write non-zero values to the prefix\n// of the output buffer.  The values to check against will cover all\n// those values, plus a 0 just beyond the last written value.\nconst kTests = {\n  literal: {\n    src: `_ = true;`,\n    values: [0]\n  },\n  call: {\n    // RHS evaluated once.\n    src: `_ = put(42i);`,\n    values: [42, 0]\n  },\n  call_in_subexpr: {\n    src: `_ = put(42i) + 1;`,\n    values: [42, 0]\n  },\n  nested_call: {\n    src: `_ = put(put(42)+1);`,\n    values: [42, 43, 0]\n  },\n  unreached: {\n    src: `if (false) { _ = put(1); }`,\n    values: [0]\n  },\n  loop: {\n    src: `for (var i=5; i<7; i++) { _ = put(i); }`,\n    values: [5, 6, 0]\n  }\n};\n\ng.test('executes').\ndesc('Tests the RHS is evaluated once when the statement is executed.').\nparams((u) => u.combine('case', keysOf(kTests))).\nfn((t) => {\n  runStatementTest(\n    t,\n    'i32',\n    new Int32Array(kTests[t.params.case].values),\n    kTests[t.params.case].src\n  );\n});"],"mappings":"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","ignoreList":[]}