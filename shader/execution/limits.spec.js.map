{"version":3,"file":"limits.spec.js","names":["description","makeTestGroup","keysOf","iterRange","GPUTest","checkElementsEqualGenerated","g","kMaxStructMembers","kMaxCompositeNestingDepth","kMaxBraceNestingDepth","kMaxFunctionParameters","kMaxSwitchCaseSelectors","kMaxPrivateStorageSize","kMaxFunctionStorageSize","kMaxConstArrayElements","runShaderTest","t","wgsl","input","expected","constants","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","outputBuffer","makeBufferWithContents","GPUBufferUsage","STORAGE","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesPassCheck","data","type","Uint32Array","typedLength","length","test","desc","fn","m","_i","s","b","i","p","kArrayElements","bool","size","to_u32","x","u32","vec4u","params","u","combine","elements","Math","floor","maxSize","limits","maxComputeWorkgroupStorageSize","expr"],"sources":["../../../../src/webgpu/shader/execution/limits.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Execution tests for WGSL limits.`;import { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { keysOf } from '../../../common/util/data_tables.js';\nimport { iterRange } from '../../../common/util/util.js';\nimport { GPUTest } from '../../gpu_test.js';\nimport { checkElementsEqualGenerated } from '../../util/check_contents.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// The limits that we test.\nconst kMaxStructMembers = 1023;\nconst kMaxCompositeNestingDepth = 15;\nconst kMaxBraceNestingDepth = 127;\nconst kMaxFunctionParameters = 255;\nconst kMaxSwitchCaseSelectors = 1023;\nconst kMaxPrivateStorageSize = 8192;\nconst kMaxFunctionStorageSize = 8192;\nconst kMaxConstArrayElements = 2047;\n\n/**\n * Run a shader and check that the buffer output matches expectations.\n *\n * @param t The test object\n * @param wgsl The shader source\n * @param input The initial buffer contents\n * @param expected The expected buffer contents after running the shader\n * @param constants The optional pipeline overridable constant values\n */\nfunction runShaderTest(\nt,\nwgsl,\ninput,\nexpected,\nconstants)\n{\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({ code: wgsl }),\n      entryPoint: 'main',\n      constants\n    }\n  });\n\n  // Allocate a buffer and copy the input values to it.\n  const outputBuffer = t.makeBufferWithContents(\n    input,\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\n  );\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [{ binding: 0, resource: { buffer: outputBuffer } }]\n  });\n\n  // Run the shader.\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  // Check that the output matches the expected values.\n  t.expectGPUBufferValuesPassCheck(\n    outputBuffer,\n    (data) => checkElementsEqualGenerated(data, expected),\n    {\n      type: Uint32Array,\n      typedLength: input.length\n    }\n  );\n}\n\ng.test('struct_members').\ndesc(`Test that structures with the maximum number of members are supported.`).\nfn((t) => {\n  let code = `struct S {`;\n  for (let m = 0; m < kMaxStructMembers; m++) {\n    code += `  m${m}: u32,\\n`;\n  }\n  code += `}\n\n    @group(0) @binding(0) var<storage, read_write> buffer : S;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      buffer = S();\n    }\n    `;\n\n  runShaderTest(\n    t,\n    code,\n    new Uint32Array([...iterRange(kMaxStructMembers, (_i) => 0xdeadbeef)]),\n    (_i) => 0\n  );\n});\n\ng.test('nesting_depth_composite_struct').\ndesc(`Test that composite types can be nested up to the maximum level.`).\nfn((t) => {\n  let code = `struct S0 { a : u32 }\\n`;\n  for (let s = 1; s < kMaxCompositeNestingDepth; s++) {\n    code += `struct S${s} { a : S${s - 1} }\\n`;\n  }\n  code += `\n    @group(0) @binding(0) var<storage, read_write> buffer : S${kMaxCompositeNestingDepth - 1};\n\n    @compute @workgroup_size(1)\n    fn main() {\n      buffer = S${kMaxCompositeNestingDepth - 1}();\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([0xdeadbeef]), (_i) => 0);\n});\n\ng.test('nesting_depth_composite_array').\ndesc(`Test that composite types can be nested up to the maximum level.`).\nfn((t) => {\n  let type = ``;\n  for (let m = 0; m < kMaxCompositeNestingDepth; m++) {\n    type += `array<`;\n  }\n  type += 'u32';\n  for (let m = 0; m < kMaxCompositeNestingDepth; m++) {\n    type += `, 1>`;\n  }\n\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : ${type};\n\n    @compute @workgroup_size(1)\n    fn main() {\n      buffer = ${type}();\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([0xdeadbeef]), (_i) => 0);\n});\n\ng.test('nesting_depth_braces').\ndesc(`Test that brace-enclosed statements can be nested up to the maximum level.`).\nfn((t) => {\n  let code = `@group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${kMaxBraceNestingDepth}>;\n    @compute @workgroup_size(1)\n\n    fn main() {\n    `;\n  // Note: We subtract one from the spec value to account for the function body, and another one\n  // for the nested statement itself.\n  for (let b = 0; b < kMaxBraceNestingDepth - 2; b++) {\n    code += `  {\\n`;\n  }\n  code += `    buffer[0] = 42;\\n`;\n  for (let b = 0; b < kMaxBraceNestingDepth - 2; b++) {\n    code += `  }\\n`;\n  }\n  code += `\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([...iterRange(kMaxBraceNestingDepth, (i) => i)]), (i) => {\n    return i === 0 ? 42 : i;\n  });\n});\n\ng.test('function_parameters').\ndesc(`Test that functions can have the maximum number of parameters.`).\nfn((t) => {\n  let code = `@group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${kMaxFunctionParameters}>;\n\n    fn bar(`;\n  for (let p = 0; p < kMaxFunctionParameters; p++) {\n    code += `p${p}: u32, `;\n  }\n  code += `) {`;\n\n  for (let p = 0; p < kMaxFunctionParameters; p++) {\n    code += `buffer[${p}] = p${p};\\n`;\n  }\n\n  code += `}\n\n    @compute @workgroup_size(1)\n    fn main() {\n      bar(`;\n  for (let p = 0; p < kMaxFunctionParameters; p++) {\n    code += `${p}, `;\n  }\n  code += `);\n    }\n    `;\n\n  runShaderTest(\n    t,\n    code,\n    new Uint32Array([...iterRange(kMaxFunctionParameters, (_i) => 0xdeadbeef)]),\n    (i) => i\n  );\n});\n\ng.test('switch_case_selectors').\ndesc(\n  `Test that switch statements can have the maximum number of case selectors in separate clauses.`\n).\nfn((t) => {\n  let code = `@group(0) @binding(0) var<storage, read_write> buffer : array<u32, 2>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      switch (buffer[0]) {\n        default {}`;\n  for (let s = 0; s < kMaxSwitchCaseSelectors - 1; s++) {\n    code += `\n        case ${s} { buffer[1] = ${s}; }`;\n  }\n  code += `\n      };\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([42, 0xdeadbeef]), (_i) => 42);\n});\n\ng.test('switch_case_selectors_same_clause').\ndesc(\n  `Test that switch statements can have the maximum number of case selectors in the same clause.`\n).\nfn((t) => {\n  let code = `@group(0) @binding(0) var<storage, read_write> buffer : array<u32, 2>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      switch (buffer[0]) {\n        default {}\n        case `;\n  for (let s = 0; s < kMaxSwitchCaseSelectors - 1; s++) {\n    code += `${s}, `;\n  }\n  code += ` { buffer[1] = 42; }\n      };\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([999, 0xdeadbeef]), (i) => {\n    return i === 0 ? 999 : 42;\n  });\n});\n\n// A list of types used for array elements.\nconst kArrayElements = {\n  bool: {\n    size: 4,\n    to_u32: (x) => `u32(${x})`\n  },\n  u32: {\n    size: 4,\n    to_u32: (x) => x\n  },\n  vec4u: {\n    size: 16,\n    to_u32: (x) => `dot(${x}, ${x})`\n  }\n};\n\ng.test('private_array_byte_size').\ndesc(`Test that arrays in the private address space up to the maximum size are supported.`).\nparams((u) => u.combine('type', keysOf(kArrayElements))).\nfn((t) => {\n  const type = kArrayElements[t.params.type];\n  const elements = Math.floor(kMaxPrivateStorageSize / type.size);\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${elements}>;\n\n    var<private> arr : array<${t.params.type}, ${elements}>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      for (var i = 0; i < ${elements}; i++) {\n        buffer[i] = ${type.to_u32('arr[i]')};\n      }\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([...iterRange(elements, (_i) => 0xdeadbeef)]), (_i) => 0);\n});\n\ng.test('private_array_combined_byte_size').\ndesc(`Test the combined sizes of variables in the private address space.`).\nparams((u) => u.combine('type', keysOf(kArrayElements))).\nfn((t) => {\n  const type = kArrayElements[t.params.type];\n  const elements = Math.floor(kMaxPrivateStorageSize / type.size / 4);\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${elements}>;\n\n    var<private> arr1 : array<${t.params.type}, ${elements}>;\n    var<private> arr2 : array<${t.params.type}, ${elements}>;\n    var<private> arr3 : array<${t.params.type}, ${elements}>;\n    var<private> arr4 : array<${t.params.type}, ${elements}>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      for (var i = 0; i < ${elements}; i++) {\n        buffer[i] = ${type.to_u32('arr1[i]')} + ${type.to_u32('arr2[i]')} +\n                    ${type.to_u32('arr3[i]')} + ${type.to_u32('arr4[i]')};\n      }\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([...iterRange(elements, (_i) => 0xdeadbeef)]), (_i) => 0);\n});\n\ng.test('function_array_byte_size').\ndesc(`Test that arrays in the function address space up to the maximum size are supported.`).\nparams((u) => u.combine('type', keysOf(kArrayElements))).\nfn((t) => {\n  const type = kArrayElements[t.params.type];\n  const elements = Math.floor(kMaxFunctionStorageSize / type.size);\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${elements}>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      var arr : array<${t.params.type}, ${elements}>;\n      for (var i = 0; i < ${elements}; i++) {\n        buffer[i] = ${type.to_u32('arr[i]')};\n      }\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([...iterRange(elements, (_i) => 0xdeadbeef)]), (_i) => 0);\n});\n\ng.test('function_variable_combined_byte_size').\ndesc(`Test the combined sizes of variables in the function address space.`).\nparams((u) => u.combine('type', keysOf(kArrayElements))).\nfn((t) => {\n  const type = kArrayElements[t.params.type];\n  const elements = Math.floor(kMaxFunctionStorageSize / type.size / 4);\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${elements}>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      var arr1 : array<${t.params.type}, ${elements}>;\n      var arr2 : array<${t.params.type}, ${elements}>;\n      var arr3 : array<${t.params.type}, ${elements}>;\n      var arr4 : array<${t.params.type}, ${elements}>;\n      for (var i = 0; i < ${elements}; i++) {\n        buffer[i] = ${type.to_u32('arr1[i]')} + ${type.to_u32('arr2[i]')} +\n                    ${type.to_u32('arr3[i]')} + ${type.to_u32('arr4[i]')};\n      }\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([...iterRange(elements, (_i) => 0xdeadbeef)]), (_i) => 0);\n});\n\ng.test('workgroup_array_byte_size').\ndesc(`Test that arrays in the workgroup address space up to the maximum size are supported.`).\nparams((u) => u.combine('type', keysOf(kArrayElements))).\nfn((t) => {\n  const maxSize = t.device.limits.maxComputeWorkgroupStorageSize;\n  const type = kArrayElements[t.params.type];\n  const elements = Math.floor(maxSize / type.size);\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${elements}>;\n\n    var<workgroup> arr : array<${t.params.type}, ${elements}>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      for (var i = 0; i < ${elements}; i++) {\n        buffer[i] = ${type.to_u32('arr[i]')};\n      }\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([...iterRange(elements, (_i) => 0xdeadbeef)]), (_i) => 0);\n});\n\ng.test('workgroup_array_byte_size_override').\ndesc(`Test that arrays in the workgroup address space up to the maximum size are supported.`).\nparams((u) => u.combine('type', keysOf(kArrayElements))).\nfn((t) => {\n  const maxSize = t.device.limits.maxComputeWorkgroupStorageSize;\n  const type = kArrayElements[t.params.type];\n  const elements = Math.floor(maxSize / type.size);\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : array<u32, ${elements}>;\n\n    // Set the default element count far too large, which we later override with a valid value.\n    override elements = ${elements} * 1000;\n    var<workgroup> arr : array<${t.params.type}, elements>;\n\n    @compute @workgroup_size(1)\n    fn main() {\n      for (var i = 0; i < ${elements}; i++) {\n        buffer[i] = ${type.to_u32('arr[i]')};\n      }\n    }\n    `;\n\n  runShaderTest(t, code, new Uint32Array([...iterRange(elements, (_i) => 0xdeadbeef)]), (_i) => 0, {\n    elements\n  });\n});\n\ng.test('const_array_elements').\ndesc(`Test that constant array expressions with the maximum number of elements are supported.`).\nfn((t) => {\n  const type = `array<u32, ${kMaxConstArrayElements}>`;\n\n  let expr = `${type}(`;\n  for (let i = 0; i < kMaxConstArrayElements; i++) {\n    expr += `${i}, `;\n  }\n  expr += `)`;\n\n  const code = `\n    @group(0) @binding(0) var<storage, read_write> buffer : ${type};\n\n    @compute @workgroup_size(1)\n    fn main() {\n      buffer = ${expr};\n    }\n    `;\n\n  runShaderTest(\n    t,\n    code,\n    new Uint32Array([...iterRange(kMaxConstArrayElements, (_i) => 0xdeadbeef)]),\n    (i) => i\n  );\n});"],"mappings":"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","ignoreList":[]}