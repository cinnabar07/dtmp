{"version":3,"file":"while.spec.js","names":["description","makeTestGroup","GPUTest","runFlowControlTest","g","test","desc","params","u","combine","fn","t","f","expect_order","value","expect_not_reached","entrypoint","extra"],"sources":["../../../../../src/webgpu/shader/execution/flow_control/while.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nFlow control tests for while-loops.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nimport { runFlowControlTest } from './harness.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('while_basic').\ndesc('Test that flow control executes a while-loop body the correct number of times').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(\n    t,\n    (f) =>\n    `\n  ${f.expect_order(0)}\n  var i = ${f.value(0)};\n  while (i < ${f.value(5)}) {\n    ${f.expect_order(1, 2, 3, 4, 5)}\n    i++;\n  }\n  ${f.expect_order(6)}\n`\n  );\n});\n\ng.test('while_break').\ndesc('Test that flow control exits a while-loop when reaching a break statement').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(\n    t,\n    (f) =>\n    `\n  ${f.expect_order(0)}\n  var i = ${f.value(0)};\n  while (i < ${f.value(5)}) {\n    ${f.expect_order(1, 3, 5, 7)}\n    if (i == 3) {\n      break;\n      ${f.expect_not_reached()}\n    }\n    ${f.expect_order(2, 4, 6)}\n    i++;\n  }\n  ${f.expect_order(8)}\n`\n  );\n});\n\ng.test('while_continue').\ndesc('Test flow control for a while-loop continue statement').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(\n    t,\n    (f) =>\n    `\n  ${f.expect_order(0)}\n  var i = ${f.value(0)};\n  while (i < ${f.value(5)}) {\n    ${f.expect_order(1, 3, 5, 7, 8)}\n    if (i == 3) {\n      i++;\n      continue;\n      ${f.expect_not_reached()}\n    }\n    ${f.expect_order(2, 4, 6, 9)}\n    i++;\n  }\n  ${f.expect_order(10)}\n`\n  );\n});\n\ng.test('while_nested_break').\ndesc('Test that flow control exits a nested while-loop when reaching a break statement').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(\n    t,\n    (f) =>\n    `\n  ${f.expect_order(0)}\n  var i = ${f.value(0)};\n  while (i < ${f.value(3)}) {\n    ${f.expect_order(1, 5, 11)}\n    i++;\n    var j = ${f.value(0)};\n    while (j < i) {\n      ${f.expect_order(2, 6, 8, 12)}\n      j++;\n      if ((i+j) & 2) == 0 {\n        ${f.expect_order(9, 13)}\n        break;\n        ${f.expect_not_reached()}\n      }\n      ${f.expect_order(3, 7)}\n    }\n    ${f.expect_order(4, 10, 14)}\n  }\n  ${f.expect_order(15)}\n`\n  );\n});\n\ng.test('while_nested_continue').\ndesc('Test flow control for a nested while-loop with a continue statement').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(\n    t,\n    (f) =>\n    `\n  ${f.expect_order(0)}\n  var i = ${f.value(0)};\n  while (i < ${f.value(3)}) {\n    ${f.expect_order(1, 5, 11)}\n    i++;\n    var j = ${f.value(0)};\n    while (j < i) {\n      ${f.expect_order(2, 6, 8, 12, 14, 16)}\n      j++;\n      if ((i+j) & 2) == 0 {\n        ${f.expect_order(9, 13, 15)}\n        continue;\n        ${f.expect_not_reached()}\n      }\n      ${f.expect_order(3, 7, 17)}\n    }\n    ${f.expect_order(4, 10, 18)}\n  }\n  ${f.expect_order(19)}\n`\n  );\n});\n\ng.test('while_logical_and_condition').\ndesc('Test flow control for a while-loop with a logical and condition').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(t, (f) => ({\n    entrypoint: `\n  ${f.expect_order(0)}\n  var i = ${f.value(0)};\n  while (a(i) && b(i)) {\n    ${f.expect_order(3, 6)}\n    i++;\n  }\n  ${f.expect_order(8)}\n      `,\n    extra: `\nfn a(i : i32) -> bool {\n  ${f.expect_order(1, 4, 7)}\n  return i < ${f.value(2)};\n}\nfn b(i : i32) -> bool {\n  ${f.expect_order(2, 5)}\n  return i < ${f.value(5)};\n}\n      `\n  }));\n});\n\ng.test('while_logical_or_condition').\ndesc('Test flow control for a while-loop with a logical or condition').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(t, (f) => ({\n    entrypoint: `\n  ${f.expect_order(0)}\n  var i = ${f.value(0)};\n  while (a(i) || b(i)) {\n    ${f.expect_order(2, 4, 7, 10)}\n    i++;\n  }\n  ${f.expect_order(13)}\n      `,\n    extra: `\nfn a(i : i32) -> bool {\n  ${f.expect_order(1, 3, 5, 8, 11)}\n  return i < ${f.value(2)};\n}\nfn b(i : i32) -> bool {\n  ${f.expect_order(6, 9, 12)}\n  return i < ${f.value(4)};\n}\n      `\n  }));\n});"],"mappings":"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","ignoreList":[]}