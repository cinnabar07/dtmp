{"version":3,"file":"phony.spec.js","names":["description","makeTestGroup","GPUTest","runFlowControlTest","g","test","desc","params","u","combine","fn","t","f","entrypoint","expect_order","extra"],"sources":["../../../../../src/webgpu/shader/execution/flow_control/phony.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nFlow control tests for phony assignments.\n`;import { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nimport { runFlowControlTest } from './harness.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('phony_assign_call_basic').\ndesc('Test flow control for a phony assigned with a single function call').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(t, (f) => ({\n    entrypoint: `\n  ${f.expect_order(0)}\n  _ = f();\n  ${f.expect_order(2)}\n`,\n    extra: `\nfn f() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n`\n  }));\n});\n\ng.test('phony_assign_call_must_use').\ndesc(\n  'Test flow control for a phony assigned with a single function call annotated with @must_use'\n).\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(t, (f) => ({\n    entrypoint: `\n  ${f.expect_order(0)}\n  _ = f();\n  ${f.expect_order(2)}\n`,\n    extra: `\n@must_use\nfn f() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n`\n  }));\n});\n\ng.test('phony_assign_call_nested').\ndesc('Test flow control for a phony assigned with nested function calls').\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(t, (f) => ({\n    entrypoint: `\n${f.expect_order(0)}\n_ = c(a(), b());\n${f.expect_order(4)}\n`,\n    extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn c(x : i32, y : i32) -> i32 {\n  ${f.expect_order(3)}\n  return x + y;\n}\n`\n  }));\n});\n\ng.test('phony_assign_call_nested_must_use').\ndesc(\n  'Test flow control for a phony assigned with nested function calls, all annotated with @must_use'\n).\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(t, (f) => ({\n    entrypoint: `\n${f.expect_order(0)}\n_ = c(a(), b());\n${f.expect_order(4)}\n`,\n    extra: `\n@must_use\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n@must_use\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\n@must_use\nfn c(x : i32, y : i32) -> i32 {\n  ${f.expect_order(3)}\n  return x + y;\n}\n`\n  }));\n});\n\ng.test('phony_assign_call_builtin').\ndesc(\n  'Test flow control for a phony assigned with a builtin call, with two function calls as arguments'\n).\nparams((u) => u.combine('preventValueOptimizations', [true, false])).\nfn((t) => {\n  runFlowControlTest(t, (f) => ({\n    entrypoint: `\n${f.expect_order(0)}\n_ = max(a(), b());\n${f.expect_order(3)}\n`,\n    extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\n`\n  }));\n});"],"mappings":"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","ignoreList":[]}