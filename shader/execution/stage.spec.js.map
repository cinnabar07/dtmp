{"version":3,"file":"stage.spec.js","names":["description","makeTestGroup","GPUTest","checkElementsEqual","g","test","desc","fn","t","code","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","entryPoint","buffer","makeBufferWithContents","Uint32Array","GPUBufferUsage","STORAGE","COPY_SRC","COPY_DST","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","bufferReadback","readGPUBufferRangeTyped","srcByteOffset","type","typedLength","method","got","data","expected","expectOK","width","height","format","texture","createTextureTracked","size","usage","GPUTextureUsage","RENDER_ATTACHMENT","TEXTURE_BINDING","dst","createBufferTracked","createRenderPipeline","vertex","fragment","targets","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","draw","copyTextureToBuffer","mipLevel","origin","x","y","z","bytesPerRow","depthOrArrayLayers","expectGPUBufferValuesEqual","Uint8Array"],"sources":["../../../../src/webgpu/shader/execution/stage.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Test trivial shaders for each shader stage kind`; // There are many many more shaders executed in other tests.\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { GPUTest } from '../../gpu_test.js';\nimport { checkElementsEqual } from '../../util/check_contents.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('basic_compute').\ndesc(`Test a trivial compute shader`).\nfn(async (t) => {\n  const code = `\n\n@group(0) @binding(0)\nvar<storage, read_write> v : vec4u;\n\n@compute @workgroup_size(1)\nfn main() {\n  v = vec4u(1,2,3,42);\n}`;\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code\n      }),\n      entryPoint: 'main'\n    }\n  });\n\n  const buffer = t.makeBufferWithContents(\n    new Uint32Array([0, 0, 0, 0]),\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  );\n\n  const bg = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n    {\n      binding: 0,\n      resource: {\n        buffer\n      }\n    }]\n\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.dispatchWorkgroups(1, 1, 1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  const bufferReadback = await t.readGPUBufferRangeTyped(buffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: 4,\n    method: 'copy'\n  });\n  const got = bufferReadback.data;\n  const expected = new Uint32Array([1, 2, 3, 42]);\n\n  t.expectOK(checkElementsEqual(got, expected));\n});\n\ng.test('basic_render').\ndesc(`Test trivial vertex and fragment shaders`).\nfn((t) => {\n  const code = `\n@vertex\nfn vert_main(@builtin(vertex_index) idx: u32) -> @builtin(position) vec4f {\n  // A right triangle covering the whole framebuffer.\n  const pos = array(\n    vec2f(-1,-3),\n    vec2f(3,1),\n    vec2f(-1,1));\n  return vec4f(pos[idx], 0, 1);\n}\n\n@fragment\nfn frag_main() -> @location(0) vec4f {\n  return vec4(0, 1, 0, 1); // green\n}\n`;\n  const module = t.device.createShaderModule({ code });\n\n  const [width, height] = [8, 8];\n  const format = 'rgba8unorm';\n  const texture = t.createTextureTracked({\n    size: { width, height },\n    usage:\n    GPUTextureUsage.RENDER_ATTACHMENT |\n    GPUTextureUsage.TEXTURE_BINDING |\n    GPUTextureUsage.COPY_SRC,\n    format\n  });\n\n  // We'll copy one pixel only.\n  const dst = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  });\n\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: { module, entryPoint: 'vert_main' },\n    fragment: { module, entryPoint: 'frag_main', targets: [{ format }] }\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [{ view: texture.createView(), loadOp: 'clear', storeOp: 'store' }]\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(3);\n  pass.end();\n\n  encoder.copyTextureToBuffer(\n    { texture, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n    { buffer: dst, bytesPerRow: 256 },\n    { width: 1, height: 1, depthOrArrayLayers: 1 }\n  );\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  // Expect one green pixel.\n  t.expectGPUBufferValuesEqual(dst, new Uint8Array([0x00, 0xff, 0x00, 0xff]));\n});"],"mappings":"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","ignoreList":[]}