{"version":3,"file":"transpose.spec.js","names":["description","makeTestGroup","GPUTest","Type","allInputSources","onlyConstInputSource","run","abstractFloatBuiltin","builtin","d","g","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","mat","abstractFloat","inputSource","f32","beforeAllSubcases","selectDeviceOrSkipTestCase","f16"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/transpose.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution tests for the 'transpose' builtin function\n\nT is abstract-float, f32, or f16\n@const transpose(e: matRxC<T> ) -> matCxR<T>\nReturns the transpose of e.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { Type } from '../../../../../util/conversion.js';\nimport { allInputSources, onlyConstInputSource, run } from '../../expression.js';\n\nimport { abstractFloatBuiltin, builtin } from './builtin.js';\nimport { d } from './transpose.cache.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('abstract_float').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions').\ndesc(`abstract float tests`).\nparams((u) =>\nu.\ncombine('inputSource', onlyConstInputSource).\ncombine('cols', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nfn(async (t) => {\n  const cols = t.params.cols;\n  const rows = t.params.rows;\n  const cases = await d.get(`abstract_mat${cols}x${rows}_const`);\n  await run(\n    t,\n    abstractFloatBuiltin('transpose'),\n    [Type.mat(cols, rows, Type.abstractFloat)],\n    Type.mat(rows, cols, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('f32').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions').\ndesc(`f32 tests`).\nparams((u) =>\nu.\ncombine('inputSource', allInputSources).\ncombine('cols', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nfn(async (t) => {\n  const cols = t.params.cols;\n  const rows = t.params.rows;\n  const cases = await d.get(\n    t.params.inputSource === 'const' ?\n    `f32_mat${cols}x${rows}_const` :\n    `f32_mat${cols}x${rows}_non_const`\n  );\n  await run(\n    t,\n    builtin('transpose'),\n    [Type.mat(cols, rows, Type.f32)],\n    Type.mat(rows, cols, Type.f32),\n    t.params,\n    cases\n  );\n});\n\ng.test('f16').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-builtin-functions').\ndesc(`f16 tests`).\nparams((u) =>\nu.\ncombine('inputSource', allInputSources).\ncombine('cols', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('shader-f16');\n}).\nfn(async (t) => {\n  const cols = t.params.cols;\n  const rows = t.params.rows;\n  const cases = await d.get(\n    t.params.inputSource === 'const' ?\n    `f16_mat${cols}x${rows}_const` :\n    `f16_mat${cols}x${rows}_non_const`\n  );\n  await run(\n    t,\n    builtin('transpose'),\n    [Type.mat(cols, rows, Type.f16)],\n    Type.mat(rows, cols, Type.f16),\n    t.params,\n    cases\n  );\n});"],"mappings":"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","ignoreList":[]}