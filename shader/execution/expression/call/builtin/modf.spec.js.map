{"version":3,"file":"modf.spec.js","names":["description","makeTestGroup","GPUTest","Type","abstractFloatShaderBuilder","allInputSources","basicExpressionBuilder","onlyConstInputSource","run","d","g","wholeBuilder","value","fractBuilder","abstractWholeBuilder","abstractFractBuilder","test","specURL","desc","params","u","combine","fn","t","cases","get","f32","vec2f","vec3f","vec4f","beforeAllSubcases","selectDeviceOrSkipTestCase","requiredFeatures","f16","vec2h","vec3h","vec4h","abstractFloat","vec"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/modf.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution tests for the 'modf' builtin function\n\nT is f32 or f16 or Type.abstractFloat\n@const fn modf(e:T) -> result_struct\nSplits |e| into fractional and whole number parts.\nThe whole part is (|e| % 1.0), and the fractional part is |e| minus the whole part.\nReturns the result_struct for the given type.\n\nS is f32 or f16 or Type.abstractFloat\nT is vecN<S>\n@const fn modf(e:T) -> result_struct\nSplits the components of |e| into fractional and whole number parts.\nThe |i|'th component of the whole and fractional parts equal the whole and fractional parts of modf(e[i]).\nReturns the result_struct for the given type.\n\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { Type } from '../../../../../util/conversion.js';\nimport {\n  abstractFloatShaderBuilder,\n  allInputSources,\n  basicExpressionBuilder,\n  onlyConstInputSource,\n  run } from\n\n'../../expression.js';\n\nimport { d } from './modf.cache.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n/** @returns an ShaderBuilder that evaluates modf and returns .whole from the result structure */\nfunction wholeBuilder() {\n  return basicExpressionBuilder((value) => `modf(${value}).whole`);\n}\n\n/** @returns an ShaderBuilder that evaluates modf and returns .fract from the result structure */\nfunction fractBuilder() {\n  return basicExpressionBuilder((value) => `modf(${value}).fract`);\n}\n\n/** @returns an ShaderBuilder that evaluates modf and returns .whole from the result structure for AbstractFloats */\nfunction abstractWholeBuilder() {\n  return abstractFloatShaderBuilder((value) => `modf(${value}).whole`);\n}\n\n/** @returns an ShaderBuilder that evaluates modf and returns .fract from the result structure for AbstractFloats */\nfunction abstractFractBuilder() {\n  return abstractFloatShaderBuilder((value) => `modf(${value}).fract`);\n}\n\ng.test('f32_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is f32\n\nstruct __modf_result_f32 {\n  fract : f32, // fractional part\n  whole : f32  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_fract');\n  await run(t, fractBuilder(), [Type.f32], Type.f32, t.params, cases);\n});\n\ng.test('f32_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is f32\n\nstruct __modf_result_f32 {\n  fract : f32, // fractional part\n  whole : f32  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_whole');\n  await run(t, wholeBuilder(), [Type.f32], Type.f32, t.params, cases);\n});\n\ng.test('f32_vec2_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec2<f32>\n\nstruct __modf_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  whole : vec2<f32>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_vec2_fract');\n  await run(t, fractBuilder(), [Type.vec2f], Type.vec2f, t.params, cases);\n});\n\ng.test('f32_vec2_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec2<f32>\n\nstruct __modf_result_vec2_f32 {\n  fract : vec2<f32>, // fractional part\n  whole : vec2<f32>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_vec2_whole');\n  await run(t, wholeBuilder(), [Type.vec2f], Type.vec2f, t.params, cases);\n});\n\ng.test('f32_vec3_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec3<f32>\n\nstruct __modf_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  whole : vec3<f32>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_vec3_fract');\n  await run(t, fractBuilder(), [Type.vec3f], Type.vec3f, t.params, cases);\n});\n\ng.test('f32_vec3_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec3<f32>\n\nstruct __modf_result_vec3_f32 {\n  fract : vec3<f32>, // fractional part\n  whole : vec3<f32>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_vec3_whole');\n  await run(t, wholeBuilder(), [Type.vec3f], Type.vec3f, t.params, cases);\n});\n\ng.test('f32_vec4_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec4<f32>\n\nstruct __modf_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  whole : vec4<f32>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_vec4_fract');\n  await run(t, fractBuilder(), [Type.vec4f], Type.vec4f, t.params, cases);\n});\n\ng.test('f32_vec4_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec4<f32>\n\nstruct __modf_result_vec4_f32 {\n  fract : vec4<f32>, // fractional part\n  whole : vec4<f32>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cases = await d.get('f32_vec4_whole');\n  await run(t, wholeBuilder(), [Type.vec4f], Type.vec4f, t.params, cases);\n});\n\ng.test('f16_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is f16\n\nstruct __modf_result_f16 {\n  fract : f16, // fractional part\n  whole : f16  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_fract');\n  await run(t, fractBuilder(), [Type.f16], Type.f16, t.params, cases);\n});\n\ng.test('f16_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is f16\n\nstruct __modf_result_f16 {\n  fract : f16, // fractional part\n  whole : f16  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_whole');\n  await run(t, wholeBuilder(), [Type.f16], Type.f16, t.params, cases);\n});\n\ng.test('f16_vec2_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec2<f16>\n\nstruct __modf_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  whole : vec2<f16>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_vec2_fract');\n  await run(t, fractBuilder(), [Type.vec2h], Type.vec2h, t.params, cases);\n});\n\ng.test('f16_vec2_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec2<f16>\n\nstruct __modf_result_vec2_f16 {\n  fract : vec2<f16>, // fractional part\n  whole : vec2<f16>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_vec2_whole');\n  await run(t, wholeBuilder(), [Type.vec2h], Type.vec2h, t.params, cases);\n});\n\ng.test('f16_vec3_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec3<f16>\n\nstruct __modf_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  whole : vec3<f16>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_vec3_fract');\n  await run(t, fractBuilder(), [Type.vec3h], Type.vec3h, t.params, cases);\n});\n\ng.test('f16_vec3_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec3<f16>\n\nstruct __modf_result_vec3_f16 {\n  fract : vec3<f16>, // fractional part\n  whole : vec3<f16>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_vec3_whole');\n  await run(t, wholeBuilder(), [Type.vec3h], Type.vec3h, t.params, cases);\n});\n\ng.test('f16_vec4_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec4<f16>\n\nstruct __modf_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  whole : vec4<f16>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_vec4_fract');\n  await run(t, fractBuilder(), [Type.vec4h], Type.vec4h, t.params, cases);\n});\n\ng.test('f16_vec4_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec4<f16>\n\nstruct __modf_result_vec4_f16 {\n  fract : vec4<f16>, // fractional part\n  whole : vec4<f16>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n}).\nfn(async (t) => {\n  const cases = await d.get('f16_vec4_whole');\n  await run(t, wholeBuilder(), [Type.vec4h], Type.vec4h, t.params, cases);\n});\n\ng.test('abstract_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is abstract-float\n\nstruct __modf_result_abstract {\n  fract : Type.abstractFloat, // fractional part\n  whole : Type.abstractFloat  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_fract');\n  await run(t, abstractFractBuilder(), [Type.abstractFloat], Type.abstractFloat, t.params, cases);\n});\n\ng.test('abstract_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is abstract-float\n\nstruct __modf_result_abstract {\n  fract : Type.abstractFloat, // fractional part\n  whole : Type.abstractFloat  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_whole');\n  await run(t, abstractWholeBuilder(), [Type.abstractFloat], Type.abstractFloat, t.params, cases);\n});\n\ng.test('abstract_vec2_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec2<abstract>\n\nstruct __modf_result_vec2_abstract {\n  fract : vec2<abstract>, // fractional part\n  whole : vec2<abstract>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_vec2_fract');\n  await run(\n    t,\n    abstractFractBuilder(),\n    [Type.vec(2, Type.abstractFloat)],\n    Type.vec(2, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_vec2_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec2<abstract>\n\nstruct __modf_result_vec2_abstract {\n  fract : vec2<abstract>, // fractional part\n  whole : vec2<abstract>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_vec2_whole');\n  await run(\n    t,\n    abstractWholeBuilder(),\n    [Type.vec(2, Type.abstractFloat)],\n    Type.vec(2, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_vec3_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec3<abstract>\n\nstruct __modf_result_vec3_abstract {\n  fract : vec3<abstract>, // fractional part\n  whole : vec3<abstract>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_vec3_fract');\n  await run(\n    t,\n    abstractFractBuilder(),\n    [Type.vec(3, Type.abstractFloat)],\n    Type.vec(3, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_vec3_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec3<abstract>\n\nstruct __modf_result_vec3_abstract {\n  fract : vec3<abstract>, // fractional part\n  whole : vec3<abstract>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_vec3_whole');\n  await run(\n    t,\n    abstractWholeBuilder(),\n    [Type.vec(3, Type.abstractFloat)],\n    Type.vec(3, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_vec4_fract').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec4<abstract>\n\nstruct __modf_result_vec4_abstract {\n  fract : vec4<abstract>, // fractional part\n  whole : vec4<abstract>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_vec4_fract');\n  await run(\n    t,\n    abstractFractBuilder(),\n    [Type.vec(4, Type.abstractFloat)],\n    Type.vec(4, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_vec4_whole').\nspecURL('https://www.w3.org/TR/WGSL/#float-builtin-functions').\ndesc(\n  `\nT is vec4<abstract>\n\nstruct __modf_result_vec4_abstract {\n  fract : vec4<abstract>, // fractional part\n  whole : vec4<abstract>  // whole part\n}\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('abstract_vec4_whole');\n  await run(\n    t,\n    abstractWholeBuilder(),\n    [Type.vec(4, Type.abstractFloat)],\n    Type.vec(4, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,kDAAkD,CAClF,SAASC,OAAO,QAAQ,4BAA4B,CACpD,SAASC,IAAI,QAAQ,mCAAmC;AACxD;EACEC,0BAA0B;EAC1BC,eAAe;EACfC,sBAAsB;EACtBC,oBAAoB;EACpBC,GAAG;;AAEL,qBAAqB;;AAErB,SAASC,CAAC,QAAQ,iBAAiB;;AAEnC,OAAO,MAAMC,CAAC,GAAGT,aAAa,CAACC,OAAO,CAAC;;AAEvC;AACA,SAASS,YAAYA,CAAA,EAAG;EACtB,OAAOL,sBAAsB,CAAC,CAACM,KAAK,KAAK,QAAQA,KAAK,SAAS,CAAC;AAClE;;AAEA;AACA,SAASC,YAAYA,CAAA,EAAG;EACtB,OAAOP,sBAAsB,CAAC,CAACM,KAAK,KAAK,QAAQA,KAAK,SAAS,CAAC;AAClE;;AAEA;AACA,SAASE,oBAAoBA,CAAA,EAAG;EAC9B,OAAOV,0BAA0B,CAAC,CAACQ,KAAK,KAAK,QAAQA,KAAK,SAAS,CAAC;AACtE;;AAEA;AACA,SAASG,oBAAoBA,CAAA,EAAG;EAC9B,OAAOX,0BAA0B,CAAC,CAACQ,KAAK,KAAK,QAAQA,KAAK,SAAS,CAAC;AACtE;;AAEAF,CAAC,CAACM,IAAI,CAAC,WAAW,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,WAAW,CAAC;EACtC,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAACuB,GAAG,CAAC,EAAEvB,IAAI,CAACuB,GAAG,EAAEH,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACrE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,WAAW,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,WAAW,CAAC;EACtC,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAACuB,GAAG,CAAC,EAAEvB,IAAI,CAACuB,GAAG,EAAEH,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACrE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAACwB,KAAK,CAAC,EAAExB,IAAI,CAACwB,KAAK,EAAEJ,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAACwB,KAAK,CAAC,EAAExB,IAAI,CAACwB,KAAK,EAAEJ,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAACyB,KAAK,CAAC,EAAEzB,IAAI,CAACyB,KAAK,EAAEL,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAACyB,KAAK,CAAC,EAAEzB,IAAI,CAACyB,KAAK,EAAEL,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAAC0B,KAAK,CAAC,EAAE1B,IAAI,CAAC0B,KAAK,EAAEN,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDiB,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAAC0B,KAAK,CAAC,EAAE1B,IAAI,CAAC0B,KAAK,EAAEN,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,WAAW,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,WAAW,CAAC;EACtC,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAAC8B,GAAG,CAAC,EAAE9B,IAAI,CAAC8B,GAAG,EAAEV,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACrE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,WAAW,CAAC;AACnBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,WAAW,CAAC;EACtC,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAAC8B,GAAG,CAAC,EAAE9B,IAAI,CAAC8B,GAAG,EAAEV,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACrE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAAC+B,KAAK,CAAC,EAAE/B,IAAI,CAAC+B,KAAK,EAAEX,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAAC+B,KAAK,CAAC,EAAE/B,IAAI,CAAC+B,KAAK,EAAEX,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAACgC,KAAK,CAAC,EAAEhC,IAAI,CAACgC,KAAK,EAAEZ,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAACgC,KAAK,CAAC,EAAEhC,IAAI,CAACgC,KAAK,EAAEZ,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEV,YAAY,CAAC,CAAC,EAAE,CAACV,IAAI,CAACiC,KAAK,CAAC,EAAEjC,IAAI,CAACiC,KAAK,EAAEb,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEhB,eAAe,CAAC,CAAC;AACxDyB,iBAAiB,CAAC,CAACP,CAAC,KAAK;EACvBA,CAAC,CAACQ,0BAA0B,CAAC,EAAEC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACFV,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAEZ,YAAY,CAAC,CAAC,EAAE,CAACR,IAAI,CAACiC,KAAK,CAAC,EAAEjC,IAAI,CAACiC,KAAK,EAAEb,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACzE,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAER,oBAAoB,CAAC,CAAC,EAAE,CAACZ,IAAI,CAACkC,aAAa,CAAC,EAAElC,IAAI,CAACkC,aAAa,EAAEd,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACjG,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,gBAAgB,CAAC;AACxBC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,gBAAgB,CAAC;EAC3C,MAAMjB,GAAG,CAACe,CAAC,EAAET,oBAAoB,CAAC,CAAC,EAAE,CAACX,IAAI,CAACkC,aAAa,CAAC,EAAElC,IAAI,CAACkC,aAAa,EAAEd,CAAC,CAACJ,MAAM,EAAEK,KAAK,CAAC;AACjG,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,qBAAqB,CAAC;AAC7BC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,qBAAqB,CAAC;EAChD,MAAMjB,GAAG;IACPe,CAAC;IACDR,oBAAoB,CAAC,CAAC;IACtB,CAACZ,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC,CAAC;IACjClC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC;IAC/Bd,CAAC,CAACJ,MAAM;IACRK;EACF,CAAC;AACH,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,qBAAqB,CAAC;AAC7BC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,qBAAqB,CAAC;EAChD,MAAMjB,GAAG;IACPe,CAAC;IACDT,oBAAoB,CAAC,CAAC;IACtB,CAACX,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC,CAAC;IACjClC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC;IAC/Bd,CAAC,CAACJ,MAAM;IACRK;EACF,CAAC;AACH,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,qBAAqB,CAAC;AAC7BC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,qBAAqB,CAAC;EAChD,MAAMjB,GAAG;IACPe,CAAC;IACDR,oBAAoB,CAAC,CAAC;IACtB,CAACZ,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC,CAAC;IACjClC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC;IAC/Bd,CAAC,CAACJ,MAAM;IACRK;EACF,CAAC;AACH,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,qBAAqB,CAAC;AAC7BC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,qBAAqB,CAAC;EAChD,MAAMjB,GAAG;IACPe,CAAC;IACDT,oBAAoB,CAAC,CAAC;IACtB,CAACX,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC,CAAC;IACjClC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC;IAC/Bd,CAAC,CAACJ,MAAM;IACRK;EACF,CAAC;AACH,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,qBAAqB,CAAC;AAC7BC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,qBAAqB,CAAC;EAChD,MAAMjB,GAAG;IACPe,CAAC;IACDR,oBAAoB,CAAC,CAAC;IACtB,CAACZ,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC,CAAC;IACjClC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC;IAC/Bd,CAAC,CAACJ,MAAM;IACRK;EACF,CAAC;AACH,CAAC,CAAC;;AAEFd,CAAC,CAACM,IAAI,CAAC,qBAAqB,CAAC;AAC7BC,OAAO,CAAC,qDAAqD,CAAC;AAC9DC,IAAI;EACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAEd,oBAAoB,CAAC,CAAC;AAC7De,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,KAAK,GAAG,MAAMf,CAAC,CAACgB,GAAG,CAAC,qBAAqB,CAAC;EAChD,MAAMjB,GAAG;IACPe,CAAC;IACDT,oBAAoB,CAAC,CAAC;IACtB,CAACX,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC,CAAC;IACjClC,IAAI,CAACmC,GAAG,CAAC,CAAC,EAAEnC,IAAI,CAACkC,aAAa,CAAC;IAC/Bd,CAAC,CAACJ,MAAM;IACRK;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]}