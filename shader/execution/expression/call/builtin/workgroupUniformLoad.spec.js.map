{"version":3,"file":"workgroupUniformLoad.spec.js","names":["description","makeTestGroup","keysOf","iterRange","GPUTest","checkElementsEqualGenerated","g","kTypes","bool","store_val","expected","Uint32Array","host_type","to_host","x","u32","vec4u","mat3x2f","Float32Array","SimpleStruct","decls","ComplexStruct","test","specURL","desc","params","u","combine","fn","t","type","wgsize_x","wgsize","wgsize_y","num_invocations","num_words_per_invocation","length","total_host_words","skipIf","device","limits","maxComputeInvocationsPerWorkgroup","load","code","pipeline","createComputePipeline","layout","compute","module","createShaderModule","entryPoint","outputBuffer","makeBufferWithContents","_i","GPUBufferUsage","STORAGE","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesPassCheck","data","i","Number","constructor","typedLength"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/workgroupUniformLoad.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecutes a control barrier synchronization function that affects memory and atomic operations in the workgroup address space.\n`; // NOTE: The control barrier executed by this builtin is tested in the memory_model tests.\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport {\n\n\n  iterRange } from\n'../../../../../../common/util/util.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { checkElementsEqualGenerated } from '../../../../../util/check_contents.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// A list of types configurations used for the workgroup variable.\nconst kTypes = {\n  bool: {\n    store_val: `true`,\n    expected: new Uint32Array([1]),\n    host_type: 'u32',\n    to_host: (x) => `u32(${x})`\n  },\n  u32: {\n    store_val: `42`,\n    expected: new Uint32Array([42])\n  },\n  vec4u: {\n    store_val: `vec4u(42, 1, 0xffffffff, 777)`,\n    expected: new Uint32Array([42, 1, 0xffffffff, 777])\n  },\n  mat3x2f: {\n    store_val: `mat3x2(42, 1, 65536, -42, -1, -65536)`,\n    expected: new Float32Array([42, 1, 65536, -42, -1, -65536])\n  },\n  'array<u32, 4>': {\n    store_val: `array(42, 1, 0xffffffff, 777)`,\n    expected: new Uint32Array([42, 1, 0xffffffff, 777])\n  },\n  SimpleStruct: {\n    decls: 'struct SimpleStruct { a: u32, b: u32, c: u32, d: u32, }',\n    store_val: `SimpleStruct(42, 1, 0xffffffff, 777)`,\n    expected: new Uint32Array([42, 1, 0xffffffff, 777])\n  },\n  ComplexStruct: {\n    decls: `struct Inner { v: vec4u, }\n            struct ComplexStruct {\n              a: array<Inner, 4>,\n              @size(28) b: vec4u,\n              c: u32\n            }\n            const v = vec4(42, 1, 0xffffffff, 777);\n            const rhs = ComplexStruct(\n              array(Inner(v.xyzw), Inner(v.yzwx), Inner(v.zwxy), Inner(v.wxyz)),\n              v.xzxz,\n              0x12345678,\n              );`,\n    store_val: `rhs`,\n    expected: new Uint32Array([\n    // v.xyzw\n    42, 1, 0xffffffff, 777,\n    // v.yzwx\n    1, 0xffffffff, 777, 42,\n    // v.zwxy\n    0xffffffff, 777, 42, 1,\n    // v.wxyz\n    777, 42, 1, 0xffffffff,\n    // v.xzxz\n    42, 0xffffffff, 42, 0xffffffff,\n    // 12 bytes of padding\n    0xdeadbeef, 0xdeadbeef, 0xdeadbeef, 0x12345678]\n    )\n  }\n};\n\ng.test('types').\nspecURL('https://gpuweb.github.io/gpuweb/wgsl/#workgroupUniformLoad-builtin').\ndesc(\n  `Test that the result of a workgroupUniformLoad is the value previously stored to the workgroup variable, for a variety of types.\n    `\n).\nparams((u) =>\nu.combine('type', keysOf(kTypes)).combine('wgsize', [\n[1, 1],\n[3, 7],\n[1, 128],\n[16, 16]]\n)\n).\nfn((t) => {\n  const type = kTypes[t.params.type];\n  const wgsize_x = t.params.wgsize[0];\n  const wgsize_y = t.params.wgsize[1];\n  const num_invocations = wgsize_x * wgsize_y;\n  const num_words_per_invocation = type.expected.length;\n  const total_host_words = num_invocations * num_words_per_invocation;\n\n  t.skipIf(\n    num_invocations > t.device.limits.maxComputeInvocationsPerWorkgroup,\n    `num_invocations (${num_invocations}) > maxComputeInvocationsPerWorkgroup (${t.device.limits.maxComputeInvocationsPerWorkgroup})`\n  );\n\n  let load = `workgroupUniformLoad(&wgvar)`;\n  if (type.to_host) {\n    load = type.to_host(load);\n  }\n\n  // Construct a shader that stores a value to workgroup variable and then loads it using\n  // workgroupUniformLoad() in every invocation, copying the results back to a storage buffer.\n  const code = `\n    ${type.decls ? type.decls : ''}\n\n    @group(0) @binding(0) var<storage, read_write> buffer : array<${\n  type.host_type ? type.host_type : t.params.type}, ${\n  num_invocations}>;\n\n    var<workgroup> wgvar : ${t.params.type};\n\n    @compute @workgroup_size(${wgsize_x}, ${wgsize_y})\n    fn main(@builtin(local_invocation_index) lid: u32) {\n      if (lid == ${num_invocations - 1}) {\n        wgvar = ${type.store_val};\n      }\n      buffer[lid] = ${load};\n    }\n    `;\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({ code }),\n      entryPoint: 'main'\n    }\n  });\n\n  // Allocate a buffer and fill it with 0xdeadbeef values.\n  const outputBuffer = t.makeBufferWithContents(\n    new Uint32Array([...iterRange(total_host_words, (_i) => 0xdeadbeef)]),\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\n  );\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [{ binding: 0, resource: { buffer: outputBuffer } }]\n  });\n\n  // Run the shader.\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  // Check that the output matches the expected values for each invocation.\n  t.expectGPUBufferValuesPassCheck(\n    outputBuffer,\n    (data) =>\n    checkElementsEqualGenerated(data, (i) => {\n      return Number(type.expected[i % num_words_per_invocation]);\n    }),\n    {\n      type: type.expected.constructor,\n      typedLength: total_host_words\n    }\n  );\n});"],"mappings":"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","ignoreList":[]}