{"version":3,"file":"radians.cache.js","names":["FP","makeCaseCache","cases","map","trait","generateScalarToIntervalCases","scalarRange","radiansInterval","reduce","a","b","d"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/radians.cache.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { FP } from '../../../../../util/floating_point.js';import { makeCaseCache } from '../../case_cache.js';\n// Cases: [f32|f16|abstract]\nconst cases = ['f32', 'f16', 'abstract'].\nmap((trait) => ({\n  [`${trait}`]: () => {\n    return FP[trait].generateScalarToIntervalCases(\n      FP[trait].scalarRange(),\n      trait !== 'abstract' ? 'unfiltered' : 'finite',\n      // radians has an inherited accuracy, so abstract is only expected to be as accurate as f32\n      FP[trait !== 'abstract' ? trait : 'f32'].radiansInterval\n    );\n  }\n})).\nreduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('radians', cases);"],"mappings":";;IAAA;AACA;AACA,GAAG,SAASA,EAAE,QAAQ,uCAAuC,CAAC,SAASC,aAAa,QAAQ,qBAAqB,CAAC,CAClH;AACA,MAAMC,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CACxCC,GAAG,CAAC,CAACC,KAAK,MAAM;EACd,CAAC,GAAGA,KAAK,EAAE,GAAG,MAAM;IAClB,OAAOJ,EAAE,CAACI,KAAK,CAAC,CAACC,6BAA6B;MAC5CL,EAAE,CAACI,KAAK,CAAC,CAACE,WAAW,CAAC,CAAC;MACvBF,KAAK,KAAK,UAAU,GAAG,YAAY,GAAG,QAAQ;MAC9C;MACAJ,EAAE,CAACI,KAAK,KAAK,UAAU,GAAGA,KAAK,GAAG,KAAK,CAAC,CAACG;IAC3C,CAAC;EACH;AACF,CAAC,CAAC,CAAC;AACHC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC,OAAO,MAAMC,CAAC,GAAGV,aAAa,CAAC,SAAS,EAAEC,KAAK,CAAC","ignoreList":[]}