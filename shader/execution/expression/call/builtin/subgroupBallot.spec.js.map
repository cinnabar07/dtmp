{"version":3,"file":"subgroupBallot.spec.js","names":["description","makeTestGroup","keysOf","iterRange","assert","kTextureFormatInfo","align","SubgroupTest","kFramebufferSizes","getUintsPerFramebuffer","g","kInvocations","getMask","size","BigInt","checkBallots","data","subgroupSize","filter","expect","allActive","i","idx","actual","j","expectedResult","subgroupId","Error","toString","undefined","runTest","t","wgsl","sizeBuffer","makeBufferWithContents","Uint32Array","GPUBufferUsage","COPY_SRC","COPY_DST","STORAGE","trackForCleanup","outputNumInts","outputBuffer","x","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","sizeReadback","readGPUBufferRangeTyped","srcByteOffset","type","typedLength","method","outputReadback","output","expectOK","kCases","every_even","cond","id","base","mask","every_odd","lower_half","Math","floor","upper_half","first_two","test","desc","params","u","combine","beforeAllSubcases","selectDeviceOrSkipTestCase","fn","testcase","case","unimplemented","kBothCases","empty","pred","full","one_in_four","middle_half","middle_half_every_other","kFragmentPredicates","odd_row","row","col","width","height","even_row","odd_col","even_col","odd_id","even_id","first_two_or_diagonal","checkFragmentBallots","ballots","metadata","format","uintsPerRow","uintsPerTexel","coordToIndex","mapping","Map","offset","ballot","expectBit","gotBit","expected","get","set","beginSubcases","combineWithParams","predicate","fsShader","vsShader","createRenderPipeline","vertex","fragment","targets","primitive","topology","blockWidth","blockHeight","bytesPerBlock","blocksPerRow","blocksPerColumn","bytesPerRow","byteLength","uintLength","ballotFB","createTextureTracked","usage","GPUTextureUsage","RENDER_ATTACHMENT","TEXTURE_BINDING","metadataFB","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","draw","ballotBuffer","copyWholeTextureToNewBufferSimple","ballotReadback","metadataBuffer","metadataReadback"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/subgroupBallot.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution tests for subgroupBallot\n\nNote: There is a lack of portability for non-uniform execution so these tests\nrestrict themselves to uniform control flow or returning early.\nNote: There is no guaranteed mapping between subgroup_invocation_id and\nlocal_invocation_index. Tests should avoid assuming there is.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { iterRange, assert } from '../../../../../../common/util/util.js';\nimport { kTextureFormatInfo } from '../../../../../format_info.js';\n\nimport { align } from '../../../../../util/math.js';\n\nimport { SubgroupTest, kFramebufferSizes, getUintsPerFramebuffer } from './subgroup_util.js';\n\nexport const g = makeTestGroup(SubgroupTest);\n\n// 128 is the maximum possible subgroup size.\nconst kInvocations = 128;\n\nfunction getMask(size) {\n  return (1n << BigInt(size)) - 1n;\n}\n\nfunction checkBallots(\ndata,\nsubgroupSize,\nfilter,\nexpect,\nallActive)\n{\n  for (let i = 0; i < kInvocations; i++) {\n    const idx = i * 4;\n    let actual = 0n;\n    for (let j = 0; j < 4; j++) {\n      actual |= BigInt(data[idx + j]) << BigInt(32 * j);\n    }\n    let expectedResult = expect(subgroupSize);\n    const subgroupId = i % subgroupSize;\n    if (!allActive && !filter(subgroupId, subgroupSize)) {\n      expectedResult = 0n;\n    }\n    if (expectedResult !== actual) {\n      return new Error(\n        `Invocation ${i}, subgroup inv id ${i % subgroupSize}, size ${subgroupSize}\n- expected: ${expectedResult.toString(16)}\n-      got: ${actual.toString(16)}`\n      );\n    }\n  }\n\n  return undefined;\n}\n\nasync function runTest(\nt,\nwgsl,\nfilter,\nexpect,\nallActive)\n{\n  const sizeBuffer = t.makeBufferWithContents(\n    new Uint32Array([0]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  );\n  t.trackForCleanup(sizeBuffer);\n\n  const outputNumInts = kInvocations * 4;\n  const outputBuffer = t.makeBufferWithContents(\n    new Uint32Array([...iterRange(outputNumInts, (x) => 0)]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  );\n  t.trackForCleanup(outputBuffer);\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code: wgsl\n      }),\n      entryPoint: 'main'\n    }\n  });\n  const bg = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n    {\n      binding: 0,\n      resource: {\n        buffer: sizeBuffer\n      }\n    },\n    {\n      binding: 1,\n      resource: {\n        buffer: outputBuffer\n      }\n    }]\n\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.dispatchWorkgroups(1, 1, 1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  const sizeReadback = await t.readGPUBufferRangeTyped(sizeBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: 1,\n    method: 'copy'\n  });\n  const subgroupSize = sizeReadback.data[0];\n\n  const outputReadback = await t.readGPUBufferRangeTyped(outputBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: outputNumInts,\n    method: 'copy'\n  });\n  const output = outputReadback.data;\n\n  t.expectOK(checkBallots(output, subgroupSize, filter, expect, allActive));\n}\n\nconst kCases = {\n  every_even: {\n    cond: `id % 2 == 0`,\n    filter: (id, size) => {\n      return id % 2 === 0;\n    },\n    expect: (subgroupSize) => {\n      const base = BigInt('0x55555555555555555555555555555555');\n      const mask = getMask(subgroupSize);\n      return base & mask;\n    }\n  },\n  every_odd: {\n    cond: `id % 2 == 1`,\n    filter: (id, size) => {\n      return id % 2 === 1;\n    },\n    expect: (subgroupSize) => {\n      const base = BigInt('0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n      const mask = getMask(subgroupSize);\n      return base & mask;\n    }\n  },\n  lower_half: {\n    cond: `id < subgroupSize / 2`,\n    filter: (id, size) => {\n      return id < Math.floor(size / 2);\n    },\n    expect: (size) => {\n      return getMask(Math.floor(size / 2));\n    }\n  },\n  upper_half: {\n    cond: `id >= subgroupSize / 2`,\n    filter: (id, size) => {\n      return id >= Math.floor(size / 2);\n    },\n    expect: (size) => {\n      return getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 2));\n    }\n  },\n  first_two: {\n    cond: `id == 0 || id == 1`,\n    filter: (id) => {\n      return id === 0 || id === 1;\n    },\n    expect: (size) => {\n      return getMask(2);\n    }\n  }\n};\n\ng.test('compute,split').\ndesc('Tests ballot in a split subgroup').\nparams((u) => u.combine('case', keysOf(kCases))).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn(async (t) => {\n  const testcase = kCases[t.params.case];\n  const wgsl = `\nenable subgroups;\n\ndiagnostic(off, subgroup_uniformity);\ndiagnostic(off, subgroup_branching);\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  if ${testcase.cond} {\n    output[lid] = subgroupBallot(true);\n  } else {\n    return;\n  }\n}`;\n\n  await runTest(t, wgsl, testcase.filter, testcase.expect, false);\n});\n\ng.test('fragment,split').unimplemented();\n\ng.test('predicate').\ndesc('Tests the predicate parameter').\nparams((u) => u.combine('case', keysOf(kCases))).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn(async (t) => {\n  const testcase = kCases[t.params.case];\n  const wgsl = `\nenable subgroups;\n\ndiagnostic(off, subgroup_branching);\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  let cond = ${testcase.cond};\n  let b = subgroupBallot(cond);\n  output[lid] = b;\n}`;\n\n  await runTest(t, wgsl, testcase.filter, testcase.expect, true);\n});\n\nconst kBothCases = {\n  empty: {\n    cond: `id < subgroupSize / 2`,\n    pred: `id >= subgroupSize / 2`,\n    filter: (id, size) => {\n      return id < Math.floor(size / 2);\n    },\n    expect: (size) => {\n      return 0n;\n    }\n  },\n  full: {\n    cond: `id < 128`,\n    pred: `lid < 128`,\n    filter: (id, size) => {\n      return true;\n    },\n    expect: (size) => {\n      return getMask(size);\n    }\n  },\n  one_in_four: {\n    cond: `id % 2 == 0`,\n    pred: `id % 4 == 0`,\n    filter: (id, size) => {\n      return id % 2 === 0;\n    },\n    expect: (size) => {\n      const base = BigInt('0x11111111111111111111111111111111');\n      const mask = getMask(size);\n      return base & mask;\n    }\n  },\n  middle_half: {\n    cond: `id >= subgroupSize / 4`,\n    pred: `id < 3 * (subgroupSize / 4)`,\n    filter: (id, size) => {\n      return id >= Math.floor(size / 4);\n    },\n    expect: (size) => {\n      return getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 4));\n    }\n  },\n  middle_half_every_other: {\n    cond: `(id >= subgroupSize / 4) && (id < 3 * (subgroupSize / 4))`,\n    pred: `id % 2 == 0`,\n    filter: (id, size) => {\n      return id >= Math.floor(size / 4) && id < 3 * Math.floor(size / 4);\n    },\n    expect: (size) => {\n      const base = BigInt('0x55555555555555555555555555555555');\n      const mask = getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 4));\n      return base & mask;\n    }\n  }\n};\n\ng.test('predicate_and_control_flow').\ndesc('Test dynamic predicate and control flow together').\nparams((u) => u.combine('case', keysOf(kBothCases))).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn(async (t) => {\n  const testcase = kBothCases[t.params.case];\n  const wgsl = `\nenable subgroups;\n\ndiagnostic(off, subgroup_branching);\ndiagnostic(off, subgroup_uniformity);\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  if ${testcase.cond} {\n    output[lid] = subgroupBallot(${testcase.pred});\n  } else {\n    return;\n  }\n}`;\n\n  await runTest(t, wgsl, testcase.filter, testcase.expect, false);\n});\n\n// Filters should always skip the last row and column.\nconst kFragmentPredicates = {\n  odd_row: {\n    cond: `u32(pos.y) % 2 == 1`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return row % 2 === 1;\n    }\n  },\n  even_row: {\n    cond: `u32(pos.y) % 2 == 0`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return row % 2 === 0;\n    }\n  },\n  odd_col: {\n    cond: `u32(pos.x) % 2 == 1`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return col % 2 === 1;\n    }\n  },\n  even_col: {\n    cond: `u32(pos.x) % 2 == 0`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return col % 2 === 0;\n    }\n  },\n  odd_id: {\n    cond: `id % 2 == 1`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id % 2 === 1;\n    }\n  },\n  even_id: {\n    cond: `id % 2 == 0`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id % 2 === 0;\n    }\n  },\n  upper_half: {\n    cond: `id > subgroupSize / 2`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id > Math.floor(size / 2);\n    }\n  },\n  lower_half: {\n    cond: `id < subgroupSize / 2`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id < Math.floor(size / 2);\n    }\n  },\n  first_two_or_diagonal: {\n    cond: `id == 0 || id == 1 || u32(pos.x) == u32(pos.y)`,\n    filter: (row, col, width, height, id, size) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id === 0 || id === 1 || row === col;\n    }\n  }\n};\n\n/**\n * Checks the result of subgroupBallot in fragment shaders.\n *\n * Extra bits are allowed in ballots due to helpers, but results must be consistent\n * among invocations known to be good.\n * @param ballots Framebuffer of ballot results\n * @param metadata Framebuffer of metadata\n *                 * component 0 is subgroup_invocation_id\n *                 * component 1 is subgroup_size\n *                 * component 2 is a unique, generated subgroup id\n * @param format The framebuffer format\n * @param width The framebuffer width\n * @param height The framebuffer height\n * @param filter A functor that returns true if the invocation should be included in the ballot\n */\nfunction checkFragmentBallots(\nballots,\nmetadata,\nformat,\nwidth,\nheight,\nfilter)\n\n\n\n\n\n\n\n{\n  if (width < 3 || height < 3) {\n    return new Error(\n      `Insufficient framebuffer size [${width}w x ${height}h]. Minimum is [3w x 3h].`\n    );\n  }\n\n  const { uintsPerRow, uintsPerTexel } = getUintsPerFramebuffer(format, width, height);\n\n  const coordToIndex = (row, col) => {\n    return uintsPerRow * row + col * uintsPerTexel;\n  };\n\n  const mapping = new Map();\n\n  // Iteration skips last row and column to avoid helper invocations because it is not\n  // guaranteed whether or not they participate in the subgroup operation.\n  for (let row = 0; row < height - 1; row++) {\n    for (let col = 0; col < width - 1; col++) {\n      const offset = coordToIndex(row, col);\n\n      const id = metadata[offset];\n      const subgroupSize = metadata[offset + 1];\n      const subgroupId = metadata[offset + 2];\n\n      let ballot = BigInt(ballots[offset]);\n      ballot |= BigInt(ballots[offset + 1]) << 32n;\n      ballot |= BigInt(ballots[offset + 2]) << 64n;\n      ballot |= BigInt(ballots[offset + 3]) << 96n;\n\n      const expectBit = filter(row, col, width, height, id, subgroupSize) ? 1n : 0n;\n      const gotBit = ballot >> BigInt(id) & 1n;\n\n      if (expectBit !== gotBit) {\n        return new Error(`Row ${row}, col ${col}: incorrect ballot bit ${id}:\n- expected: ${expectBit.toString(10)}\n-      got: ${gotBit.toString(10)}`);\n      }\n\n      const expected = mapping.get(subgroupId);\n      if (expected === undefined) {\n        mapping.set(subgroupId, ballot);\n      } else {\n        if (expected !== ballot) {\n          return new Error(`Row ${row} col ${col}: ballot mismatch:\n- expected: ${expected.toString(16)}\n-      got: ${ballot.toString(16)}`);\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\ng.test('fragment').\ndesc('Tests subgroupBallot in fragment shaders').\nparams((u) =>\nu.\ncombine('predicate', keysOf(kFragmentPredicates)).\nbeginSubcases().\ncombine('size', kFramebufferSizes).\ncombineWithParams([{ format: 'rgba32uint' }])\n).\nbeforeAllSubcases((t) => {\n  t.selectDeviceOrSkipTestCase('subgroups');\n}).\nfn(async (t) => {\n  const width = t.params.size[0];\n  const height = t.params.size[1];\n  const testcase = kFragmentPredicates[t.params.predicate];\n\n  const fsShader = `\nenable subgroups;\n\nstruct FSOutput {\n  @location(0) ballot : vec4u,\n  @location(1) metadata : vec4u,\n}\n\n@fragment\nfn main(\n  @builtin(position) pos : vec4f,\n  @builtin(subgroup_size) subgroupSize : u32,\n  @builtin(subgroup_invocation_id) id : u32,\n) -> FSOutput {\n  let linear = u32(pos.x) + u32(pos.y) * ${width};\n  let subgroup_id = subgroupBroadcastFirst(linear + 1);\n\n  // Filter out possible helper invocations.\n  let x_in_range = u32(pos.x) < (${width} - 1);\n  let y_in_range = u32(pos.y) < (${height} - 1);\n  let in_range = x_in_range && y_in_range;\n\n  let cond = ${testcase.cond};\n  let ballot = subgroupBallot(in_range && cond);\n\n  var out : FSOutput;\n  out.ballot = ballot;\n  out.metadata = vec4u(id, subgroupSize, subgroup_id, 0);\n  return out;\n}`;\n\n  const vsShader = `\n@vertex\nfn vsMain(@builtin(vertex_index) index : u32) -> @builtin(position) vec4f {\n  const vertices = array(\n    vec2(-2, 4), vec2(-2, -4), vec2(2, 0),\n  );\n  return vec4f(vec2f(vertices[index]), 0, 1);\n}`;\n\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({ code: vsShader })\n    },\n    fragment: {\n      module: t.device.createShaderModule({ code: fsShader }),\n      targets: [{ format: t.params.format }, { format: t.params.format }]\n    },\n    primitive: {\n      topology: 'triangle-list'\n    }\n  });\n\n  const { blockWidth, blockHeight, bytesPerBlock } = kTextureFormatInfo[t.params.format];\n  assert(bytesPerBlock !== undefined);\n\n  const blocksPerRow = width / blockWidth;\n  const blocksPerColumn = height / blockHeight;\n  // 256 minimum arises from image copy requirements.\n  const bytesPerRow = align(blocksPerRow * (bytesPerBlock ?? 1), 256);\n  const byteLength = bytesPerRow * blocksPerColumn;\n  const uintLength = byteLength / 4;\n\n  const ballotFB = t.createTextureTracked({\n    size: [width, height],\n    usage:\n    GPUTextureUsage.COPY_SRC |\n    GPUTextureUsage.COPY_DST |\n    GPUTextureUsage.RENDER_ATTACHMENT |\n    GPUTextureUsage.TEXTURE_BINDING,\n    format: t.params.format\n  });\n\n  const metadataFB = t.createTextureTracked({\n    size: [width, height],\n    usage:\n    GPUTextureUsage.COPY_SRC |\n    GPUTextureUsage.COPY_DST |\n    GPUTextureUsage.RENDER_ATTACHMENT |\n    GPUTextureUsage.TEXTURE_BINDING,\n    format: t.params.format\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n    {\n      view: ballotFB.createView(),\n      loadOp: 'clear',\n      storeOp: 'store'\n    },\n    {\n      view: metadataFB.createView(),\n      loadOp: 'clear',\n      storeOp: 'store'\n    }]\n\n  });\n  pass.setPipeline(pipeline);\n  pass.draw(3);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  const ballotBuffer = t.copyWholeTextureToNewBufferSimple(ballotFB, 0);\n  const ballotReadback = await t.readGPUBufferRangeTyped(ballotBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: uintLength,\n    method: 'copy'\n  });\n  const ballots = ballotReadback.data;\n\n  const metadataBuffer = t.copyWholeTextureToNewBufferSimple(metadataFB, 0);\n  const metadataReadback = await t.readGPUBufferRangeTyped(metadataBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: uintLength,\n    method: 'copy'\n  });\n  const metadata = metadataReadback.data;\n\n  t.expectOK(\n    checkFragmentBallots(ballots, metadata, t.params.format, width, height, testcase.filter)\n  );\n});"],"mappings":"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","ignoreList":[]}