{"version":3,"file":"dot4I8Packed.spec.js","names":["description","makeTestGroup","GPUTest","Type","i32","u32","allInputSources","run","builtin","g","test","specURL","desc","params","u","combine","fn","t","cfg","dot4I8Packed","e1","e2","result","i","e1_i","e2_i","testInputs","makeCase","x","y","input","expected","cases","flatMap","v"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/dot4I8Packed.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution tests for the 'dot4I8Packed' builtin function\n\n@const fn dot4I8Packed(e1: u32 ,e2: u32) -> i32\ne1 and e2 are interpreted as vectors with four 8-bit signed integer components. Return the signed\ninteger dot product of these two vectors. Each component is sign-extended to i32 before performing\nthe multiply, and then the add operations are done in WGSL i32 with wrapping behaviour.\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { Type, i32, u32 } from '../../../../../util/conversion.js';\n\nimport { allInputSources, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('basic').\nspecURL('https://www.w3.org/TR/WGSL/#dot4I8Packed-builtin').\ndesc(\n  `\n@const fn dot4I8Packed(e1: u32, e2: u32) -> i32\n  `\n).\nparams((u) => u.combine('inputSource', allInputSources)).\nfn(async (t) => {\n  const cfg = t.params;\n\n  const dot4I8Packed = (e1, e2) => {\n    let result = 0;\n    for (let i = 0; i < 4; ++i) {\n      let e1_i = e1 >> i * 8 & 0xff;\n      if (e1_i >= 128) {\n        e1_i -= 256;\n      }\n      let e2_i = e2 >> i * 8 & 0xff;\n      if (e2_i >= 128) {\n        e2_i -= 256;\n      }\n      result += e1_i * e2_i;\n    }\n    return result;\n  };\n\n  const testInputs = [\n  // dot({0, 0, 0, 0}, {0, 0, 0, 0})\n  [0, 0],\n  // dot({127, 127, 127, 127}, {127, 127, 127, 127})\n  [0x7f7f7f7f, 0x7f7f7f7f],\n  // dot({-128, -128, -128, -128}, {-128, -128, -128, -128})\n  [0x80808080, 0x80808080],\n  // dot({127, 127, 127, 127}, {-128, -128, -128, -128})\n  [0x7f7f7f7f, 0x80808080],\n  // dot({1, 2, 3, 4}, {5, 6, 7, 8})\n  [0x01020304, 0x05060708],\n  // dot({1, 2, 3, 4}, {-1, -2, -3, -4})\n  [0x01020304, 0xfffefdfc],\n  // dot({-5, -6, -7, -8}, {5, 6, 7, 8})\n  [0xfbfaf9f8, 0x05060708],\n  // dot({-9, -10, -11, -12}, {-13, -14, -15, -16})\n  [0xf7f6f5f4, 0xf3f2f1f0]];\n\n\n  const makeCase = (x, y) => {\n    return { input: [u32(x), u32(y)], expected: i32(dot4I8Packed(x, y)) };\n  };\n  const cases = testInputs.flatMap((v) => {\n    return [makeCase(...v)];\n  });\n\n  await run(t, builtin('dot4I8Packed'), [Type.u32, Type.u32], Type.i32, cfg, cases);\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,kDAAkD,CAClF,SAASC,OAAO,QAAQ,4BAA4B,CACpD,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mCAAmC;;AAElE,SAASC,eAAe,EAAEC,GAAG,QAAQ,qBAAqB;;AAE1D,SAASC,OAAO,QAAQ,cAAc;;AAEtC,OAAO,MAAMC,CAAC,GAAGR,aAAa,CAACC,OAAO,CAAC;;AAEvCO,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;AACfC,OAAO,CAAC,kDAAkD,CAAC;AAC3DC,IAAI;EACF;AACF;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,KAAKA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAET,eAAe,CAAC,CAAC;AACxDU,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,GAAG,GAAGD,CAAC,CAACJ,MAAM;;EAEpB,MAAMM,YAAY,GAAGA,CAACC,EAAE,EAAEC,EAAE,KAAK;IAC/B,IAAIC,MAAM,GAAG,CAAC;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC1B,IAAIC,IAAI,GAAGJ,EAAE,IAAIG,CAAC,GAAG,CAAC,GAAG,IAAI;MAC7B,IAAIC,IAAI,IAAI,GAAG,EAAE;QACfA,IAAI,IAAI,GAAG;MACb;MACA,IAAIC,IAAI,GAAGJ,EAAE,IAAIE,CAAC,GAAG,CAAC,GAAG,IAAI;MAC7B,IAAIE,IAAI,IAAI,GAAG,EAAE;QACfA,IAAI,IAAI,GAAG;MACb;MACAH,MAAM,IAAIE,IAAI,GAAGC,IAAI;IACvB;IACA,OAAOH,MAAM;EACf,CAAC;;EAED,MAAMI,UAAU,GAAG;EACnB;EACA,CAAC,CAAC,EAAE,CAAC,CAAC;EACN;EACA,CAAC,UAAU,EAAE,UAAU,CAAC;EACxB;EACA,CAAC,UAAU,EAAE,UAAU,CAAC;EACxB;EACA,CAAC,UAAU,EAAE,UAAU,CAAC;EACxB;EACA,CAAC,UAAU,EAAE,UAAU,CAAC;EACxB;EACA,CAAC,UAAU,EAAE,UAAU,CAAC;EACxB;EACA,CAAC,UAAU,EAAE,UAAU,CAAC;EACxB;EACA,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;;;EAGzB,MAAMC,QAAQ,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IACzB,OAAO,EAAEC,KAAK,EAAE,CAACzB,GAAG,CAACuB,CAAC,CAAC,EAAEvB,GAAG,CAACwB,CAAC,CAAC,CAAC,EAAEE,QAAQ,EAAE3B,GAAG,CAACe,YAAY,CAACS,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,CAAC;EACD,MAAMG,KAAK,GAAGN,UAAU,CAACO,OAAO,CAAC,CAACC,CAAC,KAAK;IACtC,OAAO,CAACP,QAAQ,CAAC,GAAGO,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC;;EAEF,MAAM3B,GAAG,CAACU,CAAC,EAAET,OAAO,CAAC,cAAc,CAAC,EAAE,CAACL,IAAI,CAACE,GAAG,EAAEF,IAAI,CAACE,GAAG,CAAC,EAAEF,IAAI,CAACC,GAAG,EAAEc,GAAG,EAAEc,KAAK,CAAC;AACnF,CAAC,CAAC","ignoreList":[]}