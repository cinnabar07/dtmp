{"version":3,"file":"index.spec.js","names":["description","makeTestGroup","GPUTest","MatrixValue","Type","abstractFloat","f32","vec","align","allInputSources","basicExpressionBuilder","run","g","test","specURL","desc","params","u","combine","beforeAllSubcases","t","elementType","selectDeviceOrSkipTestCase","fn","indexType","matrixType","mat","columns","rows","columnType","elements","c","column","r","push","create","vector","cases","input","expected","ops","columnValues","matrix","vecfColumnType","values","map","v","inputSource","cols","Array","from","keys","wgsl","join","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","bufferSize","arr","offset","alignment","value","Math","max","type","size","toArray","array","Uint8Array","copyTo","i","outputBuffer","createBufferTracked","usage","GPUBufferUsage","STORAGE","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/access/matrix/index.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution Tests for matrix indexing expressions\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  MatrixValue,\n\n  Type,\n  abstractFloat,\n  f32,\n  vec } from\n\n'../../../../../util/conversion.js';\nimport { align } from '../../../../../util/math.js';\n\nimport { allInputSources, basicExpressionBuilder, run } from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('concrete_float_column').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-access-expr').\ndesc(`Test indexing a column vector from a concrete matrix`).\nparams((u) =>\nu.\ncombine('inputSource', allInputSources).\ncombine('elementType', ['f32', 'f16']).\ncombine('indexType', ['i32', 'u32']).\ncombine('columns', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.elementType === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const matrixType = Type.mat(t.params.columns, t.params.rows, elementType);\n  const columnType = Type.vec(t.params.rows, elementType);\n  const elements = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    const column = [];\n    for (let r = 0; r < t.params.rows; r++) {\n      column.push(elementType.create((c + 1) * 10 + (r + 1)));\n    }\n    elements.push(column);\n  }\n  const vector = new MatrixValue(elements);\n  const cases = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    cases.push({\n      input: [vector, indexType.create(c)],\n      expected: vec(...elements[c])\n    });\n  }\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}]`),\n    [matrixType, indexType],\n    columnType,\n    t.params,\n    cases\n  );\n});\n\ng.test('concrete_float_element').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-access-expr').\ndesc(`Test indexing a single element from a concrete matrix`).\nparams((u) =>\nu.\ncombine('inputSource', allInputSources).\ncombine('elementType', ['f32', 'f16']).\ncombine('indexType', ['i32', 'u32']).\ncombine('columns', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.elementType === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const matrixType = Type.mat(t.params.columns, t.params.rows, elementType);\n  const columnValues = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    const column = [];\n    for (let r = 0; r < t.params.rows; r++) {\n      column.push(elementType.create((c + 1) * 10 + (r + 1)));\n    }\n    columnValues.push(column);\n  }\n  const matrix = new MatrixValue(columnValues);\n  const cases = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    for (let r = 0; r < t.params.rows; r++) {\n      cases.push({\n        input: [matrix, indexType.create(c), indexType.create(r)],\n        expected: columnValues[c][r]\n      });\n    }\n  }\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}][${ops[2]}]`),\n    [matrixType, indexType, indexType],\n    elementType,\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_float_column').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-access-expr').\ndesc(`Test indexing a column vector from a abstract-float matrix`).\nparams((u) =>\nu.\ncombine('indexType', ['i32', 'u32']).\ncombine('columns', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nfn(async (t) => {\n  const indexType = Type[t.params.indexType];\n  const matrixType = Type.mat(t.params.columns, t.params.rows, Type.abstractFloat);\n  const vecfColumnType = Type.vec(t.params.rows, Type.f32);\n  const values = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    const column = [];\n    for (let r = 0; r < t.params.rows; r++) {\n      column.push((c + 1) * 10 + (r + 1));\n    }\n    values.push(column);\n  }\n  const matrix = new MatrixValue(\n    values.map((column) => column.map((v) => abstractFloat(v * 0x100000000)))\n  );\n  const cases = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    cases.push({\n      input: [matrix, indexType.create(c)],\n      expected: vec(...values[c].map((v) => f32(v)))\n    });\n  }\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}] / 0x100000000`),\n    [matrixType, indexType],\n    vecfColumnType,\n    { inputSource: 'const' },\n    cases\n  );\n});\n\ng.test('abstract_float_element').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-access-expr').\ndesc(`Test indexing a single element from a abstract-float matrix`).\nparams((u) =>\nu.\ncombine('indexType', ['i32', 'u32']).\ncombine('columns', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nfn(async (t) => {\n  const indexType = Type[t.params.indexType];\n  const matrixType = Type.mat(t.params.columns, t.params.rows, Type.abstractFloat);\n  const values = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    const column = [];\n    for (let r = 0; r < t.params.rows; r++) {\n      column.push((c + 1) * 10 + (r + 1));\n    }\n    values.push(column);\n  }\n  const matrix = new MatrixValue(\n    values.map((column) => column.map((v) => abstractFloat(v * 0x100000000)))\n  );\n  const cases = [];\n  for (let c = 0; c < t.params.columns; c++) {\n    for (let r = 0; r < t.params.rows; r++) {\n      cases.push({\n        input: [matrix, indexType.create(c), indexType.create(r)],\n        expected: f32(values[c][r])\n      });\n    }\n  }\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}][${ops[2]}] / 0x100000000`),\n    [matrixType, indexType, indexType],\n    Type.f32,\n    { inputSource: 'const' },\n    cases\n  );\n});\n\ng.test('non_const_index').\nspecURL('https://www.w3.org/TR/WGSL/#matrix-access-expr').\ndesc(`Test indexing of a matrix using non-const index`).\nparams((u) => u.combine('columns', [2, 3, 4]).combine('rows', [2, 3, 4])).\nfn((t) => {\n  const cols = t.params.columns;\n  const rows = t.params.rows;\n  const values = Array.from(Array(cols * rows).keys());\n  const wgsl = `\n@group(0) @binding(0) var<storage, read_write> output : array<f32, ${cols * rows}>;\n\n@compute @workgroup_size(${cols}, ${rows})\nfn main(@builtin(local_invocation_id) invocation_id : vec3<u32>) {\n  let m = mat${cols}x${rows}f(${values.join(', ')});\n  output[invocation_id.x*${rows} + invocation_id.y] = m[invocation_id.x][invocation_id.y];\n}\n`;\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({ code: wgsl }),\n      entryPoint: 'main'\n    }\n  });\n\n  const bufferSize = (arr) => {\n    let offset = 0;\n    let alignment = 0;\n    for (const value of arr) {\n      alignment = Math.max(alignment, value.type.alignment);\n      offset = align(offset, value.type.alignment) + value.type.size;\n    }\n    return align(offset, alignment);\n  };\n\n  const toArray = (arr) => {\n    const array = new Uint8Array(bufferSize(arr));\n    let offset = 0;\n    for (const value of arr) {\n      offset = align(offset, value.type.alignment);\n      value.copyTo(array, offset);\n      offset += value.type.size;\n    }\n    return array;\n  };\n\n  const expected = values.map((i) => Type['f32'].create(i));\n\n  const outputBuffer = t.createBufferTracked({\n    size: bufferSize(expected),\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [{ binding: 0, resource: { buffer: outputBuffer } }]\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(outputBuffer, toArray(expected));\n});"],"mappings":"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","ignoreList":[]}