{"version":3,"file":"index.spec.js","names":["description","makeTestGroup","GPUTest","False","True","Type","array","f32","scalarTypeOf","align","allInputSources","basicExpressionBuilder","run","g","test","specURL","desc","params","u","combine","filter","s","beforeAllSubcases","t","elementType","selectDeviceOrSkipTestCase","fn","indexType","cases","input","create","expected","ops","bool","inputSource","kind","valueArrayType","indexArrayType","wgsl","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","values","indices","inputValues","map","i","inputIndices","bufferSize","arr","offset","alignment","value","Math","max","type","size","toArray","Uint8Array","copyTo","inputArrayBuffer","makeBufferWithContents","GPUBufferUsage","STORAGE","inputIndexBuffer","outputBuffer","createBufferTracked","usage","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual","expand","beginSubcases","mat","columns","rows","matrixType","buildMat","index","elements","c","r","push","matrices"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/access/array/index.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution Tests for array indexing expressions\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  False,\n  True,\n  Type,\n\n  array,\n  f32,\n  scalarTypeOf } from\n'../../../../../util/conversion.js';\nimport { align } from '../../../../../util/math.js';\n\nimport { allInputSources, basicExpressionBuilder, run } from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('concrete_scalar').\nspecURL('https://www.w3.org/TR/WGSL/#array-access-expr').\ndesc(`Test indexing of an array of concrete scalars`).\nparams((u) =>\nu.\ncombine(\n  'inputSource',\n  // 'uniform' address space requires array stride to be multiple of 16 bytes\n  allInputSources.filter((s) => s !== 'uniform')\n).\ncombine('elementType', ['i32', 'u32', 'f32', 'f16']).\ncombine('indexType', ['i32', 'u32'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.elementType === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const cases = [\n  {\n    input: [\n    array(\n      /* 0 */elementType.create(10),\n      /* 1 */elementType.create(11),\n      /* 2 */elementType.create(12)\n    ),\n    indexType.create(0)],\n\n    expected: elementType.create(10)\n  },\n  {\n    input: [\n    array(\n      /* 0 */elementType.create(20),\n      /* 1 */elementType.create(21),\n      /* 2 */elementType.create(22)\n    ),\n    indexType.create(1)],\n\n    expected: elementType.create(21)\n  },\n  {\n    input: [\n    array(\n      /* 0 */elementType.create(30),\n      /* 1 */elementType.create(31),\n      /* 2 */elementType.create(32)\n    ),\n    indexType.create(2)],\n\n    expected: elementType.create(32)\n  }];\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}]`),\n    [Type.array(3, elementType), indexType],\n    elementType,\n    t.params,\n    cases\n  );\n});\n\ng.test('bool').\nspecURL('https://www.w3.org/TR/WGSL/#array-access-expr').\ndesc(`Test indexing of an array of booleans`).\nparams((u) =>\nu.\ncombine(\n  'inputSource',\n  // 'uniform' address space requires array stride to be multiple of 16 bytes\n  allInputSources.filter((s) => s !== 'uniform')\n).\ncombine('indexType', ['i32', 'u32'])\n).\nfn(async (t) => {\n  const indexType = Type[t.params.indexType];\n  const cases = [\n  {\n    input: [array(True, False, True), indexType.create(0)],\n    expected: True\n  },\n  {\n    input: [array(True, False, True), indexType.create(1)],\n    expected: False\n  },\n  {\n    input: [array(True, False, True), indexType.create(2)],\n    expected: True\n  }];\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}]`),\n    [Type.array(3, Type.bool), indexType],\n    Type.bool,\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_scalar').\nspecURL('https://www.w3.org/TR/WGSL/#array-access-expr').\ndesc(`Test indexing of an array of scalars`).\nparams((u) =>\nu.\ncombine('elementType', ['abstract-int', 'abstract-float']).\ncombine('indexType', ['i32', 'u32'])\n).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const cases = [\n  {\n    input: [\n    array(\n      /* 0 */elementType.create(0x10_00000000),\n      /* 1 */elementType.create(0x11_00000000),\n      /* 2 */elementType.create(0x12_00000000)\n    ),\n    indexType.create(0)],\n\n    expected: f32(0x10)\n  },\n  {\n    input: [\n    array(\n      /* 0 */elementType.create(0x20_00000000),\n      /* 1 */elementType.create(0x21_00000000),\n      /* 2 */elementType.create(0x22_00000000)\n    ),\n    indexType.create(1)],\n\n    expected: f32(0x21)\n  },\n  {\n    input: [\n    array(\n      /* 0 */elementType.create(0x30_00000000),\n      /* 1 */elementType.create(0x31_00000000),\n      /* 2 */elementType.create(0x32_00000000)\n    ),\n    indexType.create(2)],\n\n    expected: f32(0x32)\n  }];\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}] / 0x100000000`),\n    [Type.array(3, elementType), indexType],\n    Type.f32,\n    { inputSource: 'const' },\n    cases\n  );\n});\n\ng.test('runtime_sized').\nspecURL('https://www.w3.org/TR/WGSL/#array-access-expr').\ndesc(`Test indexing of a runtime sized array`).\nparams((u) =>\nu.\ncombine('elementType', [\n'i32',\n'u32',\n'f32',\n'f16',\n'vec4i',\n'vec2u',\n'vec3f',\n'vec2h']\n).\ncombine('indexType', ['i32', 'u32'])\n).\nbeforeAllSubcases((t) => {\n  if (scalarTypeOf(Type[t.params.elementType]).kind === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn((t) => {\n  const elementType = Type[t.params.elementType];\n  const valueArrayType = Type.array(0, elementType);\n  const indexType = Type[t.params.indexType];\n  const indexArrayType = Type.array(0, indexType);\n\n  const wgsl = `\n${scalarTypeOf(elementType).kind === 'f16' ? 'enable f16;' : ''}\n\n@group(0) @binding(0) var<storage, read> input_values : ${valueArrayType};\n@group(0) @binding(1) var<storage, read> input_indices : ${indexArrayType};\n@group(0) @binding(2) var<storage, read_write> output : ${valueArrayType};\n\n@compute @workgroup_size(16)\nfn main(@builtin(local_invocation_index) invocation_id : u32) {\n  let index = input_indices[invocation_id];\n  output[invocation_id] = input_values[index];\n}\n`;\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({ code: wgsl }),\n      entryPoint: 'main'\n    }\n  });\n\n  const values = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53];\n  const indices = [9, 0, 14, 10, 12, 4, 15, 3, 5, 6, 11, 2, 8, 13, 7, 1];\n\n  const inputValues = values.map((i) => elementType.create(i));\n  const inputIndices = indices.map((i) => indexType.create(i));\n  const expected = indices.map((i) => inputValues[i]);\n\n  const bufferSize = (arr) => {\n    let offset = 0;\n    let alignment = 0;\n    for (const value of arr) {\n      alignment = Math.max(alignment, value.type.alignment);\n      offset = align(offset, value.type.alignment) + value.type.size;\n    }\n    return align(offset, alignment);\n  };\n\n  const toArray = (arr) => {\n    const array = new Uint8Array(bufferSize(arr));\n    let offset = 0;\n    for (const value of arr) {\n      offset = align(offset, value.type.alignment);\n      value.copyTo(array, offset);\n      offset += value.type.size;\n    }\n    return array;\n  };\n\n  const inputArrayBuffer = t.makeBufferWithContents(toArray(inputValues), GPUBufferUsage.STORAGE);\n  const inputIndexBuffer = t.makeBufferWithContents(\n    toArray(inputIndices),\n    GPUBufferUsage.STORAGE\n  );\n  const outputBuffer = t.createBufferTracked({\n    size: bufferSize(expected),\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n    { binding: 0, resource: { buffer: inputArrayBuffer } },\n    { binding: 1, resource: { buffer: inputIndexBuffer } },\n    { binding: 2, resource: { buffer: outputBuffer } }]\n\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n\n  t.expectGPUBufferValuesEqual(outputBuffer, toArray(expected));\n});\n\ng.test('vector').\nspecURL('https://www.w3.org/TR/WGSL/#array-access-expr').\ndesc(`Test indexing of an array of vectors`).\nparams((u) =>\nu.\ncombine('inputSource', allInputSources).\nexpand('elementType', (t) =>\nt.inputSource === 'uniform' ?\n['vec4i', 'vec4u', 'vec4f'] :\n['vec4i', 'vec4u', 'vec4f', 'vec4h']\n).\ncombine('indexType', ['i32', 'u32'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.elementType === 'vec4h') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const cases = [\n  {\n    input: [\n    array(\n      /* 0 */elementType.create([0x10, 0x11, 0x12, 0x13]),\n      /* 1 */elementType.create([0x14, 0x15, 0x16, 0x17]),\n      /* 2 */elementType.create([0x18, 0x19, 0x1a, 0x1b])\n    ),\n    indexType.create(0)],\n\n    expected: elementType.create([0x10, 0x11, 0x12, 0x13])\n  },\n  {\n    input: [\n    array(\n      /* 0 */elementType.create([0x20, 0x21, 0x22, 0x23]),\n      /* 1 */elementType.create([0x24, 0x25, 0x26, 0x27]),\n      /* 2 */elementType.create([0x28, 0x29, 0x2a, 0x2b])\n    ),\n    indexType.create(1)],\n\n    expected: elementType.create([0x24, 0x25, 0x26, 0x27])\n  },\n  {\n    input: [\n    array(\n      /* 0 */elementType.create([0x30, 0x31, 0x32, 0x33]),\n      /* 1 */elementType.create([0x34, 0x35, 0x36, 0x37]),\n      /* 2 */elementType.create([0x38, 0x39, 0x3a, 0x3b])\n    ),\n    indexType.create(2)],\n\n    expected: elementType.create([0x38, 0x39, 0x3a, 0x3b])\n  }];\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}]`),\n    [Type.array(3, elementType), indexType],\n    elementType,\n    t.params,\n    cases\n  );\n});\n\ng.test('matrix').\nspecURL('https://www.w3.org/TR/WGSL/#array-access-expr').\ndesc(`Test indexing of an array of matrices`).\nparams((u) =>\nu.\ncombine('inputSource', allInputSources).\ncombine('elementType', ['f16', 'f32']).\nbeginSubcases().\ncombine('columns', [2, 3, 4]).\ncombine('rows', [2, 3, 4]).\ncombine('indexType', ['i32', 'u32']).\nfilter((u) => {\n  if (u.inputSource !== 'uniform') {\n    return true;\n  }\n  const mat = Type.mat(u.columns, u.rows, Type[u.elementType]);\n  return (align(mat.size, mat.alignment) & 15) === 0;\n})\n).\nbeforeAllSubcases((t) => {\n  if (t.params.elementType === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const matrixType = Type.mat(t.params.columns, t.params.rows, elementType);\n  const buildMat = (index) => {\n    const elements = [];\n    for (let c = 0; c < t.params.rows; c++) {\n      for (let r = 0; r < t.params.columns; r++) {\n        elements.push(index * 100 + c * 10 + r);\n      }\n    }\n    return matrixType.create(elements);\n  };\n  const matrices = [buildMat(0), buildMat(1), buildMat(2)];\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}]`),\n    [Type.array(3, matrixType), indexType],\n    matrixType,\n    t.params,\n    [\n    {\n      input: [array(...matrices), indexType.create(1)],\n      expected: matrices[1]\n    }]\n\n  );\n});"],"mappings":"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","ignoreList":[]}