{"version":3,"file":"index.spec.js","names":["description","makeTestGroup","GPUTest","Type","VectorValue","f32","allInputSources","basicExpressionBuilder","run","g","test","specURL","desc","params","u","combine","beforeAllSubcases","t","elementType","selectDeviceOrSkipTestCase","fn","indexType","vectorType","vec","width","elements","i","push","create","vector","cases","input","expected","ops","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/access/vector/index.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution Tests for vector indexing expressions\n`;import { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { Type, VectorValue, f32 } from '../../../../../util/conversion.js';\n\nimport { allInputSources, basicExpressionBuilder, run } from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('concrete_scalar').\nspecURL('https://www.w3.org/TR/WGSL/#vector-access-expr').\ndesc(`Test indexing of concrete vectors`).\nparams((u) =>\nu.\ncombine('inputSource', allInputSources).\ncombine('elementType', ['i32', 'u32', 'f32', 'f16', 'bool']).\ncombine('indexType', ['i32', 'u32']).\ncombine('width', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.elementType === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const vectorType = Type.vec(t.params.width, elementType);\n  const elements = [];\n  for (let i = 0; i < t.params.width; i++) {\n    if (t.params.elementType === 'bool') {\n      elements.push(elementType.create(i & 1));\n    } else {\n      elements.push(elementType.create((i + 1) * 10));\n    }\n  }\n  const vector = new VectorValue(elements);\n  const cases = [];\n  for (let i = 0; i < t.params.width; i++) {\n    cases.push({ input: [vector, indexType.create(i)], expected: elements[i] });\n  }\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}]`),\n    [vectorType, indexType],\n    elementType,\n    t.params,\n    cases\n  );\n});\n\ng.test('abstract_scalar').\nspecURL('https://www.w3.org/TR/WGSL/#vector-access-expr').\ndesc(`Test indexing of abstract numeric vectors`).\nparams((u) =>\nu.\ncombine('elementType', ['abstract-int', 'abstract-float']).\ncombine('indexType', ['i32', 'u32']).\ncombine('width', [2, 3, 4])\n).\nfn(async (t) => {\n  const elementType = Type[t.params.elementType];\n  const indexType = Type[t.params.indexType];\n  const vectorType = Type.vec(t.params.width, elementType);\n  const elements = [];\n  for (let i = 0; i < t.params.width; i++) {\n    elements.push(elementType.create((i + 1) * 0x100000000));\n  }\n  const vector = new VectorValue(elements);\n  const cases = [];\n  for (let i = 0; i < t.params.width; i++) {\n    cases.push({ input: [vector, indexType.create(i)], expected: f32(i + 1) });\n  }\n\n  await run(\n    t,\n    basicExpressionBuilder((ops) => `${ops[0]}[${ops[1]}] / 0x100000000`),\n    [vectorType, indexType],\n    Type.f32,\n    { inputSource: 'const' },\n    cases\n  );\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,kDAAkD,CAClF,SAASC,OAAO,QAAQ,4BAA4B,CACpD,SAASC,IAAI,EAAEC,WAAW,EAAEC,GAAG,QAAQ,mCAAmC;;AAE1E,SAASC,eAAe,EAAEC,sBAAsB,EAAEC,GAAG,QAAQ,qBAAqB;;AAElF,OAAO,MAAMC,CAAC,GAAGR,aAAa,CAACC,OAAO,CAAC;;AAEvCO,CAAC,CAACC,IAAI,CAAC,iBAAiB,CAAC;AACzBC,OAAO,CAAC,gDAAgD,CAAC;AACzDC,IAAI,CAAC,mCAAmC,CAAC;AACzCC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAET,eAAe,CAAC;AACvCS,OAAO,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AAC5DA,OAAO,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACpCA,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1B,CAAC;AACDC,iBAAiB,CAAC,CAACC,CAAC,KAAK;EACvB,IAAIA,CAAC,CAACJ,MAAM,CAACK,WAAW,KAAK,KAAK,EAAE;IAClCD,CAAC,CAACE,0BAA0B,CAAC,YAAY,CAAC;EAC5C;AACF,CAAC,CAAC;AACFC,EAAE,CAAC,OAAOH,CAAC,KAAK;EACd,MAAMC,WAAW,GAAGf,IAAI,CAACc,CAAC,CAACJ,MAAM,CAACK,WAAW,CAAC;EAC9C,MAAMG,SAAS,GAAGlB,IAAI,CAACc,CAAC,CAACJ,MAAM,CAACQ,SAAS,CAAC;EAC1C,MAAMC,UAAU,GAAGnB,IAAI,CAACoB,GAAG,CAACN,CAAC,CAACJ,MAAM,CAACW,KAAK,EAAEN,WAAW,CAAC;EACxD,MAAMO,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,CAACJ,MAAM,CAACW,KAAK,EAAEE,CAAC,EAAE,EAAE;IACvC,IAAIT,CAAC,CAACJ,MAAM,CAACK,WAAW,KAAK,MAAM,EAAE;MACnCO,QAAQ,CAACE,IAAI,CAACT,WAAW,CAACU,MAAM,CAACF,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1C,CAAC,MAAM;MACLD,QAAQ,CAACE,IAAI,CAACT,WAAW,CAACU,MAAM,CAAC,CAACF,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IACjD;EACF;EACA,MAAMG,MAAM,GAAG,IAAIzB,WAAW,CAACqB,QAAQ,CAAC;EACxC,MAAMK,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,CAACJ,MAAM,CAACW,KAAK,EAAEE,CAAC,EAAE,EAAE;IACvCI,KAAK,CAACH,IAAI,CAAC,EAAEI,KAAK,EAAE,CAACF,MAAM,EAAER,SAAS,CAACO,MAAM,CAACF,CAAC,CAAC,CAAC,EAAEM,QAAQ,EAAEP,QAAQ,CAACC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7E;;EAEA,MAAMlB,GAAG;IACPS,CAAC;IACDV,sBAAsB,CAAC,CAAC0B,GAAG,KAAK,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;IACvD,CAACX,UAAU,EAAED,SAAS,CAAC;IACvBH,WAAW;IACXD,CAAC,CAACJ,MAAM;IACRiB;EACF,CAAC;AACH,CAAC,CAAC;;AAEFrB,CAAC,CAACC,IAAI,CAAC,iBAAiB,CAAC;AACzBC,OAAO,CAAC,gDAAgD,CAAC;AACzDC,IAAI,CAAC,2CAA2C,CAAC;AACjDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;AAC1DA,OAAO,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACpCA,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1B,CAAC;AACDK,EAAE,CAAC,OAAOH,CAAC,KAAK;EACd,MAAMC,WAAW,GAAGf,IAAI,CAACc,CAAC,CAACJ,MAAM,CAACK,WAAW,CAAC;EAC9C,MAAMG,SAAS,GAAGlB,IAAI,CAACc,CAAC,CAACJ,MAAM,CAACQ,SAAS,CAAC;EAC1C,MAAMC,UAAU,GAAGnB,IAAI,CAACoB,GAAG,CAACN,CAAC,CAACJ,MAAM,CAACW,KAAK,EAAEN,WAAW,CAAC;EACxD,MAAMO,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,CAACJ,MAAM,CAACW,KAAK,EAAEE,CAAC,EAAE,EAAE;IACvCD,QAAQ,CAACE,IAAI,CAACT,WAAW,CAACU,MAAM,CAAC,CAACF,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,CAAC;EAC1D;EACA,MAAMG,MAAM,GAAG,IAAIzB,WAAW,CAACqB,QAAQ,CAAC;EACxC,MAAMK,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,CAAC,CAACJ,MAAM,CAACW,KAAK,EAAEE,CAAC,EAAE,EAAE;IACvCI,KAAK,CAACH,IAAI,CAAC,EAAEI,KAAK,EAAE,CAACF,MAAM,EAAER,SAAS,CAACO,MAAM,CAACF,CAAC,CAAC,CAAC,EAAEM,QAAQ,EAAE3B,GAAG,CAACqB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E;;EAEA,MAAMlB,GAAG;IACPS,CAAC;IACDV,sBAAsB,CAAC,CAAC0B,GAAG,KAAK,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,iBAAiB,CAAC;IACrE,CAACX,UAAU,EAAED,SAAS,CAAC;IACvBlB,IAAI,CAACE,GAAG;IACR,EAAE6B,WAAW,EAAE,OAAO,CAAC,CAAC;IACxBJ;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]}