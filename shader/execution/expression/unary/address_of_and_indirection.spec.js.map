{"version":3,"file":"address_of_and_indirection.spec.js","names":["description","makeTestGroup","keysOf","GPUTest","scalarType","sparseScalarF32Range","allButConstInputSource","basicExpressionWithPredeclarationBuilder","run","g","kDerefCases","deref_address_of_identifier","wgsl","requires_pointer_composite_access","deref_pointer","address_of_identifier","pointer","test","specURL","desc","params","u","combine","undefined","filter","p","derefType","beforeAllSubcases","t","selectDeviceOrSkipTestCase","requiredFeatures","fn","ty","cases","map","e","input","create","expected","elemType","kind","type","vectorize","shaderBuilder","value","skipIf","hasLanguageFeature","swizzle","slice"],"sources":["../../../../../../src/webgpu/shader/execution/expression/unary/address_of_and_indirection.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution Tests for unary address-of and indirection (dereference)\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../common/util/data_tables.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { scalarType } from '../../../../util/conversion.js';\nimport { sparseScalarF32Range } from '../../../../util/math.js';\nimport {\n  allButConstInputSource,\n  basicExpressionWithPredeclarationBuilder,\n  run } from\n'../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// All the ways to deref an expression\nconst kDerefCases = {\n  deref_address_of_identifier: {\n    wgsl: '(*(&a))',\n    requires_pointer_composite_access: false\n  },\n  deref_pointer: {\n    wgsl: '(*p)',\n    requires_pointer_composite_access: false\n  },\n  address_of_identifier: {\n    wgsl: '(&a)',\n    requires_pointer_composite_access: true\n  },\n  pointer: {\n    wgsl: 'p',\n    requires_pointer_composite_access: true\n  }\n};\n\ng.test('deref').\nspecURL('https://www.w3.org/TR/WGSL/#indirection').\ndesc(\n  `\nExpression: *e\n\nPointer expression dereference.\n`\n).\nparams((u) =>\nu.\ncombine('inputSource', allButConstInputSource).\ncombine('vectorize', [undefined, 2, 3, 4]).\ncombine('scalarType', ['bool', 'u32', 'i32', 'f32', 'f16']).\ncombine('derefType', keysOf(kDerefCases)).\nfilter((p) => !kDerefCases[p.derefType].requires_pointer_composite_access)\n).\nbeforeAllSubcases((t) => {\n  if (t.params.scalarType === 'f16') {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  }\n}).\nfn(async (t) => {\n  const ty = scalarType(t.params.scalarType);\n  const cases = sparseScalarF32Range().map((e) => {\n    return { input: ty.create(e), expected: ty.create(e) };\n  });\n  const elemType = ty.kind;\n  const type = t.params.vectorize ? `vec${t.params.vectorize}<${elemType}>` : elemType;\n  const shaderBuilder = basicExpressionWithPredeclarationBuilder(\n    (value) => `get_dereferenced_value(${value})`,\n    `fn get_dereferenced_value(value: ${type}) -> ${type} {\n        var a = value;\n        let p = &a;\n        return ${kDerefCases[t.params.derefType].wgsl};\n      }`\n  );\n  await run(t, shaderBuilder, [ty], ty, t.params, cases);\n});\n\ng.test('deref_index').\nspecURL('https://www.w3.org/TR/WGSL/#logical-expr').\ndesc(\n  `\nExpression: (*e)[index]\n\nPointer expression dereference as lhs of index accessor expression\n`\n).\nparams((u) =>\nu.\ncombine('inputSource', allButConstInputSource).\ncombine('vectorize', [undefined, 2, 3, 4]).\ncombine('scalarType', ['bool', 'u32', 'i32', 'f32', 'f16']).\ncombine('derefType', keysOf(kDerefCases))\n).\nbeforeAllSubcases((t) => {\n  if (t.params.scalarType === 'f16') {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  }\n  t.skipIf(\n    kDerefCases[t.params.derefType].requires_pointer_composite_access &&\n    !t.hasLanguageFeature('pointer_composite_access')\n  );\n}).\nfn(async (t) => {\n  const ty = scalarType(t.params.scalarType);\n  const cases = sparseScalarF32Range().map((e) => {\n    return { input: ty.create(e), expected: ty.create(e) };\n  });\n  const elemType = ty.kind;\n  const type = t.params.vectorize ? `vec${t.params.vectorize}<${elemType}>` : elemType;\n  const shaderBuilder = basicExpressionWithPredeclarationBuilder(\n    (value) => `get_dereferenced_value(${value})`,\n    `fn get_dereferenced_value(value: ${type}) -> ${type} {\n        var a = array<${type}, 1>(value);\n        let p = &a;\n        return ${kDerefCases[t.params.derefType].wgsl}[0];\n      }`\n  );\n  await run(t, shaderBuilder, [ty], ty, t.params, cases);\n});\n\ng.test('deref_member').\nspecURL('https://www.w3.org/TR/WGSL/#logical-expr').\ndesc(\n  `\nExpression: (*e).member\n\nPointer expression dereference as lhs of member accessor expression\n`\n).\nparams((u) =>\nu.\ncombine('inputSource', allButConstInputSource).\ncombine('vectorize', [undefined, 2, 3, 4]).\ncombine('scalarType', ['bool', 'u32', 'i32', 'f32', 'f16']).\ncombine('derefType', keysOf(kDerefCases))\n).\nbeforeAllSubcases((t) => {\n  if (t.params.scalarType === 'f16') {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  }\n  t.skipIf(\n    kDerefCases[t.params.derefType].requires_pointer_composite_access &&\n    !t.hasLanguageFeature('pointer_composite_access')\n  );\n}).\nfn(async (t) => {\n  const ty = scalarType(t.params.scalarType);\n  const cases = sparseScalarF32Range().map((e) => {\n    return { input: ty.create(e), expected: ty.create(e) };\n  });\n  const elemType = ty.kind;\n  const type = t.params.vectorize ? `vec${t.params.vectorize}<${elemType}>` : elemType;\n  const shaderBuilder = basicExpressionWithPredeclarationBuilder(\n    (value) => `get_dereferenced_value(${value})`,\n    `struct S {\n        m : ${type}\n      }\n      fn get_dereferenced_value(value: ${type}) -> ${type} {\n        var a = S(value);\n        let p = &a;\n        return ${kDerefCases[t.params.derefType].wgsl}.m;\n      }`\n  );\n  await run(t, shaderBuilder, [ty], ty, t.params, cases);\n});\n\ng.test('deref_swizzle').\nspecURL('https://www.w3.org/TR/WGSL/#logical-expr').\ndesc(\n  `\nExpression: (*e).swizzle\n\nPointer expression dereference as lhs of swizzle expression\n`\n).\nparams((u) =>\nu.\ncombine('inputSource', allButConstInputSource).\ncombine('vectorize', [2, 3, 4]).\ncombine('scalarType', ['bool', 'u32', 'i32', 'f32', 'f16']).\ncombine('derefType', keysOf(kDerefCases))\n).\nbeforeAllSubcases((t) => {\n  if (t.params.scalarType === 'f16') {\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['shader-f16'] });\n  }\n  t.skipIf(\n    kDerefCases[t.params.derefType].requires_pointer_composite_access &&\n    !t.hasLanguageFeature('pointer_composite_access')\n  );\n}).\nfn(async (t) => {\n  const ty = scalarType(t.params.scalarType);\n  const cases = sparseScalarF32Range().map((e) => {\n    return { input: ty.create(e), expected: ty.create(e) };\n  });\n  const elemType = ty.kind;\n  const type = `vec${t.params.vectorize}<${elemType}>`;\n  const swizzle = 'xyzw'.slice(0, t.params.vectorize);\n  const shaderBuilder = basicExpressionWithPredeclarationBuilder(\n    (value) => `get_dereferenced_value(${value})`,\n    `fn get_dereferenced_value(value: ${type}) -> ${type} {\n        var a = value;\n        let p = &a;\n        return ${kDerefCases[t.params.derefType].wgsl}.${swizzle};\n      }`\n  );\n  await run(t, shaderBuilder, [ty], ty, t.params, cases);\n});"],"mappings":"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","ignoreList":[]}