{"version":3,"file":"af_multiplication.spec.js","names":["description","makeTestGroup","GPUTest","Type","onlyConstInputSource","run","d","abstractFloatBinary","g","test","specURL","desc","params","u","combine","fn","t","cases","get","abstractFloat","dim","vec"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/af_multiplication.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution Tests for non-matrix abstract-float multiplication expression\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { Type } from '../../../../util/conversion.js';\nimport { onlyConstInputSource, run } from '../expression.js';\n\nimport { d } from './af_multiplication.cache.js';\nimport { abstractFloatBinary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('scalar').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nExpression: x * y, where x and y are scalars\nAccuracy: Correctly rounded\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource)).\nfn(async (t) => {\n  const cases = await d.get('scalar');\n  await run(\n    t,\n    abstractFloatBinary('*'),\n    [Type.abstractFloat, Type.abstractFloat],\n    Type.abstractFloat,\n    t.params,\n    cases\n  );\n});\n\ng.test('vector').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nExpression: x * y, where x and y are vectors\nAccuracy: Correctly rounded\n`\n).\nparams((u) =>\nu.combine('inputSource', onlyConstInputSource).combine('vectorize', [2, 3, 4])\n).\nfn(async (t) => {\n  const cases = await d.get('scalar'); // Using vectorize to generate vector cases based on scalar cases\n  await run(\n    t,\n    abstractFloatBinary('*'),\n    [Type.abstractFloat, Type.abstractFloat],\n    Type.abstractFloat,\n    t.params,\n    cases\n  );\n});\n\ng.test('vector_scalar').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nExpression: x * y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource).combine('dim', [2, 3, 4])).\nfn(async (t) => {\n  const dim = t.params.dim;\n  const cases = await d.get(`vec${dim}_scalar`);\n  await run(\n    t,\n    abstractFloatBinary('*'),\n    [Type.vec(dim, Type.abstractFloat), Type.abstractFloat],\n    Type.vec(dim, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('scalar_vector').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nExpression: x * y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n).\nparams((u) => u.combine('inputSource', onlyConstInputSource).combine('dim', [2, 3, 4])).\nfn(async (t) => {\n  const dim = t.params.dim;\n  const cases = await d.get(`scalar_vec${dim}`);\n  await run(\n    t,\n    abstractFloatBinary('*'),\n    [Type.abstractFloat, Type.vec(dim, Type.abstractFloat)],\n    Type.vec(dim, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});"],"mappings":"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","ignoreList":[]}