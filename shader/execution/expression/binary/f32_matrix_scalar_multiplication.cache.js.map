{"version":3,"file":"f32_matrix_scalar_multiplication.cache.js","names":["FP","sparseMatrixF32Range","sparseScalarF32Range","makeCaseCache","mat_scalar_cases","flatMap","cols","rows","map","nonConst","f32","generateMatrixScalarToMatrixCases","multiplicationMatrixScalarInterval","reduce","a","b","scalar_mat_cases","generateScalarMatrixToMatrixCases","multiplicationScalarMatrixInterval","d"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_matrix_scalar_multiplication.cache.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { FP } from '../../../../util/floating_point.js';import { sparseMatrixF32Range, sparseScalarF32Range } from '../../../../util/math.js';import { makeCaseCache } from '../case_cache.js';\n\n// Cases: matCxR_scalar_[non_]const\nconst mat_scalar_cases = [2, 3, 4].\nflatMap((cols) =>\n[2, 3, 4].flatMap((rows) =>\n[true, false].map((nonConst) => ({\n  [`mat${cols}x${rows}_scalar_${nonConst ? 'non_const' : 'const'}`]: () => {\n    return FP.f32.generateMatrixScalarToMatrixCases(\n      sparseMatrixF32Range(cols, rows),\n      sparseScalarF32Range(),\n      nonConst ? 'unfiltered' : 'finite',\n      FP.f32.multiplicationMatrixScalarInterval\n    );\n  }\n}))\n)\n).\nreduce((a, b) => ({ ...a, ...b }), {});\n\n// Cases: scalar_matCxR_[non_]const\nconst scalar_mat_cases = [2, 3, 4].\nflatMap((cols) =>\n[2, 3, 4].flatMap((rows) =>\n[true, false].map((nonConst) => ({\n  [`scalar_mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n    return FP.f32.generateScalarMatrixToMatrixCases(\n      sparseScalarF32Range(),\n      sparseMatrixF32Range(cols, rows),\n      nonConst ? 'unfiltered' : 'finite',\n      FP.f32.multiplicationScalarMatrixInterval\n    );\n  }\n}))\n)\n).\nreduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('binary/f32_matrix_scalar_multiplication', {\n  ...mat_scalar_cases,\n  ...scalar_mat_cases\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,SAASA,EAAE,QAAQ,oCAAoC,CAAC,SAASC,oBAAoB,EAAEC,oBAAoB,QAAQ,0BAA0B,CAAC,SAASC,aAAa,QAAQ,kBAAkB,CAAC,CAElM;AACA,MAAMC,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAClCC,OAAO,CAAC,CAACC,IAAI;AACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACD,OAAO,CAAC,CAACE,IAAI;AACvB,CAAC,IAAI,EAAE,KAAK,CAAC,CAACC,GAAG,CAAC,CAACC,QAAQ,MAAM;EAC/B,CAAC,MAAMH,IAAI,IAAIC,IAAI,WAAWE,QAAQ,GAAG,WAAW,GAAG,OAAO,EAAE,GAAG,MAAM;IACvE,OAAOT,EAAE,CAACU,GAAG,CAACC,iCAAiC;MAC7CV,oBAAoB,CAACK,IAAI,EAAEC,IAAI,CAAC;MAChCL,oBAAoB,CAAC,CAAC;MACtBO,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCT,EAAE,CAACU,GAAG,CAACE;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACF;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC;AACA,MAAMC,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAClCX,OAAO,CAAC,CAACC,IAAI;AACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACD,OAAO,CAAC,CAACE,IAAI;AACvB,CAAC,IAAI,EAAE,KAAK,CAAC,CAACC,GAAG,CAAC,CAACC,QAAQ,MAAM;EAC/B,CAAC,aAAaH,IAAI,IAAIC,IAAI,IAAIE,QAAQ,GAAG,WAAW,GAAG,OAAO,EAAE,GAAG,MAAM;IACvE,OAAOT,EAAE,CAACU,GAAG,CAACO,iCAAiC;MAC7Cf,oBAAoB,CAAC,CAAC;MACtBD,oBAAoB,CAACK,IAAI,EAAEC,IAAI,CAAC;MAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCT,EAAE,CAACU,GAAG,CAACQ;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACF;AACA,CAAC;AACDL,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC,OAAO,MAAMI,CAAC,GAAGhB,aAAa,CAAC,yCAAyC,EAAE;EACxE,GAAGC,gBAAgB;EACnB,GAAGY;AACL,CAAC,CAAC","ignoreList":[]}