{"version":3,"file":"af_subtraction.cache.js","names":["FP","sparseScalarF64Range","makeCaseCache","getSubtractionAFInterval","kSparseVectorAFValues","subtractionVectorScalarInterval","vec","s","abstract","toVector","map","v","subtractionScalarVectorInterval","vector_scalar_cases","dim","generateVectorScalarToVectorCases","reduce","a","b","scalar_vector_cases","generateScalarVectorToVectorCases","d","scalar","generateScalarPairToIntervalCases"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/af_subtraction.cache.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { FP } from '../../../../util/floating_point.js';import { sparseScalarF64Range } from '../../../../util/math.js';import { makeCaseCache } from '../case_cache.js';\n\nimport { getSubtractionAFInterval, kSparseVectorAFValues } from './af_data.js';\n\nconst subtractionVectorScalarInterval = (vec, s) => {\n  return FP.abstract.toVector(vec.map((v) => getSubtractionAFInterval(v, s)));\n};\n\nconst subtractionScalarVectorInterval = (s, vec) => {\n  return FP.abstract.toVector(vec.map((v) => getSubtractionAFInterval(s, v)));\n};\n\nconst vector_scalar_cases = [2, 3, 4].\nmap((dim) => ({\n  [`vec${dim}_scalar`]: () => {\n    return FP.abstract.generateVectorScalarToVectorCases(\n      kSparseVectorAFValues[dim],\n      sparseScalarF64Range(),\n      'finite',\n      subtractionVectorScalarInterval\n    );\n  }\n})).\nreduce((a, b) => ({ ...a, ...b }), {});\n\nconst scalar_vector_cases = [2, 3, 4].\nmap((dim) => ({\n  [`scalar_vec${dim}`]: () => {\n    return FP.abstract.generateScalarVectorToVectorCases(\n      sparseScalarF64Range(),\n      kSparseVectorAFValues[dim],\n      'finite',\n      subtractionScalarVectorInterval\n    );\n  }\n})).\nreduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('binary/af_subtraction', {\n  ['scalar']: () => {\n    return FP.abstract.generateScalarPairToIntervalCases(\n      sparseScalarF64Range(),\n      sparseScalarF64Range(),\n      'finite',\n      getSubtractionAFInterval\n    );\n  },\n  ...vector_scalar_cases,\n  ...scalar_vector_cases\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,SAASA,EAAE,QAAQ,oCAAoC,CAAC,SAASC,oBAAoB,QAAQ,0BAA0B,CAAC,SAASC,aAAa,QAAQ,kBAAkB,CAE3K,SAASC,wBAAwB,EAAEC,qBAAqB,QAAQ,cAAc;;AAE9E,MAAMC,+BAA+B,GAAGA,CAACC,GAAG,EAAEC,CAAC,KAAK;EAClD,OAAOP,EAAE,CAACQ,QAAQ,CAACC,QAAQ,CAACH,GAAG,CAACI,GAAG,CAAC,CAACC,CAAC,KAAKR,wBAAwB,CAACQ,CAAC,EAAEJ,CAAC,CAAC,CAAC,CAAC;AAC7E,CAAC;;AAED,MAAMK,+BAA+B,GAAGA,CAACL,CAAC,EAAED,GAAG,KAAK;EAClD,OAAON,EAAE,CAACQ,QAAQ,CAACC,QAAQ,CAACH,GAAG,CAACI,GAAG,CAAC,CAACC,CAAC,KAAKR,wBAAwB,CAACI,CAAC,EAAEI,CAAC,CAAC,CAAC,CAAC;AAC7E,CAAC;;AAED,MAAME,mBAAmB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrCH,GAAG,CAAC,CAACI,GAAG,MAAM;EACZ,CAAC,MAAMA,GAAG,SAAS,GAAG,MAAM;IAC1B,OAAOd,EAAE,CAACQ,QAAQ,CAACO,iCAAiC;MAClDX,qBAAqB,CAACU,GAAG,CAAC;MAC1Bb,oBAAoB,CAAC,CAAC;MACtB,QAAQ;MACRI;IACF,CAAC;EACH;AACF,CAAC,CAAC,CAAC;AACHW,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC,MAAMC,mBAAmB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrCT,GAAG,CAAC,CAACI,GAAG,MAAM;EACZ,CAAC,aAAaA,GAAG,EAAE,GAAG,MAAM;IAC1B,OAAOd,EAAE,CAACQ,QAAQ,CAACY,iCAAiC;MAClDnB,oBAAoB,CAAC,CAAC;MACtBG,qBAAqB,CAACU,GAAG,CAAC;MAC1B,QAAQ;MACRF;IACF,CAAC;EACH;AACF,CAAC,CAAC,CAAC;AACHI,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC,OAAO,MAAMG,CAAC,GAAGnB,aAAa,CAAC,uBAAuB,EAAE;EACtD,CAAC,QAAQ,GAAGoB,CAAA,KAAM;IAChB,OAAOtB,EAAE,CAACQ,QAAQ,CAACe,iCAAiC;MAClDtB,oBAAoB,CAAC,CAAC;MACtBA,oBAAoB,CAAC,CAAC;MACtB,QAAQ;MACRE;IACF,CAAC;EACH,CAAC;EACD,GAAGU,mBAAmB;EACtB,GAAGM;AACL,CAAC,CAAC","ignoreList":[]}