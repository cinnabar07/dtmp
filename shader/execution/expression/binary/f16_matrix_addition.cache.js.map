{"version":3,"file":"f16_matrix_addition.cache.js","names":["FP","sparseMatrixF16Range","makeCaseCache","mat_cases","flatMap","cols","rows","map","nonConst","f16","generateMatrixPairToMatrixCases","additionMatrixMatrixInterval","reduce","a","b","d"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f16_matrix_addition.cache.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { FP } from '../../../../util/floating_point.js';import { sparseMatrixF16Range } from '../../../../util/math.js';import { makeCaseCache } from '../case_cache.js';\n\n// Cases: matCxR_[non_]const\nconst mat_cases = [2, 3, 4].\nflatMap((cols) =>\n[2, 3, 4].flatMap((rows) =>\n[true, false].map((nonConst) => ({\n  [`mat${cols}x${rows}_${nonConst ? 'non_const' : 'const'}`]: () => {\n    return FP.f16.generateMatrixPairToMatrixCases(\n      sparseMatrixF16Range(cols, rows),\n      sparseMatrixF16Range(cols, rows),\n      nonConst ? 'unfiltered' : 'finite',\n      FP.f16.additionMatrixMatrixInterval\n    );\n  }\n}))\n)\n).\nreduce((a, b) => ({ ...a, ...b }), {});\n\nexport const d = makeCaseCache('binary/f16_matrix_addition', mat_cases);"],"mappings":";;IAAA;AACA;AACA,GAAG,SAASA,EAAE,QAAQ,oCAAoC,CAAC,SAASC,oBAAoB,QAAQ,0BAA0B,CAAC,SAASC,aAAa,QAAQ,kBAAkB,CAAC,CAE5K;AACA,MAAMC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3BC,OAAO,CAAC,CAACC,IAAI;AACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACD,OAAO,CAAC,CAACE,IAAI;AACvB,CAAC,IAAI,EAAE,KAAK,CAAC,CAACC,GAAG,CAAC,CAACC,QAAQ,MAAM;EAC/B,CAAC,MAAMH,IAAI,IAAIC,IAAI,IAAIE,QAAQ,GAAG,WAAW,GAAG,OAAO,EAAE,GAAG,MAAM;IAChE,OAAOR,EAAE,CAACS,GAAG,CAACC,+BAA+B;MAC3CT,oBAAoB,CAACI,IAAI,EAAEC,IAAI,CAAC;MAChCL,oBAAoB,CAACI,IAAI,EAAEC,IAAI,CAAC;MAChCE,QAAQ,GAAG,YAAY,GAAG,QAAQ;MAClCR,EAAE,CAACS,GAAG,CAACE;IACT,CAAC;EACH;AACF,CAAC,CAAC;AACF;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM,EAAE,GAAGD,CAAC,EAAE,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEtC,OAAO,MAAMC,CAAC,GAAGb,aAAa,CAAC,4BAA4B,EAAEC,SAAS,CAAC","ignoreList":[]}