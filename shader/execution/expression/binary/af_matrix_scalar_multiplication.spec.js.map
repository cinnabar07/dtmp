{"version":3,"file":"af_matrix_scalar_multiplication.spec.js","names":["description","makeTestGroup","GPUTest","Type","onlyConstInputSource","run","d","abstractFloatBinary","g","test","specURL","desc","params","u","combine","fn","t","cols","rows","cases","get","mat","abstractFloat"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/af_matrix_scalar_multiplication.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nExecution Tests for matrix-scalar and scalar-matrix AbstractFloat multiplication expression\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { Type } from '../../../../util/conversion.js';\nimport { onlyConstInputSource, run } from '../expression.js';\n\nimport { d } from './af_matrix_scalar_multiplication.cache.js';\nimport { abstractFloatBinary } from './binary.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('matrix_scalar').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nExpression: x * y, where x is a matrix and y is a scalar\nAccuracy: Correctly rounded\n`\n).\nparams((u) =>\nu.\ncombine('inputSource', onlyConstInputSource).\ncombine('cols', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nfn(async (t) => {\n  const cols = t.params.cols;\n  const rows = t.params.rows;\n  const cases = await d.get(`mat${cols}x${rows}_scalar`);\n  await run(\n    t,\n    abstractFloatBinary('*'),\n    [Type.mat(cols, rows, Type.abstractFloat), Type.abstractFloat],\n    Type.mat(cols, rows, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});\n\ng.test('scalar_matrix').\nspecURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation').\ndesc(\n  `\nExpression: x * y, where x is a scalar and y is a matrix\nAccuracy: Correctly rounded\n`\n).\nparams((u) =>\nu.\ncombine('inputSource', onlyConstInputSource).\ncombine('cols', [2, 3, 4]).\ncombine('rows', [2, 3, 4])\n).\nfn(async (t) => {\n  const cols = t.params.cols;\n  const rows = t.params.rows;\n  const cases = await d.get(`scalar_mat${cols}x${rows}`);\n  await run(\n    t,\n    abstractFloatBinary('*'),\n    [Type.abstractFloat, Type.mat(cols, rows, Type.abstractFloat)],\n    Type.mat(cols, rows, Type.abstractFloat),\n    t.params,\n    cases\n  );\n});"],"mappings":";;IAAA;AACA;AACA,GAAG,OAAO,MAAMA,WAAW,GAAG;AAC9B;AACA,CAAC,CAAC,SAASC,aAAa,QAAQ,+CAA+C,CAC/E,SAASC,OAAO,QAAQ,yBAAyB,CACjD,SAASC,IAAI,QAAQ,gCAAgC;AACrD,SAASC,oBAAoB,EAAEC,GAAG,QAAQ,kBAAkB;;AAE5D,SAASC,CAAC,QAAQ,4CAA4C;AAC9D,SAASC,mBAAmB,QAAQ,aAAa;;AAEjD,OAAO,MAAMC,CAAC,GAAGP,aAAa,CAACC,OAAO,CAAC;;AAEvCM,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;AACvBC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAEV,oBAAoB,CAAC;AAC5CU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1BA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzB,CAAC;AACDC,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,IAAI,GAAGD,CAAC,CAACJ,MAAM,CAACK,IAAI;EAC1B,MAAMC,IAAI,GAAGF,CAAC,CAACJ,MAAM,CAACM,IAAI;EAC1B,MAAMC,KAAK,GAAG,MAAMb,CAAC,CAACc,GAAG,CAAC,MAAMH,IAAI,IAAIC,IAAI,SAAS,CAAC;EACtD,MAAMb,GAAG;IACPW,CAAC;IACDT,mBAAmB,CAAC,GAAG,CAAC;IACxB,CAACJ,IAAI,CAACkB,GAAG,CAACJ,IAAI,EAAEC,IAAI,EAAEf,IAAI,CAACmB,aAAa,CAAC,EAAEnB,IAAI,CAACmB,aAAa,CAAC;IAC9DnB,IAAI,CAACkB,GAAG,CAACJ,IAAI,EAAEC,IAAI,EAAEf,IAAI,CAACmB,aAAa,CAAC;IACxCN,CAAC,CAACJ,MAAM;IACRO;EACF,CAAC;AACH,CAAC,CAAC;;AAEFX,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;AACvBC,OAAO,CAAC,uDAAuD,CAAC;AAChEC,IAAI;EACF;AACF;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAAC,CAACC,CAAC;AACTA,CAAC;AACDC,OAAO,CAAC,aAAa,EAAEV,oBAAoB,CAAC;AAC5CU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1BA,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACzB,CAAC;AACDC,EAAE,CAAC,OAAOC,CAAC,KAAK;EACd,MAAMC,IAAI,GAAGD,CAAC,CAACJ,MAAM,CAACK,IAAI;EAC1B,MAAMC,IAAI,GAAGF,CAAC,CAACJ,MAAM,CAACM,IAAI;EAC1B,MAAMC,KAAK,GAAG,MAAMb,CAAC,CAACc,GAAG,CAAC,aAAaH,IAAI,IAAIC,IAAI,EAAE,CAAC;EACtD,MAAMb,GAAG;IACPW,CAAC;IACDT,mBAAmB,CAAC,GAAG,CAAC;IACxB,CAACJ,IAAI,CAACmB,aAAa,EAAEnB,IAAI,CAACkB,GAAG,CAACJ,IAAI,EAAEC,IAAI,EAAEf,IAAI,CAACmB,aAAa,CAAC,CAAC;IAC9DnB,IAAI,CAACkB,GAAG,CAACJ,IAAI,EAAEC,IAAI,EAAEf,IAAI,CAACmB,aAAa,CAAC;IACxCN,CAAC,CAACJ,MAAM;IACRO;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]}