{"version":3,"file":"value_init.spec.js","names":["description","makeTestGroup","GPUTest","Type","g","generateShader","isF16","addressSpace","typeDecl","testValue","comparison","moduleScope","functionScope","run","t","wgsl","pipeline","device","createComputePipelineAsync","layout","compute","module","createShaderModule","code","entryPoint","resultBuffer","createBufferTracked","size","usage","GPUBufferUsage","STORAGE","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","globalThis","_TRAMPOLINE_","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","expectGPUBufferValuesEqual","Uint32Array","test","desc","params","u","combine","beforeAllSubcases","type","selectDeviceOrSkipTestCase","fn","create","count","beginSubcases","c","r","testScalarValue","arraySize","i","innerDecl","j"],"sources":["../../../../src/webgpu/shader/execution/value_init.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `Test that variables in the shader are value initialized`;import { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { GPUTest } from '../../gpu_test.js';\nimport { Type } from '../../util/conversion.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nfunction generateShader(\nisF16,\naddressSpace,\ntypeDecl,\ntestValue,\ncomparison)\n{\n  let moduleScope = `\n    ${isF16 ? 'enable f16;' : ''}\n    struct Output {\n      failed : atomic<u32>\n    }\n    @group(0) @binding(0) var<storage, read_write> output : Output;\n  `;\n\n  let functionScope = '';\n  switch (addressSpace) {\n    case 'private':\n      moduleScope += `\\nvar<private> testVar: ${typeDecl} = ${testValue};`;\n      break;\n    case 'function':\n      functionScope += `\\nvar testVar: ${typeDecl} = ${testValue};`;\n      break;\n  }\n\n  return `\n    ${moduleScope}\n    @compute @workgroup_size(1, 1, 1)\n    fn main() {\n      ${functionScope}\n      ${comparison}\n    }\n  `;\n}\n\nasync function run(t, wgsl) {\n  const pipeline = await t.device.createComputePipelineAsync({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code: wgsl\n      }),\n      entryPoint: 'main'\n    }\n  });\n\n  const resultBuffer = t.createBufferTracked({\n    size: 4,\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC\n  });\n\n  const bindGroup = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n    {\n      binding: 0,\n      resource: {\n        buffer: resultBuffer\n      }\n    }]\n\n  });\n\n  const encoder = globalThis._TRAMPOLINE_(\"createCommandEncoder\", t.device, t.device.createCommandEncoder, [], () => t.device.createCommandEncoder());\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bindGroup);\n  pass.dispatchWorkgroups(1);\n  pass.end();\n  globalThis._TRAMPOLINE_(\"submit\", t, t.queue.submit, [[encoder.finish()]], () => t.queue.submit([encoder.finish()]));\n  t.expectGPUBufferValuesEqual(resultBuffer, new Uint32Array([0]));\n}\n\ng.test('scalars').\ndesc(`Test that scalars in private, and function storage classes can be initialized to a value.`).\nparams((u) =>\nu.\ncombine('addressSpace', ['private', 'function']).\ncombine('type', ['bool', 'f32', 'f16', 'i32', 'u32'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const typeDecl = t.params.type;\n  const testValue = Type[typeDecl].create(5).wgsl();\n\n  const comparison = `if (testVar != ${testValue}) {\n      atomicStore(&output.failed, 1u);\n    }`;\n  const wgsl = generateShader(\n    t.params.type === 'f16',\n    t.params.addressSpace,\n    typeDecl,\n    testValue,\n    comparison\n  );\n\n  await run(t, wgsl);\n});\n\ng.test('vec').\ndesc(`Test that vectors in private, and function storage classes can be initialized to a value.`).\nparams((u) =>\nu.\ncombine('addressSpace', ['private', 'function']).\ncombine('type', ['bool', 'f32', 'f16', 'i32', 'u32']).\ncombine('count', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const typeDecl = `vec${t.params.count}<${t.params.type}>`;\n  const testValue = `${typeDecl}(${Type[t.params.type].create(5).wgsl()})`;\n\n  const comparison = `if (!all(testVar == ${testValue})) {\n      atomicStore(&output.failed, 1u);\n    }`;\n  const wgsl = generateShader(\n    t.params.type === 'f16',\n    t.params.addressSpace,\n    typeDecl,\n    testValue,\n    comparison\n  );\n\n  await run(t, wgsl);\n});\n\ng.test('mat').\ndesc(\n  `Test that matrices in private, and function storage classes can be initialized to a value.`\n).\nparams((u) =>\nu.\ncombine('addressSpace', ['private', 'function']).\ncombine('type', ['f32', 'f16']).\nbeginSubcases().\ncombine('c', [2, 3, 4]).\ncombine('r', [2, 3, 4])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const typeDecl = `mat${t.params.c}x${t.params.r}<${t.params.type}>`;\n  const testScalarValue = Type[t.params.type].create(5).wgsl();\n\n  let testValue = `${typeDecl}(`;\n  for (let c = 0; c < t.params.c; c++) {\n    for (let r = 0; r < t.params.r; r++) {\n      testValue += `${testScalarValue},`;\n    }\n  }\n  testValue += ')';\n\n  const comparison = `for ( var i = 0; i < ${t.params.c}; i++) {\n      for (var k = 0; k < ${t.params.r}; k++) {\n        if (testVar[i][k] != ${testScalarValue}) {\n          atomicStore(&output.failed, 1u);\n        }\n      }\n    }`;\n  const wgsl = generateShader(\n    t.params.type === 'f16',\n    t.params.addressSpace,\n    typeDecl,\n    testValue,\n    comparison\n  );\n\n  await run(t, wgsl);\n});\n\ng.test('array').\ndesc(`Test that arrays in private, and function storage classes can be initialized to a value.`).\nparams((u) =>\nu.\ncombine('addressSpace', ['private', 'function']).\ncombine('type', ['bool', 'i32', 'u32', 'f32', 'f16'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const arraySize = 4;\n  const typeDecl = `array<${t.params.type}, ${arraySize}>`;\n  const testScalarValue = Type[t.params.type].create(5).wgsl();\n\n  let testValue = `${typeDecl}(`;\n  for (let i = 0; i < arraySize; i++) {\n    testValue += `${testScalarValue},`;\n  }\n  testValue += ')';\n\n  const comparison = `for ( var i = 0; i < ${arraySize}; i++) {\n      if (testVar[i] != ${testScalarValue}) {\n        atomicStore(&output.failed, 1u);\n      }\n    }`;\n  const wgsl = generateShader(\n    t.params.type === 'f16',\n    t.params.addressSpace,\n    typeDecl,\n    testValue,\n    comparison\n  );\n\n  await run(t, wgsl);\n});\n\ng.test('array,nested').\ndesc(`Test that arrays in private, and function storage classes can be initialized to a value.`).\nparams((u) =>\nu.\ncombine('addressSpace', ['private', 'function']).\ncombine('type', ['bool', 'i32', 'u32', 'f32', 'f16'])\n).\nbeforeAllSubcases((t) => {\n  if (t.params.type === 'f16') {\n    t.selectDeviceOrSkipTestCase('shader-f16');\n  }\n}).\nfn(async (t) => {\n  const arraySize = 4;\n\n  const innerDecl = `array<${t.params.type}, ${arraySize}>`;\n  const typeDecl = `array<${innerDecl}, ${arraySize}>`;\n  const testScalarValue = Type[t.params.type].create(5).wgsl();\n\n  let testValue = `${typeDecl}(`;\n  for (let i = 0; i < arraySize; i++) {\n    testValue += `${innerDecl}(`;\n    for (let j = 0; j < arraySize; j++) {\n      testValue += `${testScalarValue},`;\n    }\n    testValue += `),`;\n  }\n  testValue += ')';\n\n  const comparison = `\n    for ( var i = 0; i < ${arraySize}; i++) {\n      for ( var k = 0; k < ${arraySize}; k++) {\n        if (testVar[i][k] != ${testScalarValue}) {\n          atomicStore(&output.failed, 1u);\n        }\n      }\n    }\n    `;\n  const wgsl = generateShader(\n    t.params.type === 'f16',\n    t.params.addressSpace,\n    typeDecl,\n    testValue,\n    comparison\n  );\n\n  await run(t, wgsl);\n});\n\ng.test('struct').\ndesc(`Test that structs in private, and function storage classes can be initialized to a value.`).\nparams((u) => u.combine('addressSpace', ['private', 'function'])).\nfn(async (t) => {\n  let moduleScope = `\n    struct Output {\n      failed : atomic<u32>\n    }\n    @group(0) @binding(0) var<storage, read_write> output : Output;\n\n    struct A {\n        a: i32,\n        b: f32,\n    }\n\n    struct S {\n        c: f32,\n        d: A,\n        e: array<i32, 2>,\n    }\n  `;\n\n  const typeDecl = 'S';\n  const testValue = 'S(5.f, A(5i, 5.f), array<i32, 2>(5i, 5i))';\n\n  let functionScope = '';\n  switch (t.params.addressSpace) {\n    case 'private':\n      moduleScope += `\\nvar<private> testVar: ${typeDecl} = ${testValue};`;\n      break;\n    case 'function':\n      functionScope += `\\nvar testVar: ${typeDecl} = ${testValue};`;\n      break;\n  }\n\n  const comparison = `\n    if (testVar.c != 5f || testVar.d.a != 5i || testVar.d.b != 5.f || testVar.e[0] != 5i || testVar.e[1] != 5i) {\n      atomicStore(&output.failed, 1u);\n    }\n    `;\n\n  const wgsl = `\n      ${moduleScope}\n      @compute @workgroup_size(1, 1, 1)\n      fn main() {\n        ${functionScope}\n        ${comparison}\n      }\n    `;\n\n  await run(t, wgsl);\n});"],"mappings":"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","ignoreList":[]}