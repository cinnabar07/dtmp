{"version":3,"file":"create_elements.js","names":["unreachable","kAllCanvasTypes","kValidCanvasContextIds","createCanvas","test","canvasType","width","height","document","createOnscreenCanvas","skip","OffscreenCanvas","createOffscreenCanvas","canvas","createElement"],"sources":["../../../src/webgpu/util/create_elements.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { unreachable } from '../../common/util/util.js';\n// TESTING_TODO: This should expand to more canvas types (which will enhance a bunch of tests):\n// - canvas element not in dom\n// - canvas element in dom\n// - offscreen canvas from transferControlToOffscreen from canvas not in dom\n// - offscreen canvas from transferControlToOffscreen from canvas in dom\n// - offscreen canvas from new OffscreenCanvas\nexport const kAllCanvasTypes = ['onscreen', 'offscreen'];\n\n\n\n\n\n\n\n/** Valid contextId for HTMLCanvasElement/OffscreenCanvas,\n *  spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-canvas-getcontext\n */\nexport const kValidCanvasContextIds = [\n'2d',\n'bitmaprenderer',\n'webgl',\n'webgl2',\n'webgpu'];\n\n\n\n/** Create HTMLCanvas/OffscreenCanvas. */\nexport function createCanvas(\ntest,\ncanvasType,\nwidth,\nheight)\n{\n  if (canvasType === 'onscreen') {\n    if (typeof document !== 'undefined') {\n      return createOnscreenCanvas(test, width, height);\n    } else {\n      test.skip('Cannot create HTMLCanvasElement');\n    }\n  } else if (canvasType === 'offscreen') {\n    if (typeof OffscreenCanvas !== 'undefined') {\n      return createOffscreenCanvas(test, width, height);\n    } else {\n      test.skip('Cannot create an OffscreenCanvas');\n    }\n  } else {\n    unreachable();\n  }\n}\n\n/** Create HTMLCanvasElement. */\nexport function createOnscreenCanvas(\ntest,\nwidth,\nheight)\n{\n  let canvas;\n  if (typeof document !== 'undefined') {\n    canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n  } else {\n    test.skip('Cannot create HTMLCanvasElement');\n  }\n  return canvas;\n}\n\n/** Create OffscreenCanvas. */\nexport function createOffscreenCanvas(\ntest,\nwidth,\nheight)\n{\n  if (typeof OffscreenCanvas === 'undefined') {\n    test.skip('OffscreenCanvas is not supported');\n  }\n\n  return new OffscreenCanvas(width, height);\n}"],"mappings":";;IAAA;AACA;AACA,GAAG,SAASA,WAAW,QAAQ,2BAA2B,CAAC,CAC3D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC;;;;;;;AAQxD;AACA;AACA;AACA,OAAO,MAAMC,sBAAsB,GAAG;AACtC,IAAI;AACJ,gBAAgB;AAChB,OAAO;AACP,QAAQ;AACR,QAAQ,CAAC;;;;AAIT;AACA,OAAO,SAASC,YAAYA;AAC5BC,IAAI;AACJC,UAAU;AACVC,KAAK;AACLC,MAAM;AACN;EACE,IAAIF,UAAU,KAAK,UAAU,EAAE;IAC7B,IAAI,OAAOG,QAAQ,KAAK,WAAW,EAAE;MACnC,OAAOC,oBAAoB,CAACL,IAAI,EAAEE,KAAK,EAAEC,MAAM,CAAC;IAClD,CAAC,MAAM;MACLH,IAAI,CAACM,IAAI,CAAC,iCAAiC,CAAC;IAC9C;EACF,CAAC,MAAM,IAAIL,UAAU,KAAK,WAAW,EAAE;IACrC,IAAI,OAAOM,eAAe,KAAK,WAAW,EAAE;MAC1C,OAAOC,qBAAqB,CAACR,IAAI,EAAEE,KAAK,EAAEC,MAAM,CAAC;IACnD,CAAC,MAAM;MACLH,IAAI,CAACM,IAAI,CAAC,kCAAkC,CAAC;IAC/C;EACF,CAAC,MAAM;IACLV,WAAW,CAAC,CAAC;EACf;AACF;;AAEA;AACA,OAAO,SAASS,oBAAoBA;AACpCL,IAAI;AACJE,KAAK;AACLC,MAAM;AACN;EACE,IAAIM,MAAM;EACV,IAAI,OAAOL,QAAQ,KAAK,WAAW,EAAE;IACnCK,MAAM,GAAGL,QAAQ,CAACM,aAAa,CAAC,QAAQ,CAAC;IACzCD,MAAM,CAACP,KAAK,GAAGA,KAAK;IACpBO,MAAM,CAACN,MAAM,GAAGA,MAAM;EACxB,CAAC,MAAM;IACLH,IAAI,CAACM,IAAI,CAAC,iCAAiC,CAAC;EAC9C;EACA,OAAOG,MAAM;AACf;;AAEA;AACA,OAAO,SAASD,qBAAqBA;AACrCR,IAAI;AACJE,KAAK;AACLC,MAAM;AACN;EACE,IAAI,OAAOI,eAAe,KAAK,WAAW,EAAE;IAC1CP,IAAI,CAACM,IAAI,CAAC,kCAAkC,CAAC;EAC/C;;EAEA,OAAO,IAAIC,eAAe,CAACL,KAAK,EAAEC,MAAM,CAAC;AAC3C","ignoreList":[]}