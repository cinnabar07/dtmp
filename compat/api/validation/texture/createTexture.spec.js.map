{"version":3,"file":"createTexture.spec.js","names":["description","makeTestGroup","kTextureDimensions","kTextureViewDimensions","kColorTextureFormats","kCompatModeUnsupportedStorageTextureFormats","kTextureFormatInfo","getTextureDimensionFromView","CompatibilityTest","g","test","desc","fn","t","expectGPUErrorInCompatibilityMode","createTextureTracked","size","format","usage","GPUTextureUsage","TEXTURE_BINDING","viewFormats","params","u","combine","dimension","textureBindingViewDimension","depthOrArrayLayers","shouldError","filter","baseFormat","beforeAllSubcases","info","skipIfTextureFormatNotSupported","selectDeviceOrSkipTestCase","feature","formatPairs","blockWidth","blockHeight","STORAGE_BINDING"],"sources":["../../../../../../src/webgpu/compat/api/validation/texture/createTexture.spec.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/export const description = `\nTests that you can not use bgra8unorm-srgb in compat mode.\nTests that textureBindingViewDimension must compatible with texture dimension\n`;import { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kTextureDimensions, kTextureViewDimensions } from '../../../../capability_info.js';\nimport {\n  kColorTextureFormats,\n  kCompatModeUnsupportedStorageTextureFormats,\n  kTextureFormatInfo } from\n'../../../../format_info.js';\nimport { getTextureDimensionFromView } from '../../../../util/texture/base.js';\nimport { CompatibilityTest } from '../../../compatibility_test.js';\n\nexport const g = makeTestGroup(CompatibilityTest);\n\ng.test('unsupportedTextureFormats').\ndesc(`Tests that you can not create a bgra8unorm-srgb texture in compat mode.`).\nfn((t) => {\n  t.expectGPUErrorInCompatibilityMode(\n    'validation',\n    () =>\n    t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'bgra8unorm-srgb',\n      usage: GPUTextureUsage.TEXTURE_BINDING\n    }),\n    true\n  );\n});\n\ng.test('unsupportedTextureViewFormats').\ndesc(\n  `Tests that you can not create a bgra8unorm texture with a bgra8unorm-srgb viewFormat in compat mode.`\n).\nfn((t) => {\n  t.expectGPUErrorInCompatibilityMode(\n    'validation',\n    () =>\n    t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'bgra8unorm',\n      viewFormats: ['bgra8unorm-srgb'],\n      usage: GPUTextureUsage.TEXTURE_BINDING\n    }),\n    true\n  );\n});\n\ng.test('invalidTextureBindingViewDimension').\ndesc(\n  `Tests that you can not specify a textureBindingViewDimension that is incompatible with the texture's dimension.`\n).\nparams((u) =>\nu //\n.combine('dimension', kTextureDimensions).\ncombine('textureBindingViewDimension', kTextureViewDimensions)\n).\nfn((t) => {\n  const { dimension, textureBindingViewDimension } = t.params;\n  const depthOrArrayLayers =\n  dimension === '1d' ||\n  textureBindingViewDimension === '1d' ||\n  textureBindingViewDimension === '2d' ?\n  1 :\n  6;\n  const shouldError = getTextureDimensionFromView(textureBindingViewDimension) !== dimension;\n  t.expectGPUErrorInCompatibilityMode(\n    'validation',\n    () => {\n      t.createTextureTracked({\n        size: [1, 1, depthOrArrayLayers],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.TEXTURE_BINDING,\n        dimension,\n        textureBindingViewDimension\n      }); // MAINTENANCE_TODO: remove cast once textureBindingViewDimension is added to IDL\n    },\n    shouldError\n  );\n});\n\ng.test('depthOrArrayLayers_incompatible_with_textureBindingViewDimension').\ndesc(\n  `Tests\n    * if textureBindingViewDimension is '2d' then depthOrArrayLayers must be 1\n    * if textureBindingViewDimension is 'cube' then depthOrArrayLayers must be 6\n    `\n).\nparams((u) =>\nu //\n.combine('textureBindingViewDimension', ['2d', 'cube']).\ncombine('depthOrArrayLayers', [1, 3, 6, 12])\n).\nfn((t) => {\n  const { textureBindingViewDimension, depthOrArrayLayers } = t.params;\n  const shouldError =\n  textureBindingViewDimension === '2d' && depthOrArrayLayers !== 1 ||\n  textureBindingViewDimension === 'cube' && depthOrArrayLayers !== 6;\n  t.expectGPUErrorInCompatibilityMode(\n    'validation',\n    () => {\n      t.createTextureTracked({\n        size: [1, 1, depthOrArrayLayers],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.TEXTURE_BINDING,\n        textureBindingViewDimension\n      }); // MAINTENANCE_TODO: remove cast once textureBindingViewDimension is added to IDL\n    },\n    shouldError\n  );\n});\n\ng.test('format_reinterpretation').\ndesc(\n  `\n    Tests that you can not request different view formats when creating a texture.\n    For example, rgba8unorm can not be viewed as rgba8unorm-srgb\n  `\n).\nparams((u) =>\nu //\n.combine('format', kColorTextureFormats).\nfilter(\n  ({ format }) =>\n  !!kTextureFormatInfo[format].baseFormat &&\n  kTextureFormatInfo[format].baseFormat !== format\n)\n).\nbeforeAllSubcases((t) => {\n  const info = kTextureFormatInfo[t.params.format];\n  t.skipIfTextureFormatNotSupported(t.params.format);\n  t.selectDeviceOrSkipTestCase(info.feature);\n}).\nfn((t) => {\n  const { format } = t.params;\n  const info = kTextureFormatInfo[format];\n\n  const formatPairs = [\n  { format, viewFormats: [info.baseFormat] },\n  { format: info.baseFormat, viewFormats: [format] },\n  { format, viewFormats: [format, info.baseFormat] },\n  { format: info.baseFormat, viewFormats: [format, info.baseFormat] }];\n\n  for (const { format, viewFormats } of formatPairs) {\n    t.expectGPUErrorInCompatibilityMode(\n      'validation',\n      () => {\n        t.createTextureTracked({\n          size: [info.blockWidth, info.blockHeight],\n          format,\n          viewFormats,\n          usage: GPUTextureUsage.TEXTURE_BINDING\n        });\n      },\n      true\n    );\n  }\n});\n\ng.test('unsupportedStorageTextureFormats').\ndesc(`Tests that you can not create unsupported storage texture formats in compat mode.`).\nparams((u) => u.combine('format', kCompatModeUnsupportedStorageTextureFormats)).\nfn((t) => {\n  const { format } = t.params;\n  t.expectGPUErrorInCompatibilityMode(\n    'validation',\n    () =>\n    t.createTextureTracked({\n      size: [1, 1, 1],\n      format,\n      usage: GPUTextureUsage.STORAGE_BINDING\n    }),\n    true\n  );\n});"],"mappings":"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","ignoreList":[]}