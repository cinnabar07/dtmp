{"version":3,"file":"compatibility_test.js","names":["ValidationTest","CompatibilityTest","init","expectValidationErrorInCompatibilityMode","fn","shouldError","expectValidationError","isCompatibility","expectGPUErrorInCompatibilityMode","filter","expectGPUError"],"sources":["../../../src/webgpu/compat/compatibility_test.ts"],"sourcesContent":["/**\n* AUTO-GENERATED - DO NOT EDIT. Source: https://github.com/gpuweb/cts\n**/import { ValidationTest } from '../api/validation/validation_test.js';export class CompatibilityTest extends ValidationTest {\n  async init() {\n    await super.init();\n  }\n\n  /**\n   * Expect a validation error inside the callback.\n   * except when not in compat mode.\n   *\n   * Tests should always do just one WebGPU call in the callback, to make sure that's what's tested.\n   */\n  expectValidationErrorInCompatibilityMode(fn, shouldError = true) {\n    this.expectValidationError(fn, this.isCompatibility && shouldError);\n  }\n\n  /**\n   * Expect the specified WebGPU error to be generated when running the provided function\n   * except when not in compat mode.\n   */\n  expectGPUErrorInCompatibilityMode(\n  filter,\n  fn,\n  shouldError = true)\n  {\n    return this.expectGPUError(filter, fn, this.isCompatibility && shouldError);\n  }\n}"],"mappings":";;IAAA;AACA;AACA,GAAG,SAASA,cAAc,QAAQ,sCAAsC,CAAC,OAAO,MAAMC,iBAAiB,SAASD,cAAc,CAAC,CAC7H,MAAME,IAAIA,CAAA,EAAG,CACX,MAAM,KAAK,CAACA,IAAI,CAAC,CAAC;EACpB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,wCAAwCA,CAACC,EAAE,EAAEC,WAAW,GAAG,IAAI,EAAE;IAC/D,IAAI,CAACC,qBAAqB,CAACF,EAAE,EAAE,IAAI,CAACG,eAAe,IAAIF,WAAW,CAAC;EACrE;;EAEA;AACF;AACA;AACA;EACEG,iCAAiCA;EACjCC,MAAM;EACNL,EAAE;EACFC,WAAW,GAAG,IAAI;EAClB;IACE,OAAO,IAAI,CAACK,cAAc,CAACD,MAAM,EAAEL,EAAE,EAAE,IAAI,CAACG,eAAe,IAAIF,WAAW,CAAC;EAC7E;AACF","ignoreList":[]}